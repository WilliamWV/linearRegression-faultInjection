[INFO -- 2018-11-15 13:49:09]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 13:49:09]
Initialization strings:
[INFO -- 2018-11-15 13:49:09]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 13:49:09]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 13:49:09]
initSignal:0
[INFO -- 2018-11-15 13:49:09]
endSignal:5
[INFO -- 2018-11-15 13:49:09]
faultModel:0
[EXCEPTION -- 2018-11-15 13:49:10]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-15 13:49:10]
Backtrace BEGIN:
#0  0x0000555555555225 in verifyDoubleDup (a=4.2439915829186759e-314, b=0.083193785253132618) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=17) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x9b0xb30x40
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd928
address max offset: 8
Memory content after  bitflip:0x800x000x000x000x000x9b0xb30x40
frame name: main
symbol name: yChecksum
symbol filename: lreg.cpp
symbol line: 233
value: 5019.0000000001164
value address: 0x7fffffffd928
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-15 13:49:10]
Fault Injection Successful after 1.7148723602294922s
[INFO -- 2018-11-15 13:49:13]
event type: exit
[INFO -- 2018-11-15 13:49:13]
exit code: 0
