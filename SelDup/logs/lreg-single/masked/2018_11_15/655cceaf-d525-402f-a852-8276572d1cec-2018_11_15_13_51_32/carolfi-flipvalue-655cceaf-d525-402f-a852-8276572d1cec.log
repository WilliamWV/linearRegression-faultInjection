[INFO -- 2018-11-15 13:51:25]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 13:51:25]
Initialization strings:
[INFO -- 2018-11-15 13:51:25]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 13:51:25]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 13:51:25]
initSignal:0
[INFO -- 2018-11-15 13:51:25]
endSignal:5
[INFO -- 2018-11-15 13:51:25]
faultModel:0
[INFO -- 2018-11-15 13:51:26]
Backtrace BEGIN:
#0  std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator (this=0x7fffffffd860) at /usr/include/c++/7/bits/stl_vector.h:116
#1  0x00005555555568f0 in std::vector<double, std::allocator<double> >::~vector (this=0x7fffffffd860, __in_chrg=<optimized out>) at /usr/include/c++/7/bits/stl_vector.h:435
#2  0x0000555555555fb4 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:199
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

111	    public:
112	      typedef _Alloc allocator_type;
113	
114	      _Tp_alloc_type&
115	      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
116	      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
117	
118	      const _Tp_alloc_type&
119	      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
120	      { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x100xc0
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd918
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x000x100xc1
frame name: main
symbol name: temp
symbol filename: lreg.cpp
symbol line: 233
value: -262144
value address: 0x7fffffffd918
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-15 13:51:26]
Fault Injection Successful after 1.859342336654663s
[INFO -- 2018-11-15 13:51:31]
event type: exit
[INFO -- 2018-11-15 13:51:31]
exit code: 0
