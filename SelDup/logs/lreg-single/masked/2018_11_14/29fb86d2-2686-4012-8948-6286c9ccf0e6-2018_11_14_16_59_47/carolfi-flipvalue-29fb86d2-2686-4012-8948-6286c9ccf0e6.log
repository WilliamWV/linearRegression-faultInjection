[INFO -- 2018-11-14 16:59:39]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 16:59:39]
Initialization strings:
[INFO -- 2018-11-14 16:59:39]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 16:59:39]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 16:59:39]
initSignal:0
[INFO -- 2018-11-14 16:59:39]
endSignal:5
[INFO -- 2018-11-14 16:59:39]
faultModel:0
[EXCEPTION -- 2018-11-14 16:59:41]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-14 16:59:42]
Backtrace BEGIN:
#0  0x0000555555556995 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd830, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/stl_vector.h:326
#1  0x0000555555555f47 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:199
#2  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

321	       *  (i.e. capacity() == size() in the new %vector).
322	       *
323	       *  The newly-created %vector uses a copy of the allocator object used
324	       *  by @a __x (unless the allocator traits dictate a different object).
325	       */
326	      vector(const vector& __x)
327	      : _Base(__x.size(),
328		_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
329	      {
330		this->_M_impl._M_finish =

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b1b8 
address max offset: 4
Memory content after  bitflip:0x000x000x000x08
frame name: std::vector<double, std::allocator<double> >::vector
symbol name: detected
symbol filename: lreg.cpp
symbol line: 58
value: 134217728
value address: 0x55555575b1b8 <detected>
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-14 16:59:42]
Fault Injection Successful after 3.468499183654785s
[INFO -- 2018-11-14 16:59:45]
event type: exit
[INFO -- 2018-11-14 16:59:45]
exit code: 0
