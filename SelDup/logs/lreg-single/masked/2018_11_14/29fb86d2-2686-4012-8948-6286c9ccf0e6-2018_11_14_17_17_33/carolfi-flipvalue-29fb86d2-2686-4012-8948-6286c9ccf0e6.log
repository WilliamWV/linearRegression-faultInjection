[INFO -- 2018-11-14 17:17:21]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 17:17:21]
Initialization strings:
[INFO -- 2018-11-14 17:17:21]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 17:17:21]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 17:17:21]
initSignal:0
[INFO -- 2018-11-14 17:17:21]
endSignal:5
[INFO -- 2018-11-14 17:17:21]
faultModel:0
[EXCEPTION -- 2018-11-14 17:17:23]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-14 17:17:24]
Backtrace BEGIN:
#0  0x0000555555555254 in verifyDoubleDup (a=-4.0102643633105783, b=-4.0102643633105783) at lreg.cpp:71
#1  0x00005555555557ea in predict (v=1) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	

Backtrace END
Memory content before bitflip:0x01
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd7e0
address max offset: 1
Memory content after  bitflip:0x00
frame name: train
symbol name: stopsWhenStable
symbol filename: lreg.cpp
symbol line: 177
value: false
value address: 0x7fffffffd7e0
Type: A boolean type.
Type sizeof: 1

[INFO -- 2018-11-14 17:17:24]
Fault Injection Successful after 3.1767561435699463s
[INFO -- 2018-11-14 17:17:32]
event type: exit
[INFO -- 2018-11-14 17:17:32]
exit code: 0
