[INFO -- 2018-11-14 15:04:39]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 15:04:39]
Initialization strings:
[INFO -- 2018-11-14 15:04:40]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 15:04:40]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 15:04:40]
initSignal:0
[INFO -- 2018-11-14 15:04:40]
endSignal:5
[INFO -- 2018-11-14 15:04:40]
faultModel:0
[INFO -- 2018-11-14 15:04:42]
Backtrace BEGIN:
#0  0x00005555555582ec in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772520, __last=0x555555772538, __result=0x555555772540) at /usr/include/c++/7/bits/stl_algobase.h:366
#1  0x00005555555580ae in std::__copy_move_a<false, double const*, double*> (__first=0x555555772520, __last=0x555555772538, __result=0x555555772540) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x0000555555557bad in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.7322520329377401, __last=1.6304166312761136e-322, __result=0.73220133453422098) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x00005555555573d1 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.7322520329377401, __last=1.6304166312761136e-322, __result=0.73220133453422098) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555556d13 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd830, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x0000555555555f26 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:197
#6  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

361						   is_move_assignable<_Tp>,
362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x100x250x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b170 
address max offset: 8
Memory content after  bitflip:0x100x250x770x550x550x550x200x00
frame name: std::vector<double, std::allocator<double> >::operator=
symbol name: y
symbol filename: lreg.cpp
symbol line: 35
value: std::vector of length 13, capacity 1125899906842640 = {35, 7, 1280, 887, 497, 16, 590, 2330, 917, 475, 1175, 691, 8900}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-14 15:04:42]
Fault Injection Successful after 2.5868406295776367s
[INFO -- 2018-11-14 15:04:48]
event type: exit
[INFO -- 2018-11-14 15:04:48]
exit code: 0
