[INFO -- 2018-11-11 11:03:40]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-11 11:03:40]
Initialization strings:
[INFO -- 2018-11-11 11:03:40]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-11 11:03:40]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-11 11:03:40]
initSignal:0
[INFO -- 2018-11-11 11:03:40]
endSignal:10
[INFO -- 2018-11-11 11:03:40]
faultModel:0
[INFO -- 2018-11-11 11:03:42]
Backtrace BEGIN:
#0  0x000055555555564f in predict (v=-5) at lreg.cpp:111
#1  0x00005555555558da in partialDerivate (pos1=1, pos2=1) at lreg.cpp:138
#2  0x0000555555555a41 in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:152
#3  0x0000555555555caa in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:185
#4  0x00005555555561df in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:241

106		Predicts the value related to v using the Ts variables
107	*/
108	double predict(double v){
109		double val = 0;
110		
111		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T.size(); i1++, i2++){
112			val+= (T[verifyUintDup(i1, i2)] * pow(v, verifyUintDup(i1, i2)));
113		}
114		return val;
115		

Backtrace END
Memory content before bitflip:0x030x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd8ec
address max offset: 4
Memory content after  bitflip:0x030x010x000x00
frame name: main
symbol name: argc
symbol filename: lreg.cpp
symbol line: 209
value: 259
value address: 0x7fffffffd8ec
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-11 11:03:42]
Fault Injection Successful after 2.968411684036255s
[INFO -- 2018-11-11 11:03:56]
event type: exit
[INFO -- 2018-11-11 11:03:56]
exit code: 0
