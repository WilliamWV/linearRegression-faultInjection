[INFO -- 2018-11-16 12:43:24]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 12:43:24]
Initialization strings:
[INFO -- 2018-11-16 12:43:24]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 12:43:24]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 12:43:24]
initSignal:0
[INFO -- 2018-11-16 12:43:24]
endSignal:5
[INFO -- 2018-11-16 12:43:24]
faultModel:0
[INFO -- 2018-11-16 12:43:28]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x1) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x000055555555577d in predict (v=-23) at lreg.cpp:115
#2  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b1b8 
address max offset: 4
Memory content after  bitflip:0x080x000x000x00
frame name: adjust
symbol name: detected
symbol filename: lreg.cpp
symbol line: 58
value: 8
value address: 0x55555575b1b8 <detected>
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-16 12:43:28]
Fault Injection Successful after 4.022123098373413s
[INFO -- 2018-11-16 12:43:32]
event type: exit
[INFO -- 2018-11-16 12:43:32]
exit code: 0
