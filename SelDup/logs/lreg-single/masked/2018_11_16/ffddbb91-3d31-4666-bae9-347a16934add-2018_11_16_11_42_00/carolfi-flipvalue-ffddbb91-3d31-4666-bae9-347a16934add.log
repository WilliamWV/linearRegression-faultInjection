[INFO -- 2018-11-16 11:41:53]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 11:41:53]
Initialization strings:
[INFO -- 2018-11-16 11:41:53]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 11:41:53]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 11:41:53]
initSignal:0
[INFO -- 2018-11-16 11:41:53]
endSignal:5
[INFO -- 2018-11-16 11:41:53]
faultModel:0
[INFO -- 2018-11-16 11:41:54]
Backtrace BEGIN:
#0  0x0000555555555254 in verifyDoubleDup (a=-0.045921024942647416, b=-0.045921024942647416) at lreg.cpp:71
#1  0x00005555555557ea in predict (v=20) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	

Backtrace END
Memory content before bitflip:0x640xb50x290x460x270x1f0x140x40
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd788
address max offset: 8
Memory content after  bitflip:0x640xb50x290x460x270x1f0x140x44
frame name: meanSquaredError
symbol name: error
symbol filename: lreg.cpp
symbol line: 125
value: 9.2794930389602337e+19
value address: 0x7fffffffd788
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-16 11:41:54]
Fault Injection Successful after 1.3560676574707031s
[INFO -- 2018-11-16 11:41:57]
event type: exit
[INFO -- 2018-11-16 11:41:57]
exit code: 0
