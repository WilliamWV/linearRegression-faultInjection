[INFO -- 2018-11-27 16:43:47]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 16:43:47]
Initialization strings:
[INFO -- 2018-11-27 16:43:47]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 16:43:47]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 16:43:47]
initSignal:0
[INFO -- 2018-11-27 16:43:47]
endSignal:3
[INFO -- 2018-11-27 16:43:47]
faultModel:0
[INFO -- 2018-11-27 16:43:48]
Backtrace BEGIN:
#0  0x000055555555536f in verifyDoubleDup (a=-2.991892677297332, b=-2.991892677297332) at lreg.cpp:78
#1  0x00005555555557ea in predict (v=-7) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	
76		}	
77		return a;
78	}
79	
80	
81	void verifyChecksum(vector<double> vec){
82		if(detected!=1){

Backtrace END
Memory content before bitflip:0x000x000x000x000x000xbc0x980xc0
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd918
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000xac0x980xc0
frame name: main
symbol name: temp
symbol filename: lreg.cpp
symbol line: 233
value: -1579
value address: 0x7fffffffd918
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-27 16:43:48]
Fault Injection Successful after 1.5564804077148438s
[INFO -- 2018-11-27 16:43:50]
event type: exit
[INFO -- 2018-11-27 16:43:50]
exit code: 0
