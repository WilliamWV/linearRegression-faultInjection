[INFO -- 2018-11-27 20:29:57]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 20:29:57]
Initialization strings:
[INFO -- 2018-11-27 20:29:57]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 20:29:57]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 20:29:57]
initSignal:0
[INFO -- 2018-11-27 20:29:57]
endSignal:3
[INFO -- 2018-11-27 20:29:57]
faultModel:0
[INFO -- 2018-11-27 20:29:58]
Backtrace BEGIN:
#0  0x00005555555567c4 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b180 <T1>, __n=0) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x00005555555557d4 in predict (v=-3) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Memory content before bitflip:0x000x000x000x000x000xdb0xb20xc0
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd928
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x200xdb0xb20xc0
frame name: main
symbol name: yChecksum
symbol filename: lreg.cpp
symbol line: 233
value: -4827.125
value address: 0x7fffffffd928
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-27 20:29:58]
Fault Injection Successful after 1.1287012100219727s
[INFO -- 2018-11-27 20:29:59]
event type: exit
[INFO -- 2018-11-27 20:29:59]
exit code: 0
