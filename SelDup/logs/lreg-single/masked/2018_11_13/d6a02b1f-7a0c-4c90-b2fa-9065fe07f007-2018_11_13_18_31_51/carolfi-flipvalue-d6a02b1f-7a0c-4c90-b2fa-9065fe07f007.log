[INFO -- 2018-11-13 18:31:42]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-13 18:31:42]
Initialization strings:
[INFO -- 2018-11-13 18:31:42]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-13 18:31:42]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-13 18:31:42]
initSignal:0
[INFO -- 2018-11-13 18:31:42]
endSignal:5
[INFO -- 2018-11-13 18:31:42]
faultModel:0
[INFO -- 2018-11-13 18:31:44]
Backtrace BEGIN:
#0  verifyDoubleDup (a=3.9989813343329583, b=3.9989813343329583) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=0) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x700x180x7d0xfa0xd60xad0xdd0x3f
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd6d8
address max offset: 8
Memory content after  bitflip:0x700x180x7d0xfb0xd60xad0xdd0x3f
frame name: predict
symbol name: val
symbol filename: lreg.cpp
symbol line: 113
value: 0.46373533782423859
value address: 0x7fffffffd6d8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-13 18:31:44]
Fault Injection Successful after 2.676988363265991s
[INFO -- 2018-11-13 18:31:50]
event type: exit
[INFO -- 2018-11-13 18:31:50]
exit code: 0
