[INFO -- 2018-11-12 16:57:54]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 16:57:54]
Initialization strings:
[INFO -- 2018-11-12 16:57:54]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 16:57:54]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 16:57:54]
initSignal:0
[INFO -- 2018-11-12 16:57:54]
endSignal:10
[INFO -- 2018-11-12 16:57:54]
faultModel:0
[EXCEPTION -- 2018-11-12 16:57:57]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-12 16:57:57]
Backtrace BEGIN:
#0  0x0000555555555266 in verifyDoubleDup (a=-3.1187037427444833, b=-3.1187037427444833) at lreg.cpp:71
#1  0x00005555555556bd in predict (v=0) at lreg.cpp:113
#2  0x000055555555578f in meanSquaredError () at lreg.cpp:125
#3  0x0000555555555da8 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:191
#4  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	

Backtrace END
Fliping a bit of the pointer
Memory content before bitflip:0x680xde0xff0xff0xff0x7f0x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd8e0
address max offset: 8
Memory content after  bitflip:0x680xde0xff0xff0xff0x7f0x100x00
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 214
value: 0x7fffffffde68
value address: 0x7fffffffd8e0
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-12 16:57:57]
Fault Injection Successful after 3.7957382202148438s
[INFO -- 2018-11-12 16:58:10]
event type: exit
[INFO -- 2018-11-12 16:58:10]
exit code: 0
