[INFO -- 2018-11-12 15:28:28]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 15:28:28]
Initialization strings:
[INFO -- 2018-11-12 15:28:28]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 15:28:28]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 15:28:28]
initSignal:0
[INFO -- 2018-11-12 15:28:28]
endSignal:10
[INFO -- 2018-11-12 15:28:28]
faultModel:0
[EXCEPTION -- 2018-11-12 15:28:29]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-12 15:28:34]
Backtrace BEGIN:
#0  verifyUintDup (a=4, b=4) at lreg.cpp:61
#1  0x0000555555555642 in predict (v=5) at lreg.cpp:112
#2  0x000055555555591a in partialDerivate (pos1=1, pos2=1) at lreg.cpp:139
#3  0x0000555555555a81 in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:153
#4  0x0000555555555da3 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:190
#5  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

56	*/
57	
58	int detected = 0;
59	
60	
61	UINT verifyUintDup(UINT a, UINT b){
62		if (a != b && detected != 1){
63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x5555557723a0
address max offset: 8
Memory content after  bitflip:0x000x000x000x100x000x000x000x00
frame name: adjust
symbol name: T1
symbol filename: lreg.cpp
symbol line: 36
value: std::vector of length 4, capacity 4 = {6.1850410255422092, 65.772762995008449, -12.012158018143287, -4.8847192418857626}
value address: 0x55555575b180 <T1>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-12 15:28:34]
Fault Injection Successful after 6.70607852935791s
[INFO -- 2018-11-12 15:28:46]
event type: exit
[INFO -- 2018-11-12 15:28:46]
exit code: 0
