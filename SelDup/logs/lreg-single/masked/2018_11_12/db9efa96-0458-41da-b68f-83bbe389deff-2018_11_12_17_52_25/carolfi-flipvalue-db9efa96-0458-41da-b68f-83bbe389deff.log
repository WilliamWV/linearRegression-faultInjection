[INFO -- 2018-11-12 17:52:11]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 17:52:11]
Initialization strings:
[INFO -- 2018-11-12 17:52:11]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 17:52:11]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 17:52:11]
initSignal:0
[INFO -- 2018-11-12 17:52:11]
endSignal:10
[INFO -- 2018-11-12 17:52:11]
faultModel:0
[INFO -- 2018-11-12 17:52:18]
Backtrace BEGIN:
#0  0x0000555555555712 in predict (v=-16) at lreg.cpp:117
#1  0x000055555555591a in partialDerivate (pos1=1, pos2=1) at lreg.cpp:139
#2  0x0000555555555a81 in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:153
#3  0x0000555555555da3 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:190
#4  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

112		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
113			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
114		}
115		return val;
116		
117	}
118	/**
119		Calculates the mean squared error of T
120	*/
121	double meanSquaredError(){

Backtrace END
Memory content before bitflip:0x040x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd900
address max offset: 4
Memory content after  bitflip:0x040x010x000x00
frame name: main
symbol name: N
symbol filename: lreg.cpp
symbol line: 231
value: 260
value address: 0x7fffffffd900
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-12 17:52:18]
Fault Injection Successful after 7.421064615249634s
[INFO -- 2018-11-12 17:52:23]
event type: exit
[INFO -- 2018-11-12 17:52:23]
exit code: 0
