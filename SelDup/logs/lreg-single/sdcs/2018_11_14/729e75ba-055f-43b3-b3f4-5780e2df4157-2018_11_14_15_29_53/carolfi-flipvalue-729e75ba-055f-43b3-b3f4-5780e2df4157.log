[INFO -- 2018-11-14 15:29:44]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 15:29:44]
Initialization strings:
[INFO -- 2018-11-14 15:29:44]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 15:29:44]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 15:29:44]
initSignal:0
[INFO -- 2018-11-14 15:29:44]
endSignal:5
[INFO -- 2018-11-14 15:29:44]
faultModel:0
[INFO -- 2018-11-14 15:29:47]
Backtrace BEGIN:
#0  verifyDoubleDup (a=-3.9590210620847048, b=-3.9590210620847048) at lreg.cpp:77
#1  0x00005555555557ea in predict (v=-8) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	
76		}	
77		return a;
78	}
79	
80	
81	void verifyChecksum(vector<double> vec){

Backtrace END
Memory content before bitflip:0xc70xa10x0e0x3c0x130xac0x0f0xc0
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd488
address max offset: 8
Memory content after  bitflip:0xc70xa10x0e0x3c0x130x2c0x0f0xc0
frame name: verifyDoubleDup
symbol name: a
symbol filename: lreg.cpp
symbol line: 70
value: -3.8965210620847048
value address: 0x7fffffffd488
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 15:29:47]
Fault Injection Successful after 3.143453598022461s
[INFO -- 2018-11-14 15:29:51]
event type: exit
[INFO -- 2018-11-14 15:29:51]
exit code: 0
