[INFO -- 2018-11-26 15:46:14]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 15:46:14]
Initialization strings:
[INFO -- 2018-11-26 15:46:14]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 15:46:14]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 15:46:14]
initSignal:0
[INFO -- 2018-11-26 15:46:14]
endSignal:3
[INFO -- 2018-11-26 15:46:14]
faultModel:0
[INFO -- 2018-11-26 15:46:16]
Backtrace BEGIN:
#0  0x00005555555567c4 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b1a0 <T2>, __n=0) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x00005555555557ab in predict (v=12) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=10000, iter2=10000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x280x40
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd6c8
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x010x000x280x40
frame name: predict
symbol name: v
symbol filename: lreg.cpp
symbol line: 112
value: 12.000007629394531
value address: 0x7fffffffd6c8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-26 15:46:16]
Fault Injection Successful after 2.0051028728485107s
[INFO -- 2018-11-26 15:46:17]
event type: exit
[INFO -- 2018-11-26 15:46:17]
exit code: 0
