[INFO -- 2018-11-12 19:31:40]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 19:31:40]
Initialization strings:
[INFO -- 2018-11-12 19:31:40]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 19:31:40]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 19:31:40]
initSignal:0
[INFO -- 2018-11-12 19:31:40]
endSignal:10
[INFO -- 2018-11-12 19:31:40]
faultModel:0
[INFO -- 2018-11-12 19:31:47]
Backtrace BEGIN:
#0  std::pow<double, unsigned int> (__x=9.8813129168249309e-324, __y=0) at /usr/include/c++/7/cmath:415
#1  0x00005555555556e7 in predict (v=-28) at lreg.cpp:113
#2  0x000055555555591a in partialDerivate (pos1=0, pos2=0) at lreg.cpp:139
#3  0x0000555555555a81 in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:153
#4  0x0000555555555da3 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:190
#5  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

410	#endif
411	
412	  template<typename _Tp, typename _Up>
413	    inline _GLIBCXX_CONSTEXPR
414	    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
415	    pow(_Tp __x, _Up __y)
416	    {
417	      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
418	      return pow(__type(__x), __type(__y));
419	    }

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa00x230x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b188 
address max offset: 8
Memory content after  bitflip:0xa00x330x770x550x550x550x000x00
frame name: adjust
symbol name: T1
symbol filename: lreg.cpp
symbol line: 36
value: std::vector of length 516, capacity 4 = {11.322212989225623, -126.03093004236918, -1.416305537972856, 2.0889195163391987, 0, 4.001931731314097e-322, 4.635570648008152e-310, 1.5810100666919889e-322, 6.0000038146972647, 3.2797995699501439e+178, -8.0000000061919199, -7, 3, 14, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 6.0000038146972647, 6.0002028942238192, -8, -7, 3, 14, 0, 1.6304166312761136e-322, 4.6355706480136855e-310, -2.7726458650812633, 2.5484885051361754, 1.6304166312761136e-322, 4.6355706480287051e-310, -2.7726458650812633, 2.5484885051361754, 1.6304166312761136e-322, 4.6355706480302861e-310, -2.7726339574694721, 2.5485632594063636, 1.6304166312761136e-322, 0, -2.7726458650812633, 2.5484885051361754, 7.1639518646980749e-322, 0, 15, 6, 6, -8, -7, 3, 14, 1082, 506, 107, 674, 587, 866, 191, 767, 0, 1.3487992131466031e-321, 0, 15, 6, 6, -8, -7, 3, 14, 19, 13, 6, -15, -14, 17, -8, -16, -13, 15, -10, 10, 3, 16, 24, 22, 27, 4, -32, -25, -10, -19, -5, -30, 0, 1.3487992131466031e-321, 4.6355706480389816e-310, 15, 6, 6, -8, -7, 3, 14, 1082, 506, 107, 674, 587, 866, 191, 767, 506, 674, 299, 299, 44, 8130, 27554, 21210, 39260, 114, -65406, -31148, -1958, -13640, -228, -53878, 0, 8.7449619313900638e-322, 0, 15, 6, 6, -8, -7, 3, 14, 1082, 506, 107, 674, 587, 866, 191, 767, 506, 674, 299, 299, 0, 2.6136072665001942e-321, -11, 15, 6, 6, -8, -7, 3, 14, 19, 13, 6, -15, -14, 17, -8, -16, -13, 15, -10, 10, 3, 16, 24, 22, 27, 4, -32, -25, -10, -19, -5, -30, -28, -2, 13, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b180 <T1>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-12 19:31:47]
Fault Injection Successful after 7.096804141998291s
[INFO -- 2018-11-12 19:31:49]
event type: exit
[EXCEPTION -- 2018-11-12 19:31:49]
exit code: no exit code available
