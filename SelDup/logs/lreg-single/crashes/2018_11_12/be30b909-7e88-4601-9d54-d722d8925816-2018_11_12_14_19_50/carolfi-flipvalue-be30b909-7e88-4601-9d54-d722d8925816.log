[INFO -- 2018-11-12 14:19:44]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 14:19:44]
Initialization strings:
[INFO -- 2018-11-12 14:19:44]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 14:19:44]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 14:19:44]
initSignal:0
[INFO -- 2018-11-12 14:19:44]
endSignal:10
[INFO -- 2018-11-12 14:19:44]
faultModel:0
[EXCEPTION -- 2018-11-12 14:19:47]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-12 14:19:47]
Backtrace BEGIN:
#0  0x0000555555555756 in meanSquaredError () at lreg.cpp:124
#1  0x0000555555555da8 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:191
#2  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

119		Calculates the mean squared error of T
120	*/
121	double meanSquaredError(){
122		double error = 0;
123		
124		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<x.size(); i1++, i2++){
125			error+= ((predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)]) * (predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)]));	
126		}
127		error /= x.size();
128		return error;

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x720xa50x40
Fault Model: Single bit-flip
base address to flip value: 0x55555575b1c0 
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x720xa50x00
frame name: meanSquaredError
symbol name: yChecksum
symbol filename: lreg.cpp
symbol line: 40
value: 1.5269569354005669e-305
value address: 0x55555575b1c0 <yChecksum>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 14:19:47]
Fault Injection Successful after 3.8838677406311035s
[INFO -- 2018-11-12 14:19:49]
event type: exit
[EXCEPTION -- 2018-11-12 14:19:49]
exit code: no exit code available
