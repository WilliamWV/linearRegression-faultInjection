[INFO -- 2018-11-12 16:27:34]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 16:27:34]
Initialization strings:
[INFO -- 2018-11-12 16:27:34]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 16:27:34]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 16:27:34]
initSignal:0
[INFO -- 2018-11-12 16:27:34]
endSignal:10
[INFO -- 2018-11-12 16:27:34]
faultModel:0
[EXCEPTION -- 2018-11-12 16:27:36]
gdbException: Cannot access memory at address 0x5455557723b0
[EXCEPTION -- 2018-11-12 16:27:37]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-12 16:27:37]
Backtrace BEGIN:
#0  0x000055555555593f in partialDerivate (pos1=0, pos2=0) at lreg.cpp:139
#1  0x0000555555555a81 in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:153
#2  0x0000555555555da3 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:190
#3  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

134	*/
135	double partialDerivate(UINT pos1, UINT pos2){
136		double pD = 0;
137		
138		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<x.size(); i1++, i2++){
139			pD += ((predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)])*pow(x[verifyUintDup(i1, i2)], verifyUintDup(pos1, pos2)));	
140		}
141		pD *= (2.0/x.size());
142		return pD;
143	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x555555772370
address max offset: 8
Memory content after  bitflip:0x100x000x000x000x000x000x000x00
frame name: partialDerivate
symbol name: T2
symbol filename: lreg.cpp
symbol line: 37
value: std::vector of length 2, capacity 2 = {0.14856779818464924, 1.9949051259257051}
value address: 0x55555575b1a0 <T2>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-12 16:27:37]
Fault Injection Successful after 3.611029863357544s
[INFO -- 2018-11-12 16:27:38]
event type: exit
[EXCEPTION -- 2018-11-12 16:27:38]
exit code: no exit code available
