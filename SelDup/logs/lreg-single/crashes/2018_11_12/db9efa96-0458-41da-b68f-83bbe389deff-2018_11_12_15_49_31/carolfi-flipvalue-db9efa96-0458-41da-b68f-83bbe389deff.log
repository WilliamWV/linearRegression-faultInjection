[INFO -- 2018-11-12 15:49:26]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 15:49:26]
Initialization strings:
[INFO -- 2018-11-12 15:49:26]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 15:49:26]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 15:49:26]
initSignal:0
[INFO -- 2018-11-12 15:49:26]
endSignal:10
[INFO -- 2018-11-12 15:49:26]
faultModel:0
[EXCEPTION -- 2018-11-12 15:49:28]
gdbException: Cannot access memory at address 0x80555555772360
[INFO -- 2018-11-12 15:49:29]
Backtrace BEGIN:
#0  0x00005555555556fe in predict (v=0) at lreg.cpp:112
#1  0x00005555555557f7 in meanSquaredError () at lreg.cpp:125
#2  0x0000555555555da8 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:191
#3  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

107		Predicts the value related to v using the Ts variables
108	*/
109	double predict(double v){
110		double val = 0;
111		
112		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
113			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
114		}
115		return val;
116		

Backtrace END
Memory content before bitflip:0xc10xa60xd30x400x2b0xe20x400x41
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd7a8
address max offset: 8
Memory content after  bitflip:0x410xa60xd30x400x2b0xe20x400x41
frame name: meanSquaredError
symbol name: error
symbol filename: lreg.cpp
symbol line: 122
value: 2212950.506459028
value address: 0x7fffffffd7a8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 15:49:29]
Fault Injection Successful after 3.113656520843506s
[INFO -- 2018-11-12 15:49:29]
event type: exit
[EXCEPTION -- 2018-11-12 15:49:29]
exit code: no exit code available
