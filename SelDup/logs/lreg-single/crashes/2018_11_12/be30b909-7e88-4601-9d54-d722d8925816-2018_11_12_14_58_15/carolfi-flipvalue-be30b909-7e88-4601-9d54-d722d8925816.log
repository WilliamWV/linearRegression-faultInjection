[INFO -- 2018-11-12 14:58:10]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 14:58:10]
Initialization strings:
[INFO -- 2018-11-12 14:58:10]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 14:58:10]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 14:58:10]
initSignal:0
[INFO -- 2018-11-12 14:58:10]
endSignal:10
[INFO -- 2018-11-12 14:58:10]
faultModel:0
[INFO -- 2018-11-12 14:58:14]
Backtrace BEGIN:
#0  0x0000555555556661 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b1a0 <T2>, __n=3) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x000055555555567e in predict (v=15) at lreg.cpp:113
#2  0x000055555555591a in partialDerivate (pos1=1, pos2=1) at lreg.cpp:139
#3  0x0000555555555a81 in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:153
#4  0x0000555555555da3 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:190
#5  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x010x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd798
address max offset: 4
Memory content after  bitflip:0x010x800x000x00
frame name: adjust
symbol name: i1
symbol filename: lreg.cpp
symbol line: 152
value: 32769
value address: 0x7fffffffd798
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-12 14:58:14]
Fault Injection Successful after 4.114171028137207s
[INFO -- 2018-11-12 14:58:14]
event type: exit
[EXCEPTION -- 2018-11-12 14:58:14]
exit code: no exit code available
