[INFO -- 2018-11-14 12:41:04]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 12:41:04]
Initialization strings:
[INFO -- 2018-11-14 12:41:04]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 12:41:04]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 12:41:04]
initSignal:0
[INFO -- 2018-11-14 12:41:04]
endSignal:5
[INFO -- 2018-11-14 12:41:04]
faultModel:0
[INFO -- 2018-11-14 12:41:06]
Backtrace BEGIN:
#0  0x00005555555551e0 in verifyUintDup (a=3, b=3) at lreg.cpp:69
#1  0x000055555555576f in predict (v=-15) at lreg.cpp:115
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x900x240x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b160 
address max offset: 8
Memory content after  bitflip:0x900x200x770x550x550x550x000x00
frame name: verifyUintDup
symbol name: y
symbol filename: lreg.cpp
symbol line: 35
value: std::vector of length 141, capacity 144 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4.001931731314097e-322, 4.635570648017638e-310, 1.5810100666919889e-322, 6.0000038146972647, 10.000000005846779, 8, 10, -9, -12, 9, 1.6304166312761136e-322, -1.0241495128514397, 1.0093616954631937, 2.9970209133373258, 1.6304166312761136e-322, -1.0241174302964506, 1.0093616954631937, 2.9970209133373258, 2.4209216646221081e-322, 0, 7, 6, 10, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 1.6251741007080921e-317, 0, 0, 0, 0, 0, 7.1639518646980749e-322, -2, 22, -18, 17, 4, -16, 24, 17, -15, -18, 14, -13, 16, 0, 0, 0, 0, 7.1639518646980749e-322, 8, 1472, 952, 882, 50, 750, 1750, 882, 658, 952, 600, 492, 9448}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-14 12:41:06]
Fault Injection Successful after 2.0618529319763184s
[INFO -- 2018-11-14 12:41:08]
event type: exit
[EXCEPTION -- 2018-11-14 12:41:08]
exit code: no exit code available
