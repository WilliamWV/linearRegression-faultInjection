[INFO -- 2018-11-14 16:20:54]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 16:20:54]
Initialization strings:
[INFO -- 2018-11-14 16:20:54]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 16:20:54]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 16:20:54]
initSignal:0
[INFO -- 2018-11-14 16:20:54]
endSignal:5
[INFO -- 2018-11-14 16:20:54]
faultModel:0
[EXCEPTION -- 2018-11-14 16:20:56]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-14 16:20:57]
Backtrace BEGIN:
#0  0x0000555555555337 in verifyDoubleDup (a=4.0042136924648952, b=4.0042136924648952) at lreg.cpp:78
#1  0x00005555555557ea in predict (v=-18) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	
76		}	
77		return a;
78	}
79	
80	
81	void verifyChecksum(vector<double> vec){
82		if(detected!=1){

Backtrace END
Memory content before bitflip:0x300x750x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd7e8
address max offset: 4
Memory content after  bitflip:0x100x750x000x00
frame name: train
symbol name: iter2
symbol filename: lreg.cpp
symbol line: 177
value: 29968
value address: 0x7fffffffd7e8
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-14 16:20:57]
Fault Injection Successful after 3.248046636581421s
[INFO -- 2018-11-14 16:20:58]
event type: exit
[EXCEPTION -- 2018-11-14 16:20:58]
exit code: no exit code available
