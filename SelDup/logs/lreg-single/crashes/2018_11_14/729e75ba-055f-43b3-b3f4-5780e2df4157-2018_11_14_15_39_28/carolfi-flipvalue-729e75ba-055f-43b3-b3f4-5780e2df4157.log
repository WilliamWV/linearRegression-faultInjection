[INFO -- 2018-11-14 15:39:22]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 15:39:22]
Initialization strings:
[INFO -- 2018-11-14 15:39:22]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 15:39:22]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 15:39:22]
initSignal:0
[INFO -- 2018-11-14 15:39:22]
endSignal:5
[INFO -- 2018-11-14 15:39:22]
faultModel:0
[EXCEPTION -- 2018-11-14 15:39:25]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[EXCEPTION -- 2018-11-14 15:39:25]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-14 15:39:26]
Backtrace BEGIN:
#0  0x00005555555557b4 in predict (v=-26) at lreg.cpp:116
#1  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

111	*/
112	double predict(double v){
113		double val = 0;
114		
115		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
116			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
117		}
118		return val;
119		
120	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x900x260x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b140 
address max offset: 8
Memory content after  bitflip:0x900x270x770x550x550x550x000x00
frame name: train
symbol name: x
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length -15, capacity 0 = {0, 2.4209216646221081e-322, -0.17376050034903398, -0.1712764848827302, -3.9634337213949111, -3.9588896667731404, 0, 2.4209216646221081e-322, -0.17376050034903398, -0.1712764848827302, -3.9634337213949111, -3.9588896667731404, 0, 2.4209216646221081e-322, -0.17414726438533931, -0.17483492721167929, -3.9758537846794502, -4.0553849383819376, 0, 2.4209216646221081e-322, 4.6355706480769259e-310, -0.17483492721167929, -3.9758537846794502, -4.0553849383819376, 0, 2.4209216646221081e-322, 0, -0.1712764848827302, -3.9634337213949111, -3.9588896667731404, 0, 2.1186028959318493e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-14 15:39:26]
Fault Injection Successful after 4.558894634246826s
[INFO -- 2018-11-14 15:39:27]
event type: exit
[EXCEPTION -- 2018-11-14 15:39:27]
exit code: no exit code available
