[INFO -- 2018-11-14 18:03:37]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 18:03:37]
Initialization strings:
[INFO -- 2018-11-14 18:03:37]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 18:03:37]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 18:03:37]
initSignal:0
[INFO -- 2018-11-14 18:03:37]
endSignal:5
[INFO -- 2018-11-14 18:03:37]
faultModel:0
[EXCEPTION -- 2018-11-14 18:03:39]
pythonException: empty range for randrange() (0,0, 0)
[EXCEPTION -- 2018-11-14 18:03:40]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-14 18:03:40]
Backtrace BEGIN:
#0  0x00005555555567db in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b1a0 <T2>, __n=1) at /usr/include/c++/7/bits/stl_vector.h:799
#1  0x00005555555557ab in predict (v=1) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.
803	       *  @param __n The index of the element for which data should be

Backtrace END
Memory content before bitflip:0x010x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd8fc
address max offset: 4
Memory content after  bitflip:0x110x000x000x00
frame name: main
symbol name: i1
symbol filename: lreg.cpp
symbol line: 232
value: 17
value address: 0x7fffffffd8fc
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-14 18:03:40]
Fault Injection Successful after 3.8690247535705566s
[INFO -- 2018-11-14 18:03:41]
event type: exit
[EXCEPTION -- 2018-11-14 18:03:41]
exit code: no exit code available
