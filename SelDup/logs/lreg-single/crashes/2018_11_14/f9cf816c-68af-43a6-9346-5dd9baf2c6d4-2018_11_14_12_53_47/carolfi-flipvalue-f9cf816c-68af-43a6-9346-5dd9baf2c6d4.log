[INFO -- 2018-11-14 12:53:42]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 12:53:42]
Initialization strings:
[INFO -- 2018-11-14 12:53:42]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 12:53:42]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 12:53:42]
initSignal:0
[INFO -- 2018-11-14 12:53:42]
endSignal:5
[INFO -- 2018-11-14 12:53:42]
faultModel:0
[EXCEPTION -- 2018-11-14 12:53:44]
pythonException: empty range for randrange() (0,0, 0)
[EXCEPTION -- 2018-11-14 12:53:45]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-14 12:53:45]
Backtrace BEGIN:
#0  0x000055555555536d in verifyDoubleDup (a=2.2222199999999999e-05, b=2.2222199999999999e-05) at lreg.cpp:78
#1  0x0000555555555be2 in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:158
#2  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	
76		}	
77		return a;
78	}
79	
80	
81	void verifyChecksum(vector<double> vec){
82		if(detected!=1){

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd920
address max offset: 8
Memory content after  bitflip:0x460x5a0x370xf40x390x4d0xf70x3e
frame name: main
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 233
value: 2.2222199971578289e-05
value address: 0x7fffffffd920
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 12:53:45]
Fault Injection Successful after 3.1695971488952637s
[INFO -- 2018-11-14 12:53:47]
event type: exit
[EXCEPTION -- 2018-11-14 12:53:47]
exit code: no exit code available
