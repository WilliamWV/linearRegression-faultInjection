[INFO -- 2018-11-14 12:48:20]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 12:48:20]
Initialization strings:
[INFO -- 2018-11-14 12:48:20]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 12:48:20]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 12:48:20]
initSignal:0
[INFO -- 2018-11-14 12:48:20]
endSignal:5
[INFO -- 2018-11-14 12:48:20]
faultModel:0
[EXCEPTION -- 2018-11-14 12:48:23]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-14 12:48:24]
Backtrace BEGIN:
#0  0x00005555555559fd in partialDerivate (pos1=0, pos2=0) at lreg.cpp:141
#1  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#2  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

136		to the adjustment variable whose position in T is passed in pos
137	*/
138	double partialDerivate(UINT pos1, UINT pos2){
139		double pD = 0;
140		
141		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<(x.size() - 1); i1++, i2++){
142			pD += ((predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)])*pow(x[verifyUintDup(i1, i2)], verifyUintDup(pos1, pos2)));	
143		}
144		pD *= (2.0/(x.size() - 1));
145		return pD;

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x980x260x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b148 
address max offset: 8
Memory content after  bitflip:0x980x260x770x550x550x550x000x04
frame name: partialDerivate
symbol name: x
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 36028797018963985, capacity 32 = {28, 27, -22, 21, 18, -24, -25, 18, 5, -19, -11, 30, 17, -2, -14, -31, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.3487992131466031e-321, -69602, -62526, 29398, -29856, -19002, 38454, 43606, -19002, -464, 18664, 3328, -85314, -16076, -2, 7174, 84388, -76832, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, -0.10675139373772297, 1.30410243521243, -4.9881131388087194, -2.9430924658946203, 0, 2.4209216646221081e-322, -0.10675139373772297, 1.30410243521243, -4.9881131388087194, -2.9430924658946203, 0, 2.4209216646221081e-322, -0.10675139373772297, 1.30410243521243, -4.9881131388087194, -2.9430924658946203, 0, 2.4209216646221081e-322, 4.6355706480840404e-310, 1.3003201765199548, -4.9938891943171342, -3.0439552494942386, 0, 2.4209216646221081e-322, 0, 1.30410243521243, -4.9881131388087194, -2.9430924658946203, 0, 2.1114883506317354e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-14 12:48:24]
Fault Injection Successful after 4.064384698867798s
[INFO -- 2018-11-14 12:48:24]
event type: exit
[EXCEPTION -- 2018-11-14 12:48:24]
exit code: no exit code available
