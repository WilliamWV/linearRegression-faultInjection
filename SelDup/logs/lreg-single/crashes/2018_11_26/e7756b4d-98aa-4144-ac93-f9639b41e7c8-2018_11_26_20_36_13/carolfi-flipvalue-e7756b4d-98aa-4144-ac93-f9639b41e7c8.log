[INFO -- 2018-11-26 20:36:09]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 20:36:09]
Initialization strings:
[INFO -- 2018-11-26 20:36:09]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 20:36:09]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 20:36:09]
initSignal:0
[INFO -- 2018-11-26 20:36:09]
endSignal:3
[INFO -- 2018-11-26 20:36:09]
faultModel:0
[EXCEPTION -- 2018-11-26 20:36:10]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-26 20:36:10]
Backtrace BEGIN:
#0  0x000055555555520f in verifyUintDup (a=1, b=1) at lreg.cpp:69
#1  0x000055555555576f in predict (v=6) at lreg.cpp:115
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Memory content before bitflip:0x200x4e0x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd7d8
address max offset: 4
Memory content after  bitflip:0x200x4f0x000x00
frame name: train
symbol name: iter2
symbol filename: lreg.cpp
symbol line: 177
value: 20256
value address: 0x7fffffffd7d8
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-26 20:36:10]
Fault Injection Successful after 1.48856520652771s
[INFO -- 2018-11-26 20:36:12]
event type: exit
[EXCEPTION -- 2018-11-26 20:36:12]
exit code: no exit code available
