[INFO -- 2018-11-26 16:51:00]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 16:51:00]
Initialization strings:
[INFO -- 2018-11-26 16:51:00]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 16:51:00]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 16:51:00]
initSignal:0
[INFO -- 2018-11-26 16:51:00]
endSignal:3
[INFO -- 2018-11-26 16:51:00]
faultModel:0
[INFO -- 2018-11-26 16:51:02]
Backtrace BEGIN:
#0  0x00005555555567c4 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b180 <T1>, __n=1) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x00005555555557d4 in predict (v=-2) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x800x230x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b180 
address max offset: 8
Memory content after  bitflip:0x800x210x770x550x550x550x000x00
frame name: train
symbol name: T1
symbol filename: lreg.cpp
symbol line: 36
value: std::vector of length 68, capacity 68 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4.001931731314097e-322, 4.635570648017638e-310, 1.5810100666919889e-322, 12.000007629394529, 2.9988444211833614e-310, -5.0000000030959599, 14, -4, 12, 32, 1.6304166312761136e-322, 4.6355706480358196e-310, -0.018636480386081677, -2.9944537928979051, 1.6304166312761136e-322, 4.6355706480374006e-310, -0.018629603636086151, -2.9945863353366149, 2.4209216646221081e-322, 0.18962113666745317, -0.95534894890289834, -1.9454564074908534, -3.9702609698668403}
value address: 0x55555575b180 <T1>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-26 16:51:02]
Fault Injection Successful after 2.1987695693969727s
[INFO -- 2018-11-26 16:51:02]
event type: exit
[EXCEPTION -- 2018-11-26 16:51:02]
exit code: no exit code available
