[INFO -- 2018-11-26 15:29:29]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 15:29:29]
Initialization strings:
[INFO -- 2018-11-26 15:29:29]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 15:29:29]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 15:29:29]
initSignal:0
[INFO -- 2018-11-26 15:29:29]
endSignal:3
[INFO -- 2018-11-26 15:29:29]
faultModel:0
[EXCEPTION -- 2018-11-26 15:29:30]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-26 15:29:30]
Backtrace BEGIN:
#0  0x000055555555581e in predict (v=29) at lreg.cpp:116
#1  0x0000555555555a53 in partialDerivate (pos1=3, pos2=3) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

111	*/
112	double predict(double v){
113		double val = 0;
114		
115		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
116			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
117		}
118		return val;
119		
120	}

Backtrace END
Memory content before bitflip:0xb10x0d0xa30x980x9b0xfa0x050xc1
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd780
address max offset: 8
Memory content after  bitflip:0xb10x0d0xa30x980x9b0xfa0x050xd1
frame name: adjust
symbol name: PD
symbol filename: lreg.cpp
symbol line: 153
value: -2.0848533511256926e+82
value address: 0x7fffffffd780
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-26 15:29:30]
Fault Injection Successful after 1.66298246383667s
[INFO -- 2018-11-26 15:29:30]
event type: exit
[EXCEPTION -- 2018-11-26 15:29:30]
exit code: no exit code available
