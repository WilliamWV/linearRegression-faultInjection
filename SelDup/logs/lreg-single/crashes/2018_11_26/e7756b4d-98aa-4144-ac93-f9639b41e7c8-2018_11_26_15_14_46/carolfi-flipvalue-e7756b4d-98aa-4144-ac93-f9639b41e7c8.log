[INFO -- 2018-11-26 15:14:42]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 15:14:42]
Initialization strings:
[INFO -- 2018-11-26 15:14:42]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 15:14:42]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 15:14:42]
initSignal:0
[INFO -- 2018-11-26 15:14:42]
endSignal:3
[INFO -- 2018-11-26 15:14:42]
faultModel:0
[EXCEPTION -- 2018-11-26 15:14:44]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-26 15:14:45]
Backtrace BEGIN:
#0  0x000055555555583f in predict (v=6) at lreg.cpp:120
#1  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

115		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
116			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
117		}
118		return val;
119		
120	}
121	/**
122		Calculates the mean squared error of T
123	*/
124	double meanSquaredError(){

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x180x40
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd6c8
address max offset: 8
Memory content after  bitflip:0x000x000x200x000x000x000x180x40
frame name: predict
symbol name: v
symbol filename: lreg.cpp
symbol line: 112
value: 6.0000000018626451
value address: 0x7fffffffd6c8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-26 15:14:45]
Fault Injection Successful after 3.039634943008423s
[INFO -- 2018-11-26 15:14:45]
event type: exit
[EXCEPTION -- 2018-11-26 15:14:45]
exit code: no exit code available
