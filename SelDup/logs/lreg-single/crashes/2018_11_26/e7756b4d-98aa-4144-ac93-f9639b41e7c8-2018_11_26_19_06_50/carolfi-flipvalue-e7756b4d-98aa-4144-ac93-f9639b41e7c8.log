[INFO -- 2018-11-26 19:06:46]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 19:06:46]
Initialization strings:
[INFO -- 2018-11-26 19:06:46]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 19:06:46]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 19:06:46]
initSignal:0
[INFO -- 2018-11-26 19:06:46]
endSignal:3
[INFO -- 2018-11-26 19:06:46]
faultModel:0
[INFO -- 2018-11-26 19:06:49]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b180 <T1>, __n=2) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x00005555555557d4 in predict (v=-19) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x020x000x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd700
address max offset: 8
Memory content after  bitflip:0x020x000x000x000x000x000x200x00
frame name: std::vector<double, std::allocator<double> >::operator[]
symbol name: __n
symbol filename: /usr/include/c++/7/bits/stl_vector.h
symbol line: 795
value: 9007199254740994
value address: 0x7fffffffd700
Type: The type is an integer type.
Type sizeof: 8

[INFO -- 2018-11-26 19:06:49]
Fault Injection Successful after 3.1283164024353027s
[INFO -- 2018-11-26 19:06:49]
event type: exit
[EXCEPTION -- 2018-11-26 19:06:49]
exit code: no exit code available
