[INFO -- 2018-11-26 15:40:14]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 15:40:14]
Initialization strings:
[INFO -- 2018-11-26 15:40:14]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 15:40:14]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 15:40:14]
initSignal:0
[INFO -- 2018-11-26 15:40:14]
endSignal:3
[INFO -- 2018-11-26 15:40:14]
faultModel:0
[EXCEPTION -- 2018-11-26 15:40:15]
gdbException: Cannot access memory at address 0x100555555772490
[INFO -- 2018-11-26 15:40:15]
Backtrace BEGIN:
#0  0x0000555555557359 in std::vector<double, std::allocator<double> >::begin (this=0x7fffffffd820) at /usr/include/c++/7/bits/stl_vector.h:563
#1  0x0000555555556ce7 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd820, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#2  0x0000555555555f26 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:197
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

558	       *  Returns a read/write iterator that points to the first
559	       *  element in the %vector.  Iteration is done in ordinary
560	       *  element order.
561	       */
562	      iterator
563	      begin() _GLIBCXX_NOEXCEPT
564	      { return iterator(this->_M_impl._M_start); }
565	
566	      /**
567	       *  Returns a read-only (constant) iterator that points to the

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x800x240x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b150 
address max offset: 8
Memory content after  bitflip:0x000x240x770x550x550x550x000x00
frame name: std::vector<double, std::allocator<double> >::operator=
symbol name: x
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 13, capacity 0 = {-4, -3, -7, -2, -1, -1, -21, -3, -19, 13, 6, 23, -19}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-26 15:40:15]
Fault Injection Successful after 1.4642720222473145s
[INFO -- 2018-11-26 15:40:15]
event type: exit
[EXCEPTION -- 2018-11-26 15:40:15]
exit code: no exit code available
