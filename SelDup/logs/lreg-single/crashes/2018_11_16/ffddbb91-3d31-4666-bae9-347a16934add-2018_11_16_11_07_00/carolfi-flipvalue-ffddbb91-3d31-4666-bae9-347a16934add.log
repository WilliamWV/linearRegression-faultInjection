[INFO -- 2018-11-16 11:06:56]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 11:06:56]
Initialization strings:
[INFO -- 2018-11-16 11:06:56]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 11:06:56]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 11:06:56]
initSignal:0
[INFO -- 2018-11-16 11:06:56]
endSignal:5
[INFO -- 2018-11-16 11:06:56]
faultModel:0
[EXCEPTION -- 2018-11-16 11:06:59]
gdbException: Cannot access memory at address 0x575555772720
[INFO -- 2018-11-16 11:06:59]
Backtrace BEGIN:
#0  0x000055555555594d in meanSquaredError () at lreg.cpp:128
#1  0x0000555555555ee5 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:194
#2  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

123	*/
124	double meanSquaredError(){
125		double error = 0;
126		
127		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<(x.size() - 1); i1++, i2++){
128			error+= ((predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)]) * (predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)]));	
129		}
130		error /= (x.size() - 1);
131		return error;
132	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x800x230x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b180 
address max offset: 8
Memory content after  bitflip:0x820x230x770x550x550x550x000x00
frame name: meanSquaredError
symbol name: T1
symbol filename: lreg.cpp
symbol line: 36
value: std::vector of length 3, capacity 3 = {2.4816145726877343e-235, 2.6578127740106216e+300, 1.8069393436848838e+36, 1.0429895285234905e-309, 3.7826255594622424e-307, 0, 4.4501477170144028e-308, -nan(0xf000000000000), 2.7925984193839124e-33, 0, 0, 0, 0, 0, 6.0522008951395878e-306, 0, 0, 3.4900464774005834e-310, 3.4872878828723285e-310, 1.0441704688602815e-309, 3.4891976790841973e-310, 1.044021929154914e-309, 1.0436824098283595e-309, 3.4732827106519577e-310, 1.0442977886077395e-309, 1.0436824098283595e-309, 3.4887732799260042e-310, 1.0437672896599981e-309, 1.0441704688602815e-309, 1.0440431491128236e-309, 1.0442977886077395e-309, 1.0438521694916368e-309, 6.0522008951395878e-306, 2.7516420536594796e-135, 7.0733194695530085e-315, 1.0480761741112588e-309, 1.0472794828106577e-309, 3.5220540070768649e-310, 1.047856845952552e-309, 3.5166551441528397e-310, 3.5058885022275085e-310, 1.0435975299967209e-309, 3.5255394473313708e-310, 3.5058885022275085e-310, 1.0477683189406477e-309, 3.5093599547167907e-310, 3.5220540070768649e-310, 3.5176626777012453e-310, 3.5255394473313708e-310, 3.5121367851463742e-310, 4.7282819493278029e-308, 2.6871504430268355e-138, -1.4407370423435554e+234, -3.611530146622147e-134, 4.7978154014089931e-308, 1.154122327223217e-128, -1.4407370423435554e+234, -3.611530146622147e-134, 4.7978154014089931e-308, 4.6164893088928679e-128, -8.2990332483147948e+181, -9.8953021903908172e-09, 4.797815406991264e-308, 0, -1.4407367896550579e+234, -3.611530146622147e-134, 1.5353009284508778e-306, 0, 0, 3.5060012332539035e-310, 3.4930172715079348e-310, 3.5005238316184744e-310, 3.4766779039175022e-310, 1.0430033711752506e-309, 3.4766779039175022e-310, 3.4994363087756047e-310, 3.4930172715079348e-310, 3.5018500789878277e-310, 3.4994363087756047e-310, 3.5054707343061622e-310, 1.5723786022949303e-303, 0, 1.044021929154914e-309, 3.4900464774005834e-310, 3.4872878828723285e-310, 1.0441704688602815e-309, 3.4891976790841973e-310, 1.044021929154914e-309, 1.0436824098283595e-309, 3.4732827106519577e-310, 1.0442977886077395e-309, 1.0436824098283595e-309, 3.4887732799260042e-310, 1.0437672896599981e-309, 1.0441704688602815e-309, 1.0440431491128236e-309, 1.0442977886077395e-309, 1.0438521694916368e-309, 1.0448335925449582e-309, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.5493634291557345e-303, 0, 3.5166551441528397e-310, 1.0480761741112588e-309, 1.0472794828106577e-309, 3.5220540070768649e-310, 1.047856845952552e-309, 3.5166551441528397e-310, 3.5058885022275085e-310, 1.0435975299967209e-309, 3.5255394473313708e-310, 3.5058885022275085e-310, 1.0477683189406477e-309, 3.5093599547167907e-310, 3.5220540070768649e-310, 3.5176626777012453e-310, 3.5255394473313708e-310, 3.5121367851463742e-310, 3.5191957367697571e-310, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9.4565638986556059e-308, 3.3054096237759331e-279, 2.4816145726877343e-235, 2.6578127740106216e+300, 1.8069393436848838e+36, 1.0429895285234905e-309, 9.4565638986556059e-308, 8.1602492823987469e+24, 9.8074134524602437e+163, 3.6565880901808588e-284, 1.0238031801447538e+21, 1.0430126961387536e-309, 9.4565638986556059e-308, 8.1602492823987469e+24, 9.8074134524602437e+163, 3.6565880901808588e-284, 1.0238031801447538e+21, 1.0430126961387536e-309, 9.4565638986556059e-308, 1.6632655625031839e-111, 2.1412395754698062e+264, 4.2699751596237582e-212, -7.336365673022655e-273, 1.0429895285617559e-309, 9.4565638986556059e-308, 0, 9.7176537962133042e+163, 3.6565880901808588e-284, 1.0238031801447538e+21, 1.0430126961387536e-309, -4.1146289095274007e-121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b180 <T1>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-16 11:06:59]
Fault Injection Successful after 3.5685203075408936s
[INFO -- 2018-11-16 11:06:59]
event type: exit
[EXCEPTION -- 2018-11-16 11:06:59]
exit code: no exit code available
