[INFO -- 2018-11-16 14:50:12]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 14:50:12]
Initialization strings:
[INFO -- 2018-11-16 14:50:12]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 14:50:12]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 14:50:12]
initSignal:0
[INFO -- 2018-11-16 14:50:12]
endSignal:5
[INFO -- 2018-11-16 14:50:12]
faultModel:0
[EXCEPTION -- 2018-11-16 14:50:12]
pythonException: empty range for randrange() (0,0, 0)
[EXCEPTION -- 2018-11-16 14:50:12]
gdbException: Cannot access memory at address 0x555555732340
[INFO -- 2018-11-16 14:50:13]
Backtrace BEGIN:
#0  0x00005555555557d4 in predict (v=2) at lreg.cpp:116
#1  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

111	*/
112	double predict(double v){
113		double val = 0;
114		
115		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
116			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
117		}
118		return val;
119		
120	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x080x240x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b140 
address max offset: 8
Memory content after  bitflip:0x080x200x770x550x550x550x000x00
frame name: predict
symbol name: x
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 136, capacity 143 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4.001931731314097e-322, 4.635570648017638e-310, -15, 33, 5, 5, 29, 33, -9, 0, 1.6304166312761136e-322, 0.99999941470570086, 1.9999974548959323, 0, 1.6304166312761136e-322, 0.99999941470570086, 1.9999974548959323, 0, 2.4209216646221081e-322, 0, -15, 33, 5, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 7.2316388581783257e-320, 0, 0, 0, 0, 0, 7.1639518646980749e-322, 15, -8, 16, 2, 2, 14, 16, -5, 52}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-16 14:50:13]
Fault Injection Successful after 1.167888879776001s
[INFO -- 2018-11-16 14:50:13]
event type: exit
[EXCEPTION -- 2018-11-16 14:50:13]
exit code: no exit code available
