[INFO -- 2018-11-16 11:14:02]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 11:14:02]
Initialization strings:
[INFO -- 2018-11-16 11:14:02]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 11:14:02]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 11:14:02]
initSignal:0
[INFO -- 2018-11-16 11:14:02]
endSignal:5
[INFO -- 2018-11-16 11:14:02]
faultModel:0
[EXCEPTION -- 2018-11-16 11:14:03]
gdbException: Attempt to dereference a generic pointer.
[EXCEPTION -- 2018-11-16 11:14:05]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-16 11:14:06]
Backtrace BEGIN:
#0  0x00005555555567cf in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b180 <T1>, __n=3) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x00005555555557d4 in predict (v=-17) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa80x270x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b168 
address max offset: 8
Memory content after  bitflip:0xa80x270x750x550x550x550x000x00
frame name: predict
symbol name: y
symbol filename: lreg.cpp
symbol line: 35
value: std::vector of length -16367, capacity 32 = {7269, -63607, -13063, 22361, -42439, 7269, 821, -7, 45593, 821, -33895, 1665, 22361, 8777, 45593, 2957, 12476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, -0.12662884969907467, -0.065909972903771277, -3.9694679805456743, -2.0558458474793326, 0, 2.4209216646221081e-322, -0.12642802362408412, -0.069375887379873158, -3.9694679805456743, -2.0558458474793326, 0, 2.4209216646221081e-322, -0.12642802362408412, -0.069375887379873158, -3.9694679805456743, -2.0558458474793326, 0, 2.4209216646221081e-322, 4.6355706480840404e-310, -0.065815548611311114, -3.9726036701006926, -1.9601442613514042, 0, 2.4209216646221081e-322, 0, -0.069375887379873158, -3.9694679805456743, -2.0558458474793326, 0, 2.1114883506317354e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-16 11:14:06]
Fault Injection Successful after 4.563440561294556s
[INFO -- 2018-11-16 11:14:12]
event type: exit
[EXCEPTION -- 2018-11-16 11:14:12]
exit code: no exit code available
