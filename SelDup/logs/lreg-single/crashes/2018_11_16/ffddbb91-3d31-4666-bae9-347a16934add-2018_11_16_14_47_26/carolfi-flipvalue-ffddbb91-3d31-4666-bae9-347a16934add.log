[INFO -- 2018-11-16 14:47:22]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 14:47:22]
Initialization strings:
[INFO -- 2018-11-16 14:47:22]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 14:47:22]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 14:47:22]
initSignal:0
[INFO -- 2018-11-16 14:47:22]
endSignal:5
[INFO -- 2018-11-16 14:47:22]
faultModel:0
[EXCEPTION -- 2018-11-16 14:47:25]
gdbException: Cannot access memory at address 0x5555d5772610
[EXCEPTION -- 2018-11-16 14:47:25]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-16 14:47:25]
Backtrace BEGIN:
#0  0x0000555555555917 in meanSquaredError () at lreg.cpp:128
#1  0x0000555555555ee5 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:194
#2  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

123	*/
124	double meanSquaredError(){
125		double error = 0;
126		
127		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<(x.size() - 1); i1++, i2++){
128			error+= ((predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)]) * (predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)]));	
129		}
130		error /= (x.size() - 1);
131		return error;
132	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x850x1d0xb40x220xa10xef0x3f0x7a
Fault Model: Single bit-flip
base address to flip value: 0x555555772381
address max offset: 8
Memory content after  bitflip:0x850x0d0xb40x220xa10xef0x3f0x7a
frame name: train
symbol name: T1
symbol filename: lreg.cpp
symbol line: 36
value: std::vector of length 3, capacity 3 = {7.2463150074808269e+280, -7.8398171454108528e+56, 2.5672087134906662e+148, 4.5574302911383677e-305, 1.5177100720513508e+82, 0, 1.4916681462400413e-154, -5.4861240687936887e+303, 6.1363668544819047e-92, 2.8161741812951053e-322, 0, 0, 0, 0, -8.4425425152863546e-227, 0, 0, 1.8074379252991114e-307, 1.8017883237052455e-307, 4.6181407933316965e-305, 1.8056995863471527e-307, 4.6103530348269213e-305, 4.5925524439588637e-305, 1.7765824089018436e-307, 4.6248160149072181e-305, 4.5925524439588637e-305, 1.8048304168711733e-307, 4.5970025916758781e-305, 4.6181407933316965e-305, 4.6114655717561749e-305, 4.6248160149072181e-305, 4.6014527393928925e-305, -8.4425425152863546e-227, 0, 1.8107697843834338e-312, 4.822912232794135e-305, 4.7811426639331786e-305, 1.872989346076136e-307, 4.8114131206269278e-305, 1.8619324748077324e-307, 1.8398823921446541e-307, 4.5881022962418493e-305, 1.8801275277173641e-307, 1.8398823921446541e-307, 4.806771755625198e-305, 1.8469919268427041e-307, 1.872989346076136e-307, 1.863995903514867e-307, 1.8801275277173641e-307, 1.852678875562491e-307, 9.775796363198735e-150, 2.6815615859885194e+154, -4.5770839219289071e-246, 4.0389563724535568e-28, 1.5641226493909793e-148, 2.6815615859885194e+154, -4.5770839219289092e-246, 4.0389563724535568e-28, 1.5641226493909793e-148, -0, -3.1864431145742724e-58, 3.8685516633723374e+25, 1.5641229005325374e-148, 0, -4.5767114681873503e-246, 4.0389563724535568e-28, 3.2558564958000299e+237, 0, 0, 1.8401132652867111e-307, 1.8135221116309671e-307, 1.8288955467373523e-307, 1.7800590868057611e-307, 4.5569512622227484e-305, 1.7800590868057611e-307, 1.8266682999551551e-307, 1.8135221116309671e-307, 1.8316117013497878e-307, 1.8266682999551551e-307, 1.8390268034417369e-307, 1.4054483556880631e-225, 4.9406564584124654e-324, 4.6103530348269213e-305, 1.8074379252991114e-307, 1.8017883237052455e-307, 4.6181407933316965e-305, 1.8056995863471527e-307, 4.6103530348269213e-305, 4.5925524439588637e-305, 1.7765824089018436e-307, 4.6248160149072181e-305, 4.5925524439588637e-305, 1.8048304168711733e-307, 4.5970025916758781e-305, 4.6181407933316965e-305, 4.6114655717561749e-305, 4.6248160149072181e-305, 4.6014527393928925e-305, 4.6529075723708715e-305, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8.4425425152863546e-227, 4.9406564584124654e-324, 1.8619324748077324e-307, 4.822912232794135e-305, 4.7811426639331786e-305, 1.872989346076136e-307, 4.8114131206269278e-305, 1.8619324748077324e-307, 1.8398823921446541e-307, 4.5881022962418493e-305, 1.8801275277173641e-307, 1.8398823921446541e-307, 4.806771755625198e-305, 1.8469919268427041e-307, 1.872989346076136e-307, 1.863995903514867e-307, 1.8801275277173641e-307, 1.852678875562491e-307, 1.8671356084871792e-307, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.131959884853339e-72, 1.7573882009934361e+159, 7.2463150074841287e+280, -7.8398171454108528e+56, 2.5672087134906662e+148, 4.5574302911383677e-305, 1.131959884853339e-72, -3.13151306251402e-294, -2092958.9791494773, -1.0153774161592067e-261, 2.8472260900313494e+278, 4.5565785186074467e-305, 1.131959884853339e-72, 1.9490628022799998e+289, 7.3081033840367853e-245, -9.4777560594882558e+80, 5.073478520889633e-175, 4.5574302919852892e-305, 1.131959884853339e-72, -3.1050361846014179e+231, 4.5770839219289122e-246, -9.4777560594882558e+80, 5.073478520889633e-175, 4.5574302919852892e-305, 1.131959884853339e-72, 0, -131072, -1.0153774161592067e-261, 2.8472260900313494e+278, 4.5565785186074467e-305, 1.131959884853339e-72, 9.8813129168249309e-324, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1.7272337110188889e-77, -5.4865705307238486e+303, 8.2890455643924491e-317, 0, 0, -5.4865705307238997e+303, 7.2911220195563967e-304, 1.2882297539194267e-231...}
value address: 0x55555575b180 <T1>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-16 14:47:25]
Fault Injection Successful after 3.813037872314453s
[INFO -- 2018-11-16 14:47:25]
event type: exit
[EXCEPTION -- 2018-11-16 14:47:25]
exit code: no exit code available
