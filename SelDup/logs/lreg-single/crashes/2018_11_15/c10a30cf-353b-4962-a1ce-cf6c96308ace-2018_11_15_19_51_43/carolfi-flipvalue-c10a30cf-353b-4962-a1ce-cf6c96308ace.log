[INFO -- 2018-11-15 19:51:39]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 19:51:39]
Initialization strings:
[INFO -- 2018-11-15 19:51:39]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 19:51:39]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 19:51:39]
initSignal:0
[INFO -- 2018-11-15 19:51:39]
endSignal:5
[INFO -- 2018-11-15 19:51:39]
faultModel:0
[EXCEPTION -- 2018-11-15 19:51:42]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-15 19:51:42]
Backtrace BEGIN:
#0  0x000055555555578e in predict (v=-13) at lreg.cpp:116
#1  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

111	*/
112	double predict(double v){
113		double val = 0;
114		
115		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
116			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
117		}
118		return val;
119		
120	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x100x260x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b140 
address max offset: 8
Memory content after  bitflip:0x100x270x770x550x550x550x000x00
frame name: predict
symbol name: x
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length -15, capacity 0 = {0, 1.3487992131466031e-321, -3179, 792, -11033, -7695, 76, -1809, 5895, -38, 2916, -11033, 76, 22287, 7216, 40852, 4746, 50490, 100559, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, 0.30910343425673237, -0.51109476483914851, 1.9917704822638196, -1.9823762259769515, 0, 2.4209216646221081e-322, 0.30910343425673237, -0.51109476483914851, 1.9917704822638196, -1.9823762259769515, 0, 2.4209216646221081e-322, 0.30933281107076072, -0.51257086390217033, 1.9982849717409659, -2.019522447818062, 0, 2.4209216646221081e-322, 4.6355706480840404e-310, -0.51257086390217033, 1.9982849717409659, -2.019522447818062, 0, 2.4209216646221081e-322, 0, -0.51109476483914851, 1.9917704822638196, -1.9823762259769515, 0, 2.1114883506317354e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-15 19:51:42]
Fault Injection Successful after 3.733562469482422s
[INFO -- 2018-11-15 19:51:42]
event type: exit
[EXCEPTION -- 2018-11-15 19:51:42]
exit code: no exit code available
