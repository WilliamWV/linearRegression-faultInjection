[INFO -- 2018-11-15 13:04:08]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 13:04:08]
Initialization strings:
[INFO -- 2018-11-15 13:04:08]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 13:04:08]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 13:04:08]
initSignal:0
[INFO -- 2018-11-15 13:04:08]
endSignal:5
[INFO -- 2018-11-15 13:04:08]
faultModel:0
[INFO -- 2018-11-15 13:04:09]
Backtrace BEGIN:
#0  0x0000555555555254 in verifyDoubleDup (a=6.0563128866061264, b=6.0563128866061264) at lreg.cpp:71
#1  0x00005555555557ea in predict (v=6) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x980x260x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b148 
address max offset: 8
Memory content after  bitflip:0x980x260x770x550x550x5d0x000x00
frame name: main
symbol name: x
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 1099511627793, capacity 32 = {7, -32, 0, 15, -28, -11, 31, -15, 8, -8, 6, 3, -26, -25, -19, -27, -121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.3487992131466031e-321, 2183, -194650, 6, 20751, -130222, -7771, 180767, -19839, 3230, -2962, 1392, 195, -104176, -92569, -40483, -116715, -500863, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, 0.096485981892976178, 0.31875942065895735, 1.9917398357461125, 6.0563128866061264, 0, 2.4209216646221081e-322, 0.095951392788074116, 0.32247246451167583, 1.9917398357461125, 6.0563128866061264, 0, 2.4209216646221081e-322, 0.095951392788074116, 0.32247246451167583, 1.9917398357461125, 6.0563128866061264, 0, 2.4209216646221081e-322, 4.6355706480840404e-310, 0.31872621409495061, 2.0059290698893055, 5.9499040994351491, 0, 2.4209216646221081e-322, 0, 0.32247246451167583, 1.9917398357461125, 6.0563128866061264, 0, 2.1114883506317354e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-15 13:04:09]
Fault Injection Successful after 1.743591070175171s
[INFO -- 2018-11-15 13:04:09]
event type: exit
[EXCEPTION -- 2018-11-15 13:04:09]
exit code: no exit code available
