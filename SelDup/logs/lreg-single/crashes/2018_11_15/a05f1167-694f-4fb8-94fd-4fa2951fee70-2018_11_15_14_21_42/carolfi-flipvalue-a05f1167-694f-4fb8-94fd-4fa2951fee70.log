[INFO -- 2018-11-15 14:21:39]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 14:21:39]
Initialization strings:
[INFO -- 2018-11-15 14:21:39]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 14:21:39]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 14:21:39]
initSignal:0
[INFO -- 2018-11-15 14:21:39]
endSignal:5
[INFO -- 2018-11-15 14:21:39]
faultModel:0
[INFO -- 2018-11-15 14:21:41]
Backtrace BEGIN:
#0  0x000055555555520f in verifyUintDup (a=2, b=2) at lreg.cpp:69
#1  0x000055555555579a in predict (v=-8) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x680x240x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b148 
address max offset: 8
Memory content after  bitflip:0x680x240x770x550x550x550x000x02
frame name: partialDerivate
symbol name: x
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 18014398509481997, capacity 16 = {-21, -9, 9, -20, 12, 2, -13, -9, -8, 13, -11, 15, -40, 0, 0, 0, 0, 7.1639518646980749e-322, 1787, 335, 317, 1622, 566, 16, 691, 335, 266, 665, 497, 887, 7984, 0, 0, 0, 0, 1.6304166312761136e-322, 0.31152213264535711, -0.98251019674301654, 4.0069602916027822, 1.6304166312761136e-322, 0.31146743420865541, -0.98251019674301654, 4.0069602916027822, 1.6304166312761136e-322, 4.6355706480405627e-310, -0.98248661523843339, 4.0068525468550051, 1.6304166312761136e-322, 0, -0.98251019674301654, 4.0069602916027822, 2.155756632499111e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-15 14:21:41]
Fault Injection Successful after 2.1550071239471436s
[INFO -- 2018-11-15 14:21:41]
event type: exit
[EXCEPTION -- 2018-11-15 14:21:41]
exit code: no exit code available
