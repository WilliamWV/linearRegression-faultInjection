[INFO -- 2018-11-27 21:41:33]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 21:41:33]
Initialization strings:
[INFO -- 2018-11-27 21:41:33]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 21:41:33]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 21:41:33]
initSignal:0
[INFO -- 2018-11-27 21:41:33]
endSignal:3
[INFO -- 2018-11-27 21:41:33]
faultModel:0
[EXCEPTION -- 2018-11-27 21:41:35]
gdbException: Cannot access memory at address 0x5555d5772720
[INFO -- 2018-11-27 21:41:35]
Backtrace BEGIN:
#0  0x000055555555512d in verifyUintDup (a=3, b=3) at lreg.cpp:62
#1  0x00005555555557fe in predict (v=-28) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

57	
58	int detected = 0;
59	
60	
61	UINT verifyUintDup(UINT a, UINT b){
62		if (a != b && detected != 1){
63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	

Backtrace END
Memory content before bitflip:0xcf0x4d0x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd780
address max offset: 8
Memory content after  bitflip:0xcf0x4f0x000x000x000x000x000x00
frame name: adjust
symbol name: PD
symbol filename: lreg.cpp
symbol line: 153
value: 1.0094255210182508e-319
value address: 0x7fffffffd780
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-27 21:41:35]
Fault Injection Successful after 2.395070791244507s
[INFO -- 2018-11-27 21:41:35]
event type: exit
[EXCEPTION -- 2018-11-27 21:41:35]
exit code: no exit code available
