[INFO -- 2018-11-27 21:15:32]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 21:15:32]
Initialization strings:
[INFO -- 2018-11-27 21:15:32]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 21:15:32]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 21:15:32]
initSignal:0
[INFO -- 2018-11-27 21:15:32]
endSignal:3
[INFO -- 2018-11-27 21:15:32]
faultModel:0
[EXCEPTION -- 2018-11-27 21:15:34]
gdbException: Cannot access memory at address 0x555455772830
[EXCEPTION -- 2018-11-27 21:15:34]
gdbException: Cannot access memory at address 0x555455772830
[INFO -- 2018-11-27 21:15:34]
Backtrace BEGIN:
#0  0x0000555555555218 in verifyUintDup (a=3, b=3) at lreg.cpp:69
#1  0x000055555555576f in predict (v=-17) at lreg.cpp:115
#2  0x0000555555555928 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Memory content before bitflip:0xbc0xe40xc60x0e0xe50x3e0x490x41
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd788
address max offset: 8
Memory content after  bitflip:0xbc0xe40xc60x0e0xe50x3e0x090x41
frame name: meanSquaredError
symbol name: error
symbol filename: lreg.cpp
symbol line: 125
value: 206812.63221529673
value address: 0x7fffffffd788
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-27 21:15:34]
Fault Injection Successful after 2.7734618186950684s
[INFO -- 2018-11-27 21:15:35]
event type: exit
[EXCEPTION -- 2018-11-27 21:15:35]
exit code: no exit code available
