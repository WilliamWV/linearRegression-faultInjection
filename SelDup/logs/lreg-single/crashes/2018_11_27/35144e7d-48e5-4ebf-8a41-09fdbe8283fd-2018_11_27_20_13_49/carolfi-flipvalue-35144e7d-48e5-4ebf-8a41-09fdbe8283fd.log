[INFO -- 2018-11-27 20:13:46]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 20:13:46]
Initialization strings:
[INFO -- 2018-11-27 20:13:46]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 20:13:46]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 20:13:46]
initSignal:0
[INFO -- 2018-11-27 20:13:46]
endSignal:3
[INFO -- 2018-11-27 20:13:46]
faultModel:0
[INFO -- 2018-11-27 20:13:48]
Backtrace BEGIN:
#0  0x00005555555567db in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b180 <T1>, __n=1) at /usr/include/c++/7/bits/stl_vector.h:799
#1  0x00005555555557d4 in predict (v=-18) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.
803	       *  @param __n The index of the element for which data should be

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa80x270x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b168 
address max offset: 8
Memory content after  bitflip:0xa80x270x770x550x550x450x000x00
frame name: std::vector<double, std::allocator<double> >::operator[]
symbol name: y
symbol filename: lreg.cpp
symbol line: 35
value: std::vector of length -2199023255535, capacity 32 = {13145, 2813, 13, -99407, -575, 22793, -121267, 15973, 22793, 86413, -63895, 10673, -1507, 41, 19181, -38047, -130860, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, 0.13558795637596011, -0.8016701060852266, -1.9535167079342202, -4.0451144375220416, 0, 2.4209216646221081e-322, 0.13558795637596011, -0.8016701060852266, -1.9535167079342202, -4.0451144375220416, 0, 2.4209216646221081e-322, 0.13558795637596011, -0.8016701060852266, -1.9535167079342202, -4.0451144375220416, 0, 2.4209216646221081e-322, 4.6355706480840404e-310, -0.79886997499135037, -1.9440864193083809, -3.9704942882523264, 0, 2.4209216646221081e-322, 0, -0.8016701060852266, -1.9535167079342202, -4.0451144375220416, 0, 2.1114883506317354e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-27 20:13:48]
Fault Injection Successful after 2.3310461044311523s
[INFO -- 2018-11-27 20:13:49]
event type: exit
[EXCEPTION -- 2018-11-27 20:13:49]
exit code: no exit code available
