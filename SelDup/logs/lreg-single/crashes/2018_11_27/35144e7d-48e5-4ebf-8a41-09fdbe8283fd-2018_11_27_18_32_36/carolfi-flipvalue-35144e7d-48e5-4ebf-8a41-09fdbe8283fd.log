[INFO -- 2018-11-27 18:32:33]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 18:32:33]
Initialization strings:
[INFO -- 2018-11-27 18:32:33]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 18:32:33]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 18:32:33]
initSignal:0
[INFO -- 2018-11-27 18:32:33]
endSignal:3
[INFO -- 2018-11-27 18:32:33]
faultModel:0
[EXCEPTION -- 2018-11-27 18:32:35]
gdbException: Cannot access memory at address 0x555515772830
[INFO -- 2018-11-27 18:32:35]
Backtrace BEGIN:
#0  verifyUintDup (a=6, b=6) at lreg.cpp:68
#1  0x0000555555555a31 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd718
address max offset: 4
Memory content after  bitflip:0x000x000x000x08
frame name: partialDerivate
symbol name: pos2
symbol filename: lreg.cpp
symbol line: 138
value: 134217728
value address: 0x7fffffffd718
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-27 18:32:35]
Fault Injection Successful after 2.349320650100708s
[INFO -- 2018-11-27 18:32:35]
event type: exit
[EXCEPTION -- 2018-11-27 18:32:35]
exit code: no exit code available
