[INFO -- 2018-11-13 19:48:23]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-13 19:48:23]
Initialization strings:
[INFO -- 2018-11-13 19:48:23]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-13 19:48:23]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-13 19:48:23]
initSignal:0
[INFO -- 2018-11-13 19:48:23]
endSignal:5
[INFO -- 2018-11-13 19:48:23]
faultModel:0
[INFO -- 2018-11-13 19:48:26]
Backtrace BEGIN:
#0  verifyUintDup (a=0, b=0) at lreg.cpp:68
#1  0x00005555555557c3 in predict (v=-13) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa00x230x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b188 
address max offset: 8
Memory content after  bitflip:0xa00xa30x770x550x550x550x000x00
frame name: partialDerivate
symbol name: T1
symbol filename: lreg.cpp
symbol line: 36
value: std::vector of length 4100, capacity 4 = {0.067428744675226859, -0.087825081051007961, 2.0158436653498661, -0.080295309193867209, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 6.3482494834141768e-320, 0, 0, 0, 0, 0, 7.1639518646980749e-322, 0, -2, -18, -17, 4, -13, -30, 8, 32, -26, -31, -24, 29, 8, -26, 16, 0, 7.1639518646980749e-322, 4.6355706480215905e-310, 16, 720, 646, 16, 390, 1920, 96, 1920, 1456, 2046, 1248, 1566, 96, 1456, 448, 0, 1.6304166312761136e-322, 4.6355706480136855e-310, 3.9998158625093021, 1.0001909600724825, 1.6304166312761136e-322, 4.6355706480389816e-310, 3.9998158625093021, 1.0001909600724825, 1.6304166312761136e-322, 4.6355706480405627e-310, 3.999805127835625, 1.000355063600249, 1.6304166312761136e-322, 0, 3.9998158625093021, 1.0001909600724825, 5.5829417980060859e-322, 0, 166, 141, 481, 61, 222, 481, 6, -3, 22, 78, 481, 2137, 1.3487992131466031e-321, 30, -2, -18, -17, 4, -13, -30, 8, 32, -26, -31, -24, 29, 8, -26, 16, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.3487992131466031e-321, 1680, 16, 720, 646, 16, 390, 1920, 96, 1920, 1456, 2046, 1248, 1566, 96, 1456, 448, 15720, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, 0.067428744675226859, -0.087825081051007961, 2.0158436653498661, -0.080295309193867209, 0, 2.4209216646221081e-322, 0.067428744675226859, -0.087825081051007961, 2.0158436653498661, -0.080295309193867209, 0, 2.4209216646221081e-322, 0, 0, 0, 0, 0, 2.4209216646221081e-322, 4.6355706480840404e-310, -0.082586689680715558, 2.0093227428612099, 0.071022348906212535, 0, 2.4209216646221081e-322, 0, -0.087825081051007961, 2.0158436653498661, -0.080295309193867209, 0, 2.1114883506317354e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b180 <T1>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-13 19:48:26]
Fault Injection Successful after 3.904421806335449s
