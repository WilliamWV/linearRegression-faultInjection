[INFO -- 2018-11-11 11:02:53]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-11 11:02:53]
Initialization strings:
[INFO -- 2018-11-11 11:02:53]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-11 11:02:53]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-11 11:02:53]
initSignal:0
[INFO -- 2018-11-11 11:02:53]
endSignal:10
[INFO -- 2018-11-11 11:02:53]
faultModel:0
[INFO -- 2018-11-11 11:02:56]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd840, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/vector.tcc:216
#1  0x0000555555555cf0 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:189
#2  0x00005555555561df in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:241

211				    this->_M_impl._M_end_of_storage
212				    - this->_M_impl._M_start);
213		      this->_M_impl._M_start = __tmp;
214		      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
215		    }
216		  else if (size() >= __xlen)
217		    {
218		      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
219				    end(), _M_get_Tp_allocator());
220		    }

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x380xc0
Fault Model: Single bit-flip
base address to flip value: 0x55555575a198 
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x400x000x380xc0
frame name: main
symbol name: xChecksum
symbol filename: lreg.cpp
symbol line: 38
value: -24.0009765625
value address: 0x55555575a198 <xChecksum>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-11 11:02:56]
Fault Injection Successful after 3.2275962829589844s
[INFO -- 2018-11-11 11:03:11]
event type: exit
[INFO -- 2018-11-11 11:03:11]
exit code: 0
