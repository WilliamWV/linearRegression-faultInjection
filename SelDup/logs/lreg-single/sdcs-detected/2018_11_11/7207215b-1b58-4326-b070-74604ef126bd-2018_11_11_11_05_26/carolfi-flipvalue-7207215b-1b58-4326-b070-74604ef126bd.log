[INFO -- 2018-11-11 11:05:10]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-11 11:05:10]
Initialization strings:
[INFO -- 2018-11-11 11:05:10]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-11 11:05:10]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-11 11:05:10]
initSignal:0
[INFO -- 2018-11-11 11:05:10]
endSignal:10
[INFO -- 2018-11-11 11:05:10]
faultModel:0
[INFO -- 2018-11-11 11:05:14]
Backtrace BEGIN:
#0  0x0000555555556513 in std::vector<double, std::allocator<double> >::size (this=0x55555575a180 <T>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x000055555555564f in predict (v=1) at lreg.cpp:111
#2  0x00005555555558da in partialDerivate (pos1=1, pos2=1) at lreg.cpp:138
#3  0x0000555555555a41 in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:152
#4  0x0000555555555caa in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:185
#5  0x00005555555561df in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:241

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Memory content before bitflip:0x080x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd92c
address max offset: 4
Memory content after  bitflip:0x080x000x040x00
frame name: main
symbol name: pred2
symbol filename: lreg.cpp
symbol line: 228
value: 262152
value address: 0x7fffffffd92c
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-11 11:05:14]
Fault Injection Successful after 4.252770900726318s
[INFO -- 2018-11-11 11:05:24]
event type: exit
[INFO -- 2018-11-11 11:05:24]
exit code: 0
