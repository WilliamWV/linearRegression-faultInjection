[INFO -- 2018-11-13 18:39:02]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-13 18:39:02]
Initialization strings:
[INFO -- 2018-11-13 18:39:02]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-13 18:39:02]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-13 18:39:02]
initSignal:0
[INFO -- 2018-11-13 18:39:02]
endSignal:5
[INFO -- 2018-11-13 18:39:02]
faultModel:0
[INFO -- 2018-11-13 18:39:04]
Backtrace BEGIN:
#0  verifyDoubleDup (a=0.24920953317550543, b=0.24920953317550543) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=14) at lreg.cpp:116
#2  0x0000555555555928 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x6c0x8c0x6b0x150x190xe60xcf0x3f
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd4e8
address max offset: 8
Memory content after  bitflip:0x6c0x8c0x6b0x150x190xe60xcf0x2f
frame name: verifyDoubleDup
symbol name: a
symbol filename: lreg.cpp
symbol line: 70
value: 2.1522155340400658e-78
value address: 0x7fffffffd4e8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-13 18:39:04]
Fault Injection Successful after 2.1455233097076416s
[INFO -- 2018-11-13 18:39:10]
event type: exit
[INFO -- 2018-11-13 18:39:10]
exit code: 0
