[INFO -- 2018-11-12 19:52:33]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 19:52:33]
Initialization strings:
[INFO -- 2018-11-12 19:52:33]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 19:52:33]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 19:52:33]
initSignal:0
[INFO -- 2018-11-12 19:52:33]
endSignal:10
[INFO -- 2018-11-12 19:52:33]
faultModel:0
[INFO -- 2018-11-12 19:52:35]
Backtrace BEGIN:
#0  0x0000555555555337 in verifyDoubleDup (a=2.4963978395321522, b=2.4963978395321522) at lreg.cpp:78
#1  0x00005555555556bd in predict (v=3) at lreg.cpp:113
#2  0x000055555555591a in partialDerivate (pos1=1, pos2=1) at lreg.cpp:139
#3  0x0000555555555a81 in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:153
#4  0x0000555555555da3 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:190
#5  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	
76		}	
77		return a;
78	}
79	
80	
81	void verifyChecksum(vector<double> vec, double check){
82		if(detected!=1){

Backtrace END
Memory content before bitflip:0x000x000x000x000x000xb00xb90x40
Fault Model: Single bit-flip
base address to flip value: 0x55555575b1c0 
address max offset: 8
Memory content after  bitflip:0x000x000x000x200x000xb00xb90x40
frame name: predict
symbol name: yChecksum
symbol filename: lreg.cpp
symbol line: 40
value: 6576.00048828125
value address: 0x55555575b1c0 <yChecksum>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 19:52:35]
Fault Injection Successful after 2.362694025039673s
[INFO -- 2018-11-12 19:52:48]
event type: exit
[INFO -- 2018-11-12 19:52:48]
exit code: 0
