[INFO -- 2018-11-16 12:09:27]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 12:09:27]
Initialization strings:
[INFO -- 2018-11-16 12:09:27]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 12:09:27]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 12:09:27]
initSignal:0
[INFO -- 2018-11-16 12:09:27]
endSignal:5
[INFO -- 2018-11-16 12:09:27]
faultModel:0
[INFO -- 2018-11-16 12:09:30]
Backtrace BEGIN:
#0  0x0000555555555c5c in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:159
#1  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#2  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

154		
155		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
156			PD = partialDerivate(verifyUintDup(i1, i2), verifyUintDup(i1, i2));
157			// alpha is different from the canonical version because this works better
158			double diff = ((verifyDoubleDup(alpha1, alpha2) / (sqrt( fabs(PD) ))) * PD);
159			T1[verifyUintDup(i1, i2)]= T1[verifyUintDup(i1, i2)] - diff;
160			T2[verifyUintDup(i1, i2)]= T2[verifyUintDup(i1, i2)] - diff;
161			 
162		}
163	}

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd7c8
address max offset: 8
Memory content after  bitflip:0x470x5a0xb70xf40x390x4d0xf70x3e
frame name: train
symbol name: alpha1
symbol filename: lreg.cpp
symbol line: 177
value: 2.2222200000000002e-05
value address: 0x7fffffffd7c8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-16 12:09:30]
Fault Injection Successful after 3.5013785362243652s
[INFO -- 2018-11-16 12:09:34]
event type: exit
[INFO -- 2018-11-16 12:09:34]
exit code: 0
