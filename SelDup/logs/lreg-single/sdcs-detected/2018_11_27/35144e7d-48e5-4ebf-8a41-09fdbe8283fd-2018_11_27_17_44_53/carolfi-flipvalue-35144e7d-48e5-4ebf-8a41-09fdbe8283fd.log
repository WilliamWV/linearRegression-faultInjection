[INFO -- 2018-11-27 17:44:51]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 17:44:51]
Initialization strings:
[INFO -- 2018-11-27 17:44:51]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 17:44:51]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 17:44:51]
initSignal:0
[INFO -- 2018-11-27 17:44:51]
endSignal:3
[INFO -- 2018-11-27 17:44:51]
faultModel:0
[INFO -- 2018-11-27 17:44:52]
Backtrace BEGIN:
#0  0x000055555555536f in verifyDoubleDup (a=0.96370986612440912, b=0.96370986612440912) at lreg.cpp:78
#1  0x00005555555557ea in predict (v=-10) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=10000, iter2=10000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	
76		}	
77		return a;
78	}
79	
80	
81	void verifyChecksum(vector<double> vec){
82		if(detected!=1){

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd8ec
address max offset: 4
Memory content after  bitflip:0x000x800x000x00
frame name: main
symbol name: i1
symbol filename: lreg.cpp
symbol line: 232
value: 32768
value address: 0x7fffffffd8ec
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-27 17:44:52]
Fault Injection Successful after 1.516195297241211s
[INFO -- 2018-11-27 17:44:52]
event type: exit
[INFO -- 2018-11-27 17:44:52]
exit code: 0
