[INFO -- 2018-11-26 16:56:25]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 16:56:25]
Initialization strings:
[INFO -- 2018-11-26 16:56:25]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 16:56:25]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 16:56:25]
initSignal:0
[INFO -- 2018-11-26 16:56:25]
endSignal:3
[INFO -- 2018-11-26 16:56:25]
faultModel:0
[INFO -- 2018-11-26 16:56:26]
Backtrace BEGIN:
#0  0x000055555555523e in verifyDoubleDup (a=-1.9397270743229067, b=-1.9397270743229067) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=-9) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x200x270x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b160 
address max offset: 8
Memory content after  bitflip:0x200x250x770x550x550x550x000x00
frame name: main
symbol name: y
symbol filename: lreg.cpp
symbol line: 35
value: std::vector of length 81, capacity 96 = {4.6355706480136855e-310, -0.018636480386081677, -2.9944537928979051, 1.6304166312761136e-322, 4.6355706480389816e-310, -0.018636480386081677, -2.9944537928979051, 1.6304166312761136e-322, 4.6355706480405627e-310, -0.018629603636086151, -2.9945863353366149, 1.6304166312761136e-322, 0, -0.018636480386081677, -2.9944537928979051, 5.5829417980060859e-322, 0, -23, -143, -8, 1, 1, -1319, -23, -1079, -503, -104, -1583, -4827, 1.3487992131466031e-321, -15, -9, -1, 29, 5, -18, 31, -16, -18, -28, 25, -14, 7, -2, -17, 21, -20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.3487992131466031e-321, 13145, 2813, 13, -99407, -575, 22793, -121267, 15973, 22793, 86413, -63895, 10673, -1507, 41, 19181, -38047, -130860}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-26 16:56:26]
Fault Injection Successful after 1.9596145153045654s
[INFO -- 2018-11-26 16:56:28]
event type: exit
[INFO -- 2018-11-26 16:56:28]
exit code: 0
