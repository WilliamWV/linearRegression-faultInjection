[INFO -- 2018-11-26 20:29:19]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 20:29:19]
Initialization strings:
[INFO -- 2018-11-26 20:29:19]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 20:29:19]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 20:29:19]
initSignal:0
[INFO -- 2018-11-26 20:29:19]
endSignal:3
[INFO -- 2018-11-26 20:29:19]
faultModel:0
[INFO -- 2018-11-26 20:29:20]
Backtrace BEGIN:
#0  verifyDoubleDup (a=-2.9942471000440971, b=-2.9942471000440971) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=6) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x200x4e0x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd7d8
address max offset: 4
Memory content after  bitflip:0x200x4e0x080x00
frame name: train
symbol name: iter2
symbol filename: lreg.cpp
symbol line: 177
value: 544288
value address: 0x7fffffffd7d8
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-26 20:29:20]
Fault Injection Successful after 1.4711873531341553s
[INFO -- 2018-11-26 20:29:21]
event type: exit
[INFO -- 2018-11-26 20:29:21]
exit code: 0
