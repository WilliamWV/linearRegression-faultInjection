[INFO -- 2018-11-12 17:51:05]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 17:51:05]
Initialization strings:
[INFO -- 2018-11-12 17:51:05]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 17:51:05]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 17:51:05]
initSignal:0
[INFO -- 2018-11-12 17:51:05]
endSignal:10
[INFO -- 2018-11-12 17:51:05]
faultModel:1
[INFO -- 2018-11-12 17:51:12]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x55555575b140 <x>) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x00005555555559c1 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:141
#2  0x0000555555555a81 in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:153
#3  0x0000555555555da3 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:190
#4  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x300x280x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575b140 
address max offset: 8
Memory content after  bitflip:0x720x280x770x550x550x550x000x00
frame name: partialDerivate
symbol name: x
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 27, capacity 55 = {1.0439370493232754e-309, 3.4868634837141355e-310, 1.0435975299967209e-309, 1.0439370493232754e-309, 1.0439370493232754e-309, 1.0441068089865526e-309, 3.4843170887649771e-310, 0, 3.4881366811887146e-310, 3.4766779039175022e-310, 1.044021929154914e-309, 3.4872878828723285e-310, 3.4894098786632938e-310, 3.4902586769796799e-310, 1.0441916888181912e-309, 3.4732827106519577e-310, 1.0442977886077395e-309, 3.4851658870813633e-310, 3.4809218954994327e-310, 3.4896220782423903e-310, 3.4877122820305216e-310, 1.0436824098283595e-309, 1.0440643690707333e-309, 3.4891976790841973e-310, 1.0442553486919202e-309, 3.4885610803469077e-310, 1.0435975299967209e-309, 3.4855902862395563e-310, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0153908169315021e-298, 0, 3.4889854795051007e-310, 1.0439370493232754e-309, 3.4881366811887146e-310, 3.4885610803469077e-310, 1.0433428905018051e-309, 3.4902586769796799e-310, 3.4894098786632938e-310, 1.0443614484814684e-309, 1.0459164735220352e-309, 1.046035835785277e-309, 1.0452500342189351e-309, 1.0459164735220352e-309, 1.0459164735220352e-309, 1.046262292523594e-309, 1.0455404823928235e-309, 3.4783755005502744e-310, 1.0463458461078633e-309, 1.0437248497441788e-309, 1.0460686604076685e-309, 1.0461362990235055e-309, 1.0461847070524869e-309, 1.0463358992525931e-309, 1.0461502246208837e-309, 3.4732827106519577e-310, 1.0463358992525931e-309, 1.0452818641557996e-309, 1.0441704688602815e-309, 1.0462205157314594e-309, 1.0458329199377659e-309, 1.0451757643662513e-309, 1.0458833173378013e-309, 1.0461502246208837e-309, 1.0462576506578013e-309, 1.0460504245063398e-309, 1.0450802745556579e-309, 1.0453892901927172e-309, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9.4565638986556059e-308, -1.602377057096966e-65, 6.1946290850467944e+144, 6.759568812339314e+136, 4.6251665553792682e-222, 3.4569364575869949e-310, 9.4565638986556059e-308, -4.8306719037715729e+170, 2.9770100185666034e-120, 6.7595689639681075e+136, 4.6251665553792682e-222, 3.4569364575869949e-310, 9.4565638986556059e-308, -4.8306719037715729e+170, 2.9770100185666034e-120, 6.7595689639681075e+136, 4.6251665553792682e-222, 3.4569364575869949e-310, 9.4565638986556059e-308, 1.2272733663244316e-91, -3.8547456323039875e+154, -2.4073208577008017e+274, -6.0173026740655025e+162, 1.0407702741182196e-309, 9.4565638986556059e-308, 0, 2.9044439361369887e-120, 6.7595689639681075e+136, 4.6251665553792682e-222, 3.4569364575869949e-310, -5.5763620033515873e-141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-12 17:51:12]
Fault Injection Successful after 7.6629798412323s
