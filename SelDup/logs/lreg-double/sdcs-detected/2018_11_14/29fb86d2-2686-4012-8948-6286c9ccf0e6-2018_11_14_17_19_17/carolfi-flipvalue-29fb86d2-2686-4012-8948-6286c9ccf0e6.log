[INFO -- 2018-11-14 17:19:07]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 17:19:07]
Initialization strings:
[INFO -- 2018-11-14 17:19:07]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 17:19:07]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 17:19:07]
initSignal:0
[INFO -- 2018-11-14 17:19:07]
endSignal:5
[INFO -- 2018-11-14 17:19:07]
faultModel:1
[INFO -- 2018-11-14 17:19:10]
Backtrace BEGIN:
#0  0x000055555555583d in predict (v=-9) at lreg.cpp:120
#1  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

115		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
116			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
117		}
118		return val;
119		
120	}
121	/**
122		Calculates the mean squared error of T
123	*/
124	double meanSquaredError(){

Backtrace END
Memory content before bitflip:0x050x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd730
address max offset: 4
Memory content after  bitflip:0x550x000x000x00
frame name: partialDerivate
symbol name: i1
symbol filename: lreg.cpp
symbol line: 141
value: 85
value address: 0x7fffffffd730
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-14 17:19:10]
Fault Injection Successful after 3.022230863571167s
[INFO -- 2018-11-14 17:19:16]
event type: exit
[INFO -- 2018-11-14 17:19:16]
exit code: 0
