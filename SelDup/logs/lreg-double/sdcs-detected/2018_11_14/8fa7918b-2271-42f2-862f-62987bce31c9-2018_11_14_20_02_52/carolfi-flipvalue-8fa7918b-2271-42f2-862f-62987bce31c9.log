[INFO -- 2018-11-14 20:02:43]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 20:02:43]
Initialization strings:
[INFO -- 2018-11-14 20:02:43]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 20:02:43]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 20:02:43]
initSignal:0
[INFO -- 2018-11-14 20:02:43]
endSignal:5
[INFO -- 2018-11-14 20:02:43]
faultModel:1
[INFO -- 2018-11-14 20:02:45]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b180 <T1>, __n=0) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x00005555555557d4 in predict (v=14) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd7d0
address max offset: 8
Memory content after  bitflip:0x2d0x430x1c0xeb0xe20x240x0a0x3f
frame name: train
symbol name: alpha2
symbol filename: lreg.cpp
symbol line: 177
value: 4.9865889549255373e-05
value address: 0x7fffffffd7d0
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 20:02:45]
Fault Injection Successful after 2.3822669982910156s
[INFO -- 2018-11-14 20:02:51]
event type: exit
[INFO -- 2018-11-14 20:02:51]
exit code: 0
