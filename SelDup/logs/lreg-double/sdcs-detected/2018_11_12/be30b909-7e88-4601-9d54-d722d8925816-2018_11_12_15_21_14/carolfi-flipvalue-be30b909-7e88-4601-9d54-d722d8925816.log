[INFO -- 2018-11-12 15:20:56]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 15:20:56]
Initialization strings:
[INFO -- 2018-11-12 15:20:56]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 15:20:56]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 15:20:56]
initSignal:0
[INFO -- 2018-11-12 15:20:56]
endSignal:10
[INFO -- 2018-11-12 15:20:56]
faultModel:1
[INFO -- 2018-11-12 15:20:59]
Backtrace BEGIN:
#0  0x0000555555556b9a in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd840, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#1  0x0000555555555de9 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#2  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

213		      this->_M_impl._M_start = __tmp;
214		      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
215		    }
216		  else if (size() >= __xlen)
217		    {
218		      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
219				    end(), _M_get_Tp_allocator());
220		    }
221		  else
222		    {

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x400xc0
Fault Model: Double bit-flip
base address to flip value: 0x55555575b1b8 
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x000x800xc0
frame name: std::vector<double, std::allocator<double> >::operator=
symbol name: xChecksum
symbol filename: lreg.cpp
symbol line: 39
value: -512
value address: 0x55555575b1b8 <xChecksum>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 15:20:59]
Fault Injection Successful after 3.1963250637054443s
[INFO -- 2018-11-12 15:21:13]
event type: exit
[INFO -- 2018-11-12 15:21:13]
exit code: 0
