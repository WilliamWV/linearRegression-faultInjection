[INFO -- 2018-11-12 18:21:29]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 18:21:29]
Initialization strings:
[INFO -- 2018-11-12 18:21:29]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 18:21:29]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 18:21:29]
initSignal:0
[INFO -- 2018-11-12 18:21:29]
endSignal:10
[INFO -- 2018-11-12 18:21:29]
faultModel:1
[INFO -- 2018-11-12 18:21:32]
Backtrace BEGIN:
#0  0x000055555555694c in std::vector<double, std::allocator<double> >::operator= (this=0x555555556d65 <std::_Vector_base<double, std::allocator<double> >::~_Vector_base()+77>, __x=std::vector of length 872730277038054280, capacity -17592186043128 = {...}) at /usr/include/c++/7/bits/vector.tcc:179
#1  0x0000555555555d40 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:189
#2  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

174	      return __first;
175	    }
176	
177	  template<typename _Tp, typename _Alloc>
178	    vector<_Tp, _Alloc>&
179	    vector<_Tp, _Alloc>::
180	    operator=(const vector<_Tp, _Alloc>& __x)
181	    {
182	      if (&__x != this)
183		{

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x100xc30xc0
Fault Model: Double bit-flip
base address to flip value: 0x55555575b1c0 
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x100xc30x48
frame name: main
symbol name: yChecksum
symbol filename: lreg.cpp
symbol line: 40
value: 3.3211559011483594e+42
value address: 0x55555575b1c0 <yChecksum>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 18:21:32]
Fault Injection Successful after 3.2709574699401855s
[INFO -- 2018-11-12 18:21:44]
event type: exit
[INFO -- 2018-11-12 18:21:44]
exit code: 0
