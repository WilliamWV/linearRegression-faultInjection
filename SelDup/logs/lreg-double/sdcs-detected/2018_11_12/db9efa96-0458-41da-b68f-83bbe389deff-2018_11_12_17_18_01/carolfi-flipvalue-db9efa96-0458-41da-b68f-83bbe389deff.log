[INFO -- 2018-11-12 17:17:51]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 17:17:51]
Initialization strings:
[INFO -- 2018-11-12 17:17:51]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 17:17:51]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 17:17:51]
initSignal:0
[INFO -- 2018-11-12 17:17:51]
endSignal:10
[INFO -- 2018-11-12 17:17:51]
faultModel:1
[INFO -- 2018-11-12 17:17:57]
Backtrace BEGIN:
#0  0x000055555555520f in verifyUintDup (a=1, b=1) at lreg.cpp:69
#1  0x000055555555566d in predict (v=14) at lreg.cpp:113
#2  0x000055555555578f in meanSquaredError () at lreg.cpp:125
#3  0x0000555555555da8 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:191
#4  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x800x590x40
Fault Model: Double bit-flip
base address to flip value: 0x55555575b1b8 
address max offset: 8
Memory content after  bitflip:0x000x000x000x440x000x800x590x40
frame name: meanSquaredError
symbol name: xChecksum
symbol filename: lreg.cpp
symbol line: 39
value: 102.00001621246338
value address: 0x55555575b1b8 <xChecksum>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 17:17:57]
Fault Injection Successful after 6.444819450378418s
[INFO -- 2018-11-12 17:18:00]
event type: exit
[INFO -- 2018-11-12 17:18:00]
exit code: 0
