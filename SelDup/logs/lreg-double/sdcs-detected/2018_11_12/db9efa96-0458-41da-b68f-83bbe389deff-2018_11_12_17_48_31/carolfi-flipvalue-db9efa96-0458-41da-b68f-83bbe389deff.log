[INFO -- 2018-11-12 17:48:15]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 17:48:15]
Initialization strings:
[INFO -- 2018-11-12 17:48:15]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 17:48:15]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 17:48:15]
initSignal:0
[INFO -- 2018-11-12 17:48:15]
endSignal:10
[INFO -- 2018-11-12 17:48:15]
faultModel:1
[EXCEPTION -- 2018-11-12 17:48:21]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-12 17:48:21]
Backtrace BEGIN:
#0  verifyDoubleDup (a=4.2439915829186759e-314, b=0.92914966469075966) at lreg.cpp:70
#1  0x00005555555556bd in predict (v=18) at lreg.cpp:113
#2  0x000055555555591a in partialDerivate (pos1=3, pos2=3) at lreg.cpp:139
#3  0x0000555555555a81 in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:153
#4  0x0000555555555da3 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:190
#5  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x030x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd738
address max offset: 4
Memory content after  bitflip:0x030x000x000x18
frame name: partialDerivate
symbol name: pos2
symbol filename: lreg.cpp
symbol line: 135
value: 402653187
value address: 0x7fffffffd738
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-12 17:48:21]
Fault Injection Successful after 6.319838047027588s
[INFO -- 2018-11-12 17:48:30]
event type: exit
[INFO -- 2018-11-12 17:48:30]
exit code: 0
