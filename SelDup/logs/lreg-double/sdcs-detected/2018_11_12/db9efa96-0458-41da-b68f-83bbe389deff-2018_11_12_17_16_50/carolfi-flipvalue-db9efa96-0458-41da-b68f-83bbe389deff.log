[INFO -- 2018-11-12 17:16:37]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 17:16:37]
Initialization strings:
[INFO -- 2018-11-12 17:16:37]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 17:16:37]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 17:16:37]
initSignal:0
[INFO -- 2018-11-12 17:16:37]
endSignal:10
[INFO -- 2018-11-12 17:16:37]
faultModel:1
[INFO -- 2018-11-12 17:16:38]
Backtrace BEGIN:
#0  0x0000555555555266 in verifyDoubleDup (a=2.243126366826496, b=2.243126366826496) at lreg.cpp:71
#1  0x00005555555556bd in predict (v=-2) at lreg.cpp:113
#2  0x000055555555578f in meanSquaredError () at lreg.cpp:125
#3  0x0000555555555da8 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:191
#4  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd7e8
address max offset: 8
Memory content after  bitflip:0x2d0x430x1c0xeb0x820x360x0a0x3f
frame name: train
symbol name: alpha1
symbol filename: lreg.cpp
symbol line: 174
value: 4.9997206032276156e-05
value address: 0x7fffffffd7e8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 17:16:38]
Fault Injection Successful after 1.5440495014190674s
[INFO -- 2018-11-12 17:16:48]
event type: exit
[INFO -- 2018-11-12 17:16:48]
exit code: 0
