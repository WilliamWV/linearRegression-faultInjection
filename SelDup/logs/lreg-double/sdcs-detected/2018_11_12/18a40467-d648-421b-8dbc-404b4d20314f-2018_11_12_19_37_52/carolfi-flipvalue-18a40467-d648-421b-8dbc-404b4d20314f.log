[INFO -- 2018-11-12 19:37:44]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 19:37:44]
Initialization strings:
[INFO -- 2018-11-12 19:37:44]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 19:37:44]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 19:37:44]
initSignal:0
[INFO -- 2018-11-12 19:37:44]
endSignal:10
[INFO -- 2018-11-12 19:37:44]
faultModel:1
[INFO -- 2018-11-12 19:37:49]
Backtrace BEGIN:
#0  0x000055555555536f in verifyDoubleDup (a=7.753307075663181, b=7.753307075663181) at lreg.cpp:78
#1  0x00005555555556bd in predict (v=-2) at lreg.cpp:113
#2  0x000055555555578f in meanSquaredError () at lreg.cpp:125
#3  0x0000555555555da8 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:191
#4  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	
76		}	
77		return a;
78	}
79	
80	
81	void verifyChecksum(vector<double> vec, double check){
82		if(detected!=1){

Backtrace END
Memory content before bitflip:0x000x000x000x000x400x1e0xf70xc0
Fault Model: Double bit-flip
base address to flip value: 0x55555575b1c0 
address max offset: 8
Memory content after  bitflip:0x000x000x000x140x400x1e0xf70xc0
frame name: verifyDoubleDup
symbol name: yChecksum
symbol filename: lreg.cpp
symbol line: 40
value: -94692.0048828125
value address: 0x55555575b1c0 <yChecksum>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 19:37:49]
Fault Injection Successful after 5.296995639801025s
[INFO -- 2018-11-12 19:37:52]
event type: exit
[INFO -- 2018-11-12 19:37:52]
exit code: 0
