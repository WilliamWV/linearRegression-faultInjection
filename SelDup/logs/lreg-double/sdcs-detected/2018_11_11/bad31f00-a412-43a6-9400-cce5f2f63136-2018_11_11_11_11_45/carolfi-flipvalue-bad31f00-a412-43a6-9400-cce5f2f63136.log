[INFO -- 2018-11-11 11:11:29]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-11 11:11:29]
Initialization strings:
[INFO -- 2018-11-11 11:11:29]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-11 11:11:29]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-11 11:11:29]
initSignal:0
[INFO -- 2018-11-11 11:11:29]
endSignal:10
[INFO -- 2018-11-11 11:11:29]
faultModel:1
[INFO -- 2018-11-11 11:11:31]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x0) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x0000555555555650 in predict (v=7) at lreg.cpp:111
#2  0x00005555555558db in partialDerivate (pos1=1, pos2=1) at lreg.cpp:138
#3  0x0000555555555a42 in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:152
#4  0x0000555555555cab in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:185
#5  0x00005555555561e0 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:241

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x550xc40x40
Fault Model: Double bit-flip
base address to flip value: 0x55555575a1a0 
address max offset: 8
Memory content after  bitflip:0x000x000x000x140x000x550xc40x40
frame name: std::vector<double, std::allocator<double> >::size
symbol name: yChecksum
symbol filename: lreg.cpp
symbol line: 39
value: 10410.000610351562
value address: 0x55555575a1a0 <yChecksum>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-11 11:11:31]
Fault Injection Successful after 2.92299222946167s
[INFO -- 2018-11-11 11:11:44]
event type: exit
[INFO -- 2018-11-11 11:11:44]
exit code: 0
