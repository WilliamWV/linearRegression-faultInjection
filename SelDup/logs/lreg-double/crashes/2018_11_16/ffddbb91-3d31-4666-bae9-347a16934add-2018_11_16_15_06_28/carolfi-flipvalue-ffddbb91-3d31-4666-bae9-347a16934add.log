[INFO -- 2018-11-16 15:06:23]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 15:06:23]
Initialization strings:
[INFO -- 2018-11-16 15:06:23]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 15:06:23]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 15:06:23]
initSignal:0
[INFO -- 2018-11-16 15:06:23]
endSignal:5
[INFO -- 2018-11-16 15:06:23]
faultModel:1
[INFO -- 2018-11-16 15:06:26]
Backtrace BEGIN:
#0  0x000055555555524c in verifyDoubleDup (a=-0.27818184537728036, b=-0.27818184537728036) at lreg.cpp:71
#1  0x00005555555557ea in predict (v=-16) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=3, pos2=3) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x980x260x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575b148 
address max offset: 8
Memory content after  bitflip:0x980x260x770x550x550x950x000x00
frame name: partialDerivate
symbol name: x
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 8796093022225, capacity 32 = {-16, 31, 18, -23, 27, -16, -8, 1, -29, -8, 25, -10, -23, -17, -29, -12, -89, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.3487992131466031e-321, 7269, -63607, -13063, 22361, -42439, 7269, 821, -7, 45593, 821, -33895, 1665, 22361, 8777, 45593, 2957, 12476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, 0.028626279710542869, -0.27818184537728036, -3.970447718233435, -1.9598629679611557, 0, 2.4209216646221081e-322, 0.028356382235778174, -0.27462313784265407, -3.9735834155588288, -1.9598629679611557, 0, 2.4209216646221081e-322, 0.02855863030893966, -0.27809072646099015, -3.9704472907155695, -2.0555646790355606, 0, 2.4209216646221081e-322, 4.6355706480840404e-310, -0.27809072646099015, -3.9704472907155695, -2.0555646790355606, 0, 2.4209216646221081e-322, 0, -0.27462313784265407, -3.9735834155588288, -1.9598629679611557, 0, 2.1114883506317354e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-16 15:06:26]
Fault Injection Successful after 3.60278582572937s
[INFO -- 2018-11-16 15:06:27]
event type: exit
[EXCEPTION -- 2018-11-16 15:06:27]
exit code: no exit code available
