[INFO -- 2018-11-16 12:56:24]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 12:56:24]
Initialization strings:
[INFO -- 2018-11-16 12:56:24]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 12:56:24]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 12:56:24]
initSignal:0
[INFO -- 2018-11-16 12:56:24]
endSignal:5
[INFO -- 2018-11-16 12:56:24]
faultModel:1
[EXCEPTION -- 2018-11-16 12:56:25]
gdbException: Cannot access memory at address 0x555514772490
[INFO -- 2018-11-16 12:56:25]
Backtrace BEGIN:
#0  0x00005555555551e0 in verifyUintDup (a=0, b=0) at lreg.cpp:69
#1  0x0000555555555c50 in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:159
#2  0x0000555555555ee0 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:193
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x5c0x40
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd928
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x300x5c0x40
frame name: main
symbol name: yChecksum
symbol filename: lreg.cpp
symbol line: 233
value: 112.75
value address: 0x7fffffffd928
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-16 12:56:25]
Fault Injection Successful after 1.4543745517730713s
[INFO -- 2018-11-16 12:56:25]
event type: exit
[EXCEPTION -- 2018-11-16 12:56:25]
exit code: no exit code available
