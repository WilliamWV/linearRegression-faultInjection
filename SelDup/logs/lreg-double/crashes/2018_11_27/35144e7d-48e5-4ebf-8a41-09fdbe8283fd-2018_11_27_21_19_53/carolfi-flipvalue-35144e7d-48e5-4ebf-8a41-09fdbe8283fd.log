[INFO -- 2018-11-27 21:19:51]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 21:19:51]
Initialization strings:
[INFO -- 2018-11-27 21:19:51]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 21:19:51]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 21:19:51]
initSignal:0
[INFO -- 2018-11-27 21:19:51]
endSignal:3
[INFO -- 2018-11-27 21:19:51]
faultModel:1
[INFO -- 2018-11-27 21:19:52]
Backtrace BEGIN:
#0  0x00005555555567a9 in std::vector<double, std::allocator<double> >::size (this=0x55555575b180 <T1>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x000055555555577d in predict (v=-4) at lreg.cpp:115
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x780x230x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd808
address max offset: 8
Memory content after  bitflip:0x180x230x770x550x550x550x000x00
frame name: train
symbol name: prevT
symbol filename: lreg.cpp
symbol line: 187
value: std::vector of length -9, capacity 3 = {-0.10934693939745603, 0.047957693777127601, -2.9893048083516782, 2.4209216646221081e-322, 0, 8, 12, 5, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 6.3482494834141768e-320, 0, 0, 0, 0, 0, 7.1639518646980749e-322, -4, -3, -7, -2, -1, -1, -21, -3, -19, 13, 6, 23, -19, 0, 0, 0, 0, 7.1639518646980749e-322, -44, -23, -143, -8, 1, 1, -1319, -23, -1079, -503, -104, -1583, -4827, 0, 0, 0, 0, 1.6304166312761136e-322, -0.10922995707502722, 0.047957693777127601, -2.9893048083516782, 1.6304166312761136e-322, -0.10934693939745603, 0.047957693777127601, -2.9893048083516782, 1.6304166312761136e-322, 4.6355706480405627e-310, 0.048194997490571913, -2.9894365305937245, 1.6304166312761136e-322, 0, 0.047957693777127601, -2.9893048083516782, 2.155756632499111e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x7fffffffd800
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-27 21:19:52]
Fault Injection Successful after 1.8674237728118896s
[INFO -- 2018-11-27 21:19:53]
event type: exit
[EXCEPTION -- 2018-11-27 21:19:53]
exit code: no exit code available
