[INFO -- 2018-11-27 20:41:28]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 20:41:29]
Initialization strings:
[INFO -- 2018-11-27 20:41:29]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 20:41:29]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 20:41:29]
initSignal:0
[INFO -- 2018-11-27 20:41:29]
endSignal:3
[INFO -- 2018-11-27 20:41:29]
faultModel:1
[EXCEPTION -- 2018-11-27 20:41:30]
pythonException: empty range for randrange() (0,0, 0)
[EXCEPTION -- 2018-11-27 20:41:31]
pythonException: empty range for randrange() (0,0, 0)
[EXCEPTION -- 2018-11-27 20:41:31]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-27 20:41:31]
Backtrace BEGIN:
#0  verifyDoubleDup (a=0.12057183126667215, b=0.12057183126667215) at lreg.cpp:77
#1  0x00005555555557ea in predict (v=-1) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	
76		}	
77		return a;
78	}
79	
80	
81	void verifyChecksum(vector<double> vec){

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x680x240x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575b148 
address max offset: 8
Memory content after  bitflip:0x680x240x770x550x550x550x300x00
frame name: verifyDoubleDup
symbol name: x
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 1688849860263944, capacity 11 = {1.5909787778453006e-314, 1.5909787778453006e-314, 1.5932129347907444e-314, 1.5917558759132811e-314, 1.5931481766184127e-314, 5.3185886936028386e-315, 5.3127604580929853e-315, 5.3227979748043994e-315, 1.5931481766184127e-314, 0, 0, 0, 3.0768938968996449e-312, 0, 1.5937633792555639e-314, 1.5932776929630761e-314, 1.594665946282437e-314, 1.5925329739812615e-314, 5.2998088236266445e-315, 5.2998088236266445e-315, 1.5963086789821326e-314, 1.5932776929630761e-314, 1.5961872574090107e-314, 1.595623153017215e-314, 1.5944109609788809e-314, 1.5964422427125668e-314, 1.5972880198578443e-314, 0, 0, 0, 7.0025861101853986e-313, -1.7735076836920532e-115, 7.4517129610565264e+285, 1.7711444181994066e+139, 7.1617614425424141e-313, -1.7735076836920532e-115, 7.4517129610565264e+285, 1.7711444181994066e+139, 7.1617614425424141e-313, 5.1842216678806949e+103, -4.7818699386118858e-05, -3.2218094915128259e+81, 7.1617614459514671e-313, 0, 7.4517118310628124e+285, 1.7711444181994066e+139, 9.2590634100511297e-310, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-27 20:41:31]
Fault Injection Successful after 2.895474910736084s
[INFO -- 2018-11-27 20:41:32]
event type: exit
[EXCEPTION -- 2018-11-27 20:41:32]
exit code: no exit code available
