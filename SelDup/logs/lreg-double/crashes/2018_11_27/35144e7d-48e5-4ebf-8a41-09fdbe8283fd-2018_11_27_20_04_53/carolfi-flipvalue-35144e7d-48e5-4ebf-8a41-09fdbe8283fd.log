[INFO -- 2018-11-27 20:04:50]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 20:04:50]
Initialization strings:
[INFO -- 2018-11-27 20:04:50]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 20:04:50]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 20:04:50]
initSignal:0
[INFO -- 2018-11-27 20:04:50]
endSignal:3
[INFO -- 2018-11-27 20:04:50]
faultModel:1
[EXCEPTION -- 2018-11-27 20:04:51]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-27 20:04:51]
Backtrace BEGIN:
#0  0x00005555555582ec in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772520, __last=0x555555772530, __result=0x555555772560) at /usr/include/c++/7/bits/stl_algobase.h:366
#1  0x00005555555580ae in std::__copy_move_a<false, double const*, double*> (__first=0x555555772520, __last=0x555555772530, __result=0x555555772560) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x000055555555841c in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=1.8671612641662407, __last=0, __result=0x555555772560) at /usr/include/c++/7/bits/stl_algobase.h:424
#3  0x0000555555558273 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=1.8671612641662407, __last=0, __result=0x555555772560) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555557ff6 in std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=1.8671612641662407, __last=0, __result=0x555555772560) at /usr/include/c++/7/bits/stl_uninitialized.h:101
#5  0x0000555555557ab0 in std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=1.8671612641662407, __last=0, __result=0x555555772560) at /usr/include/c++/7/bits/stl_uninitialized.h:134
#6  0x00005555555571e9 in std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double> (__first=1.8671612641662407, __last=0, __result=0x555555772560) at /usr/include/c++/7/bits/stl_uninitialized.h:289
#7  0x0000555555556a49 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd860, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#8  0x0000555555555f47 in train (iter1=10000, iter2=10000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:199
#9  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

361						   is_move_assignable<_Tp>,
362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575b1b8 
address max offset: 4
Memory content after  bitflip:0x000x000x000x48
frame name: std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>
symbol name: detected
symbol filename: lreg.cpp
symbol line: 58
value: 1207959552
value address: 0x55555575b1b8 <detected>
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-27 20:04:51]
Fault Injection Successful after 1.9341611862182617s
[INFO -- 2018-11-27 20:04:52]
event type: exit
[EXCEPTION -- 2018-11-27 20:04:52]
exit code: no exit code available
