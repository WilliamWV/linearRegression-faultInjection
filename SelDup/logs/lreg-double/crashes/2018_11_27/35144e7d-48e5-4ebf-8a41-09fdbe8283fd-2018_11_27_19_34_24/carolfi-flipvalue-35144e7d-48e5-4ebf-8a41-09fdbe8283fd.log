[INFO -- 2018-11-27 19:34:21]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 19:34:21]
Initialization strings:
[INFO -- 2018-11-27 19:34:21]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 19:34:21]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 19:34:21]
initSignal:0
[INFO -- 2018-11-27 19:34:21]
endSignal:3
[INFO -- 2018-11-27 19:34:21]
faultModel:1
[EXCEPTION -- 2018-11-27 19:34:22]
gdbException: Cannot access memory at address 0x1800555555772520
[INFO -- 2018-11-27 19:34:22]
Backtrace BEGIN:
#0  0x000055555555573f in predict (v=4.6355705387946445e-310) at lreg.cpp:112
#1  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

107	}
108	
109	/**
110		Predicts the value related to v using the Ts variables
111	*/
112	double predict(double v){
113		double val = 0;
114		
115		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
116			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));

Backtrace END
Memory content before bitflip:0x060x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd90c
address max offset: 4
Memory content after  bitflip:0x060x000x220x00
frame name: main
symbol name: pred2
symbol filename: lreg.cpp
symbol line: 238
value: 2228230
value address: 0x7fffffffd90c
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-27 19:34:22]
Fault Injection Successful after 1.617863416671753s
[INFO -- 2018-11-27 19:34:23]
event type: exit
[EXCEPTION -- 2018-11-27 19:34:23]
exit code: no exit code available
