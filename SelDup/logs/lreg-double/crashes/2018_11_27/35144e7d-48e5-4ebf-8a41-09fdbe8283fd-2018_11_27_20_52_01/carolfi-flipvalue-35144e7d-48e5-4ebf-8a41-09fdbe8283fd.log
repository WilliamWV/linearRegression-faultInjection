[INFO -- 2018-11-27 20:51:58]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 20:51:58]
Initialization strings:
[INFO -- 2018-11-27 20:51:58]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 20:51:58]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 20:51:58]
initSignal:0
[INFO -- 2018-11-27 20:51:58]
endSignal:3
[INFO -- 2018-11-27 20:51:58]
faultModel:1
[EXCEPTION -- 2018-11-27 20:51:59]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-27 20:51:59]
Backtrace BEGIN:
#0  0x00005555555551e0 in verifyUintDup (a=1, b=1) at lreg.cpp:69
#1  0x000055555555576f in predict (v=-17) at lreg.cpp:115
#2  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x000x280x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575b1a0 
address max offset: 8
Memory content after  bitflip:0x0a0x280x770x550x550x550x000x00
frame name: adjust
symbol name: T2
symbol filename: lreg.cpp
symbol line: 37
value: std::vector of length 8, capacity 8 = {0, 0, 0, 9.4565638986556059e-308, 1.0342254059756259e-186, -4.8414496065079434e-304, 6.5781686920727578e+295, -3.2479113061747221e-96, 1.0433379496171131e-309, 9.4565638986556059e-308, 1.0342254059756259e-186, -4.8414496065079434e-304, 6.5781686920727578e+295, -3.2479113061747221e-96, 1.0433379496171131e-309, 9.4565638986556059e-308, 4.9142065197732035e-235, -1.3223781767560521e+153, 5.3111621020174671e-76, -93415487480.614563, 1.0433467538173523e-309, 9.4565638986556059e-308, 1.6632655625031839e-111, -1.3093565095476726e+153, 5.3111621020174671e-76, -93415487480.614563, 1.0433467538173523e-309, 9.4565638986556059e-308, 0, -4.7847988253338859e-304, 6.5781686920727578e+295, -3.2479113061747221e-96, 1.0433379496171131e-309, -4.1146289095274007e-121, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b1a0 <T2>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-27 20:51:59]
Fault Injection Successful after 1.549656867980957s
[INFO -- 2018-11-27 20:52:00]
event type: exit
[EXCEPTION -- 2018-11-27 20:52:00]
exit code: no exit code available
