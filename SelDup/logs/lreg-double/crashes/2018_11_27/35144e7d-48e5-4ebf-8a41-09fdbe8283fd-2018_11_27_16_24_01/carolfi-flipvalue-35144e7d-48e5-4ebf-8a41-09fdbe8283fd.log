[INFO -- 2018-11-27 16:23:58]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 16:23:58]
Initialization strings:
[INFO -- 2018-11-27 16:23:58]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 16:23:58]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 16:23:58]
initSignal:0
[INFO -- 2018-11-27 16:23:58]
endSignal:3
[INFO -- 2018-11-27 16:23:58]
faultModel:1
[EXCEPTION -- 2018-11-27 16:23:59]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-27 16:23:59]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b140 <x>, __n=4) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x0000555555555abb in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=10000, iter2=10000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd768
address max offset: 8
Memory content after  bitflip:0x2d0x430x1c0xeb0xe20x060x2a0x3f
frame name: adjust
symbol name: alpha1
symbol filename: lreg.cpp
symbol line: 151
value: 0.00019856948852539063
value address: 0x7fffffffd768
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-27 16:23:59]
Fault Injection Successful after 1.7340734004974365s
[INFO -- 2018-11-27 16:24:00]
event type: exit
[EXCEPTION -- 2018-11-27 16:24:00]
exit code: no exit code available
