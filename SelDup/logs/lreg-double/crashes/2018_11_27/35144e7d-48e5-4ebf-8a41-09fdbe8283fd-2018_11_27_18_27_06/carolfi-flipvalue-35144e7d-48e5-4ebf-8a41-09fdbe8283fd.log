[INFO -- 2018-11-27 18:27:04]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 18:27:04]
Initialization strings:
[INFO -- 2018-11-27 18:27:04]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 18:27:04]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 18:27:04]
initSignal:0
[INFO -- 2018-11-27 18:27:04]
endSignal:3
[INFO -- 2018-11-27 18:27:04]
faultModel:1
[EXCEPTION -- 2018-11-27 18:27:05]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-27 18:27:05]
Backtrace BEGIN:
#0  0x000055555555717f in std::vector<double, std::allocator<double> >::end (this=0x55555575b180 <T1>) at /usr/include/c++/7/bits/stl_vector.h:590
#1  0x0000555555556cf6 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd820, __x=std::vector of length -14, capacity -14 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#2  0x0000555555555f26 in train (iter1=10000, iter2=10000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:197
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

585	       *  Returns a read-only (constant) iterator that points one past
586	       *  the last element in the %vector.  Iteration is done in
587	       *  ordinary element order.
588	       */
589	      const_iterator
590	      end() const _GLIBCXX_NOEXCEPT
591	      { return const_iterator(this->_M_impl._M_finish); }
592	
593	      /**
594	       *  Returns a read/write reverse iterator that points to the

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0xff0xff0xff0x000x000x000x000x31
Fault Model: Double bit-flip
base address to flip value: 0x5555557723c1
address max offset: 8
Memory content after  bitflip:0xff0xe70xff0x000x000x000x000x31
frame name: std::vector<double, std::allocator<double> >::operator=
symbol name: T1
symbol filename: lreg.cpp
symbol line: 36
value: std::vector of length -14, capacity -14 = {1.1319598890686737e-72, 2.4703282292062327e-322, 0, 0, 0, 0, -8.4425425152863546e-227, 0, 1.7974424763253486e-307, 4.5836521485248348e-305, 4.5970025916758781e-305, 4.5658515576567772e-305, 1.7922274594694724e-307, 4.6014527393928925e-305, 1.7904891205175136e-307, 4.5970025916758781e-305, 4.6103530348269213e-305, 0, 0, 0, 0, 0, 0, 0, -8.4425425152863546e-227, 0, 4.5970025916758781e-305, 1.7939657984214311e-307, 1.7974424763253486e-307, 1.7887507815655549e-307, 4.5792020008078204e-305, 1.7991808152773074e-307, 4.574751853090806e-305, 1.7974424763253486e-307, 1.8078725100371011e-307, 0, 0, 0, 0, 0, 0, 0, 9.775796363198735e-150, -1.5845632502852868e+29, 1.583451206812307e+88, 4.548429389710266e-305, 9.775796363198735e-150, -1.5845632502852868e+29, 1.583451206812307e+88, 4.548429389710266e-305, 9.775796363198735e-150, -0, -4.0218566396773133e-87, 4.548429471051493e-305, 9.775796363198735e-150, 0, 9.9464647281957328e+86, 4.548429389710266e-305, 2.0349165139403852e+236, 8.3991159793011913e-322, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b180 <T1>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-27 18:27:05]
Fault Injection Successful after 1.9979007244110107s
[INFO -- 2018-11-27 18:27:06]
event type: exit
[EXCEPTION -- 2018-11-27 18:27:06]
exit code: no exit code available
