[INFO -- 2018-11-13 19:46:52]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-13 19:46:52]
Initialization strings:
[INFO -- 2018-11-13 19:46:52]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-13 19:46:52]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-13 19:46:52]
initSignal:0
[INFO -- 2018-11-13 19:46:52]
endSignal:5
[INFO -- 2018-11-13 19:46:52]
faultModel:1
[EXCEPTION -- 2018-11-13 19:46:53]
gdbException: Cannot access memory at address 0x50555555772380
[INFO -- 2018-11-13 19:46:53]
Backtrace BEGIN:
#0  0x0000555555555975 in meanSquaredError () at lreg.cpp:127
#1  0x0000555555555ee5 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:194
#2  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

122		Calculates the mean squared error of T
123	*/
124	double meanSquaredError(){
125		double error = 0;
126		
127		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<(x.size() - 1); i1++, i2++){
128			error+= ((predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)]) * (predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)]));	
129		}
130		error /= (x.size() - 1);
131		return error;

Backtrace END
Memory content before bitflip:0x200x340xd30x4f0x160xb80x7a0x41
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd788
address max offset: 8
Memory content after  bitflip:0x200x340xd30x4f0x020xb80x7a0x41
frame name: meanSquaredError
symbol name: error
symbol filename: lreg.cpp
symbol line: 125
value: 28016676.989063382
value address: 0x7fffffffd788
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-13 19:46:53]
Fault Injection Successful after 1.6902012825012207s
[INFO -- 2018-11-13 19:46:53]
event type: exit
[EXCEPTION -- 2018-11-13 19:46:53]
exit code: no exit code available
