[INFO -- 2018-11-26 17:32:14]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 17:32:14]
Initialization strings:
[INFO -- 2018-11-26 17:32:14]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 17:32:14]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 17:32:14]
initSignal:0
[INFO -- 2018-11-26 17:32:14]
endSignal:3
[INFO -- 2018-11-26 17:32:14]
faultModel:1
[EXCEPTION -- 2018-11-26 17:32:15]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-26 17:32:15]
Backtrace BEGIN:
#0  verifyDoubleDup (a=4.2439915829186759e-314, b=-0.026801240233635944) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=-3) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x070x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd720
address max offset: 4
Memory content after  bitflip:0x070x000x000x11
frame name: partialDerivate
symbol name: i1
symbol filename: lreg.cpp
symbol line: 141
value: 285212679
value address: 0x7fffffffd720
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-26 17:32:15]
Fault Injection Successful after 1.8366153240203857s
[INFO -- 2018-11-26 17:32:16]
event type: exit
[EXCEPTION -- 2018-11-26 17:32:16]
exit code: no exit code available
