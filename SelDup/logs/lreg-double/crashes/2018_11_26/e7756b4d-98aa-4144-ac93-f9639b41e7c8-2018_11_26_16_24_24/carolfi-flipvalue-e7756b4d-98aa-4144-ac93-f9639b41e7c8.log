[INFO -- 2018-11-26 16:24:22]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 16:24:22]
Initialization strings:
[INFO -- 2018-11-26 16:24:22]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 16:24:22]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 16:24:22]
initSignal:0
[INFO -- 2018-11-26 16:24:22]
endSignal:3
[INFO -- 2018-11-26 16:24:22]
faultModel:1
[EXCEPTION -- 2018-11-26 16:24:23]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-26 16:24:23]
Backtrace BEGIN:
#0  0x0000555555555a81 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#1  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#2  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

137	*/
138	double partialDerivate(UINT pos1, UINT pos2){
139		double pD = 0;
140		
141		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<(x.size() - 1); i1++, i2++){
142			pD += ((predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)])*pow(x[verifyUintDup(i1, i2)], verifyUintDup(pos1, pos2)));	
143		}
144		pD *= (2.0/(x.size() - 1));
145		return pD;
146	}

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd77c
address max offset: 4
Memory content after  bitflip:0x300x000x000x00
frame name: adjust
symbol name: i2
symbol filename: lreg.cpp
symbol line: 155
value: 48
value address: 0x7fffffffd77c
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-26 16:24:23]
Fault Injection Successful after 1.448070764541626s
[INFO -- 2018-11-26 16:24:23]
event type: exit
[EXCEPTION -- 2018-11-26 16:24:23]
exit code: no exit code available
