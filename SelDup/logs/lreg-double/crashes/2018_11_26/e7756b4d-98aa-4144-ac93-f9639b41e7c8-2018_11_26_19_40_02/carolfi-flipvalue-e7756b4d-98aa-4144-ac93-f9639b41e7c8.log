[INFO -- 2018-11-26 19:39:56]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 19:39:56]
Initialization strings:
[INFO -- 2018-11-26 19:39:56]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 19:39:56]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 19:39:56]
initSignal:0
[INFO -- 2018-11-26 19:39:56]
endSignal:3
[INFO -- 2018-11-26 19:39:56]
faultModel:1
[EXCEPTION -- 2018-11-26 19:39:57]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-26 19:39:59]
Backtrace BEGIN:
#0  0x000055555555682f in std::pow<double, unsigned int> (__x=31, __y=2) at /usr/include/c++/7/cmath:418
#1  0x0000555555555814 in predict (v=31) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

413	    inline _GLIBCXX_CONSTEXPR
414	    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
415	    pow(_Tp __x, _Up __y)
416	    {
417	      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
418	      return pow(__type(__x), __type(__y));
419	    }
420	
421	  using ::sin;
422	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x600x280x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd800
address max offset: 8
Memory content after  bitflip:0x410x280x770x550x550x550x000x00
frame name: train
symbol name: prevT
symbol filename: lreg.cpp
symbol line: 187
value: std::vector of length 7, capacity 7 = {1.6758147753780746e+153, 4.5749547169920695e-305, 1.131959884853339e-72, 5.7277807836949922e+250, -3.7558542922652788e-211, -1.5444170575136514e-266, 1.6758147753780746e+153, 4.5749547169920695e-305, 1.131959884853339e-72, 5.7277807836949922e+250, -3.7558542922652788e-211, -1.5444170575136514e-266, 1.6758147753780746e+153, 4.5749547169920695e-305, 1.131959884853339e-72, -3.1050361846014179e+231, 3.3268018388087437e-111, -7.9510959336502428e+292, 2.3055787346829158e+18, 4.5744934395561953e-305, 1.131959884853339e-72, 0, -2.3763644578689498e-212, -1.5444170575136514e-266, 1.6758147753780746e+153, 4.5749547169920695e-305, -2.0349165139403852e+236, 8.2014897209646926e-322, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x7fffffffd800
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-26 19:39:59]
Fault Injection Successful after 3.0959789752960205s
[INFO -- 2018-11-26 19:40:01]
event type: exit
[EXCEPTION -- 2018-11-26 19:40:01]
exit code: no exit code available
