[INFO -- 2018-11-26 17:34:55]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 17:34:55]
Initialization strings:
[INFO -- 2018-11-26 17:34:55]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 17:34:55]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 17:34:55]
initSignal:0
[INFO -- 2018-11-26 17:34:55]
endSignal:3
[INFO -- 2018-11-26 17:34:55]
faultModel:1
[EXCEPTION -- 2018-11-26 17:34:57]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-26 17:34:57]
Backtrace BEGIN:
#0  0x00005555555550fe in verifyUintDup (a=0, b=0) at lreg.cpp:61
#1  0x000055555555579a in predict (v=25) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

56	*/
57	
58	int detected = 0;
59	
60	
61	UINT verifyUintDup(UINT a, UINT b){
62		if (a != b && detected != 1){
63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0xe80x6b0xef0x580x080x060x0a0x41
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd7f0
address max offset: 8
Memory content after  bitflip:0xe80x2a0xef0x580x080x060x0a0x41
frame name: train
symbol name: bestMSE
symbol filename: lreg.cpp
symbol line: 189
value: 213185.043424926
value address: 0x7fffffffd7f0
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-26 17:34:57]
Fault Injection Successful after 2.2248167991638184s
[INFO -- 2018-11-26 17:34:58]
event type: exit
[EXCEPTION -- 2018-11-26 17:34:58]
exit code: no exit code available
