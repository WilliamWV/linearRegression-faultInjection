[INFO -- 2018-11-14 16:18:14]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 16:18:14]
Initialization strings:
[INFO -- 2018-11-14 16:18:15]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 16:18:15]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 16:18:15]
initSignal:0
[INFO -- 2018-11-14 16:18:15]
endSignal:5
[INFO -- 2018-11-14 16:18:15]
faultModel:1
[EXCEPTION -- 2018-11-14 16:18:17]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-14 16:18:17]
Backtrace BEGIN:
#0  0x0000555555555254 in verifyDoubleDup (a=4.002848965177451, b=4.002848965177451) at lreg.cpp:71
#1  0x00005555555557ea in predict (v=-15) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	

Backtrace END
Memory content before bitflip:0x2b0x200x840xe80xf10x910x2b0xc0
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd758
address max offset: 8
Memory content after  bitflip:0x630x200x840xe80xf10x910x2b0xc0
frame name: predict
symbol name: val
symbol filename: lreg.cpp
symbol line: 113
value: -13.785048738602375
value address: 0x7fffffffd758
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 16:18:17]
Fault Injection Successful after 2.7118382453918457s
[INFO -- 2018-11-14 16:18:24]
event type: exit
[EXCEPTION -- 2018-11-14 16:18:24]
exit code: no exit code available
