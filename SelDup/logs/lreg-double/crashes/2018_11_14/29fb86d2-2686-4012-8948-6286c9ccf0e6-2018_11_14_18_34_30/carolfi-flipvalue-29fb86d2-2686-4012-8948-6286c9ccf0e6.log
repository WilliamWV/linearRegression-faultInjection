[INFO -- 2018-11-14 18:34:24]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 18:34:24]
Initialization strings:
[INFO -- 2018-11-14 18:34:24]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 18:34:24]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 18:34:24]
initSignal:0
[INFO -- 2018-11-14 18:34:24]
endSignal:5
[INFO -- 2018-11-14 18:34:24]
faultModel:1
[EXCEPTION -- 2018-11-14 18:34:26]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-14 18:34:26]
Backtrace BEGIN:
#0  0x00005555555551e0 in verifyUintDup (a=0, b=0) at lreg.cpp:69
#1  0x0000555555555a02 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:141
#2  0x0000555555555bbe in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Memory content before bitflip:0x5d0x380x240x010x6e0x920xe20x3f
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd800
address max offset: 8
Memory content after  bitflip:0x5d0x380x050x010x6e0x920xe20x3f
frame name: train
symbol name: bestMSE
symbol filename: lreg.cpp
symbol line: 189
value: 0.58037471961302922
value address: 0x7fffffffd800
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 18:34:26]
Fault Injection Successful after 2.495300054550171s
[INFO -- 2018-11-14 18:34:29]
event type: exit
[EXCEPTION -- 2018-11-14 18:34:29]
exit code: no exit code available
