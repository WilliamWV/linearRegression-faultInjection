[INFO -- 2018-11-14 12:49:22]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 12:49:22]
Initialization strings:
[INFO -- 2018-11-14 12:49:22]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 12:49:22]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 12:49:22]
initSignal:0
[INFO -- 2018-11-14 12:49:22]
endSignal:5
[INFO -- 2018-11-14 12:49:22]
faultModel:1
[EXCEPTION -- 2018-11-14 12:49:22]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-14 12:49:23]
Backtrace BEGIN:
#0  0x000055555555521d in verifyDoubleDup (a=2.121995791459338e-314, b=2.078208882162984e-07) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=8) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x280xc0
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd928
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x000x280xd1
frame name: main
symbol name: temp
symbol filename: lreg.cpp
symbol line: 233
value: -9.106260432308105e+82
value address: 0x7fffffffd928
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 12:49:23]
Fault Injection Successful after 1.044605016708374s
[INFO -- 2018-11-14 12:49:23]
event type: exit
[EXCEPTION -- 2018-11-14 12:49:23]
exit code: no exit code available
