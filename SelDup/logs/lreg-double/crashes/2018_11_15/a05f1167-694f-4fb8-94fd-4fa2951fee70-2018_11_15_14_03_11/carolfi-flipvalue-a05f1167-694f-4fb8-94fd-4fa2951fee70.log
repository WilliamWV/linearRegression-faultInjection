[INFO -- 2018-11-15 14:03:09]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 14:03:09]
Initialization strings:
[INFO -- 2018-11-15 14:03:09]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 14:03:09]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 14:03:09]
initSignal:0
[INFO -- 2018-11-15 14:03:09]
endSignal:5
[INFO -- 2018-11-15 14:03:09]
faultModel:1
[INFO -- 2018-11-15 14:03:11]
Backtrace BEGIN:
#0  0x000055555555511b in verifyUintDup (a=0, b=0) at lreg.cpp:61
#1  0x000055555555576f in predict (v=14) at lreg.cpp:115
#2  0x0000555555555928 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

56	*/
57	
58	int detected = 0;
59	
60	
61	UINT verifyUintDup(UINT a, UINT b){
62		if (a != b && detected != 1){
63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa00x230x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575b188 
address max offset: 8
Memory content after  bitflip:0xa00x230x630x550x550x550x000x00
frame name: meanSquaredError
symbol name: T1
symbol filename: lreg.cpp
symbol line: 36
value: std::vector of length -163836, capacity 4 = {-0.48263177164144794, 0.094419057693525738, -4.9967301162918121, -4.966713599800789, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 6.474730288749536e-320, 0, 0, 0, 0, 0, 7.1639518646980749e-322, 0, -18, 27, 4, -4, 20, -29, 22, 24, -19, -2, 14, -10, -26, 4, 15, 0, 7.1639518646980749e-322, 4.6355706480215905e-310, 27462, -101958, -390, 218, -41926, 117618, -55578, -71910, 32408, 6, -14650, 4454, 84390, -390, -17946, 0, 1.6304166312761136e-322, 4.6355706480136855e-310, -0.99506138291518953, 4.0020349614351129, 1.6304166312761136e-322, 4.6355706480389816e-310, -0.99506138291518953, 4.0020349614351129, 1.6304166312761136e-322, 4.6355706480405627e-310, -0.99504266883730463, 4.0019269825244157, 1.6304166312761136e-322, 0, -0.99506138291518953, 4.0020349614351129, 5.5829417980060859e-322, 0, 335, 317, 1622, 566, 16, 691, 335, 266, 665, 497, 887, 7984, 1.3487992131466031e-321, -1, -18, 27, 4, -4, 20, -29, 22, 24, -19, -2, 14, -10, -26, 4, 15, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.3487992131466031e-321, -10, 27462, -101958, -390, 218, -41926, 117618, -55578, -71910, 32408, 6, -14650, 4454, 84390, -390, -17946, -38202, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, -0.48263177164144794, 0.094419057693525738, -4.9967301162918121, -4.966713599800789, 0, 2.4209216646221081e-322, -0.48266634099739403, 0.092234931003165113, -4.9938222218209125, -5.0210425115885524, 0, 2.4209216646221081e-322, -0.48258338985178401, 0.094350407766145158, -4.9967299452333531, -4.966713491904521, 0, 2.4209216646221081e-322, 4.6355706480840404e-310, 0.094350407766145158, -4.9967299452333531, -4.966713491904521, 0, 2.4209216646221081e-322, 0, 0.092234931003165113, -4.9938222218209125, -5.0210425115885524, 0, 2.1114883506317354e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b180 <T1>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-15 14:03:11]
Fault Injection Successful after 2.180367946624756s
[INFO -- 2018-11-15 14:03:11]
event type: exit
[EXCEPTION -- 2018-11-15 14:03:11]
exit code: no exit code available
