[INFO -- 2018-11-12 19:35:30]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 19:35:30]
Initialization strings:
[INFO -- 2018-11-12 19:35:30]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 19:35:30]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 19:35:30]
initSignal:0
[INFO -- 2018-11-12 19:35:30]
endSignal:10
[INFO -- 2018-11-12 19:35:30]
faultModel:1
[EXCEPTION -- 2018-11-12 19:35:31]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-12 19:35:31]
Backtrace BEGIN:
#0  0x000055555555520f in verifyUintDup (a=0, b=0) at lreg.cpp:69
#1  0x0000555555555960 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:139
#2  0x0000555555555a81 in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:153
#3  0x0000555555555da3 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:190
#4  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd930
address max offset: 8
Memory content after  bitflip:0x2d0x430x1c0xeb0xe20x170x2a0x3f
frame name: main
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 230
value: 0.00019907612800598145
value address: 0x7fffffffd930
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 19:35:31]
Fault Injection Successful after 1.9449021816253662s
[INFO -- 2018-11-12 19:35:32]
event type: exit
[EXCEPTION -- 2018-11-12 19:35:32]
exit code: no exit code available
