[INFO -- 2018-11-12 18:59:36]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 18:59:36]
Initialization strings:
[INFO -- 2018-11-12 18:59:36]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 18:59:36]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 18:59:36]
initSignal:0
[INFO -- 2018-11-12 18:59:36]
endSignal:10
[INFO -- 2018-11-12 18:59:36]
faultModel:1
[INFO -- 2018-11-12 18:59:37]
Backtrace BEGIN:
#0  verifyUintDup (a=8, b=8) at lreg.cpp:61
#1  0x000055555555576d in meanSquaredError () at lreg.cpp:125
#2  0x0000555555555da8 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:191
#3  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

56	*/
57	
58	int detected = 0;
59	
60	
61	UINT verifyUintDup(UINT a, UINT b){
62		if (a != b && detected != 1){
63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x210x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x555555772468
address max offset: 8
Memory content after  bitflip:0x210x000x810x000x000x000x000x00
frame name: meanSquaredError
symbol name: T1
symbol filename: lreg.cpp
symbol line: 36
value: std::vector of length 3, capacity 3 = {9.4475577271215556, 8.2599557237847634, -3.1320739991807454}
value address: 0x55555575b180 <T1>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-12 18:59:37]
Fault Injection Successful after 1.859431266784668s
[INFO -- 2018-11-12 18:59:38]
event type: exit
[EXCEPTION -- 2018-11-12 18:59:38]
exit code: no exit code available
