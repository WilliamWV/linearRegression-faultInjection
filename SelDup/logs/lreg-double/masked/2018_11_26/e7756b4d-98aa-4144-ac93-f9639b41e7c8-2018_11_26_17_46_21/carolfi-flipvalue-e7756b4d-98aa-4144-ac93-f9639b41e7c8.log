[INFO -- 2018-11-26 17:46:17]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 17:46:17]
Initialization strings:
[INFO -- 2018-11-26 17:46:17]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 17:46:17]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 17:46:17]
initSignal:0
[INFO -- 2018-11-26 17:46:17]
endSignal:3
[INFO -- 2018-11-26 17:46:17]
faultModel:1
[INFO -- 2018-11-26 17:46:18]
Backtrace BEGIN:
#0  0x0000555555555c02 in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:158
#1  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#2  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

153		double PD;
154		
155		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
156			PD = partialDerivate(verifyUintDup(i1, i2), verifyUintDup(i1, i2));
157			// alpha is different from the canonical version because this works better
158			double diff = ((verifyDoubleDup(alpha1, alpha2) / (sqrt( fabs(PD) ))) * PD);
159			T1[verifyUintDup(i1, i2)]= T1[verifyUintDup(i1, i2)] - diff;
160			T2[verifyUintDup(i1, i2)]= T2[verifyUintDup(i1, i2)] - diff;
161			 
162		}

Backtrace END
Memory content before bitflip:0x200x4e0x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd8dc
address max offset: 4
Memory content after  bitflip:0x200x4e0x600x00
frame name: main
symbol name: iterations
symbol filename: lreg.cpp
symbol line: 236
value: 6311456
value address: 0x7fffffffd8dc
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-26 17:46:18]
Fault Injection Successful after 1.2664270401000977s
[INFO -- 2018-11-26 17:46:21]
event type: exit
[INFO -- 2018-11-26 17:46:21]
exit code: 0
