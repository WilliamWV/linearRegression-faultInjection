[INFO -- 2018-11-26 21:16:33]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 21:16:33]
Initialization strings:
[INFO -- 2018-11-26 21:16:33]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 21:16:33]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 21:16:33]
initSignal:0
[INFO -- 2018-11-26 21:16:33]
endSignal:3
[INFO -- 2018-11-26 21:16:33]
faultModel:1
[INFO -- 2018-11-26 21:16:34]
Backtrace BEGIN:
#0  verifyUintDup (a=13, b=13) at lreg.cpp:61
#1  0x0000555555555906 in meanSquaredError () at lreg.cpp:128
#2  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:194
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

56	*/
57	
58	int detected = 0;
59	
60	
61	UINT verifyUintDup(UINT a, UINT b){
62		if (a != b && detected != 1){
63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x555555772710
address max offset: 8
Memory content after  bitflip:0x000x240x000x000x000x000x000x00
frame name: main
symbol name: x
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 17, capacity 32 = {-15, -9, -1, 29, 5, -18, 31, -16, -18, -28, 25, -14, 7, -2, -17, 21, -20}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-26 21:16:34]
Fault Injection Successful after 1.1027617454528809s
[INFO -- 2018-11-26 21:16:35]
event type: exit
[INFO -- 2018-11-26 21:16:35]
exit code: 0
