[INFO -- 2018-11-26 17:48:18]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 17:48:18]
Initialization strings:
[INFO -- 2018-11-26 17:48:18]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 17:48:18]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 17:48:18]
initSignal:0
[INFO -- 2018-11-26 17:48:18]
endSignal:3
[INFO -- 2018-11-26 17:48:18]
faultModel:1
[INFO -- 2018-11-26 17:48:19]
Backtrace BEGIN:
#0  0x0000555555555c13 in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:158
#1  0x0000555555555ee0 in train (iter1=10000, iter2=10000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:193
#2  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

153		double PD;
154		
155		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
156			PD = partialDerivate(verifyUintDup(i1, i2), verifyUintDup(i1, i2));
157			// alpha is different from the canonical version because this works better
158			double diff = ((verifyDoubleDup(alpha1, alpha2) / (sqrt( fabs(PD) ))) * PD);
159			T1[verifyUintDup(i1, i2)]= T1[verifyUintDup(i1, i2)] - diff;
160			T2[verifyUintDup(i1, i2)]= T2[verifyUintDup(i1, i2)] - diff;
161			 
162		}

Backtrace END
Fliping a bit of the value pointed by a pointer
Fliping a bit of the pointer
Memory content before bitflip:0xff0xe10xff0xff0xff0x7f0x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffde58
address max offset: 8
Memory content after  bitflip:0xff0xe10xff0xf30xff0x7f0x000x00
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 217
value: 0x7fffffffde58
value address: 0x7fffffffd8c0
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-26 17:48:19]
Fault Injection Successful after 1.0138051509857178s
[INFO -- 2018-11-26 17:48:21]
event type: exit
[INFO -- 2018-11-26 17:48:21]
exit code: 0
