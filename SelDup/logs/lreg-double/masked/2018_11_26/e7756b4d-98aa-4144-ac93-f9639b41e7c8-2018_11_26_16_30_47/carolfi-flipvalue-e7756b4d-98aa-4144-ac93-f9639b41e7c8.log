[INFO -- 2018-11-26 16:30:44]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 16:30:44]
Initialization strings:
[INFO -- 2018-11-26 16:30:44]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 16:30:44]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 16:30:44]
initSignal:0
[INFO -- 2018-11-26 16:30:44]
endSignal:3
[INFO -- 2018-11-26 16:30:44]
faultModel:1
[INFO -- 2018-11-26 16:30:46]
Backtrace BEGIN:
#0  0x0000555555555337 in verifyDoubleDup (a=-1.9522388602605358, b=-1.9522388602605358) at lreg.cpp:78
#1  0x00005555555557ea in predict (v=-18) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	
76		}	
77		return a;
78	}
79	
80	
81	void verifyChecksum(vector<double> vec){
82		if(detected!=1){

Backtrace END
Memory content before bitflip:0xa50xbe0xcd0x3a0x6b0xfa0x260xc1
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd728
address max offset: 8
Memory content after  bitflip:0xa50xbe0xad0x3a0x6b0xfa0x260xc1
frame name: partialDerivate
symbol name: pD
symbol filename: lreg.cpp
symbol line: 139
value: -752949.6146068169
value address: 0x7fffffffd728
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-26 16:30:46]
Fault Injection Successful after 2.3788154125213623s
[INFO -- 2018-11-26 16:30:47]
event type: exit
[INFO -- 2018-11-26 16:30:47]
exit code: 0
