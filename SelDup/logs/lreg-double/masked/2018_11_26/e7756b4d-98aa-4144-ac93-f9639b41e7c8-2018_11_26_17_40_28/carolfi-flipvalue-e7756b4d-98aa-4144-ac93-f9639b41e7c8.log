[INFO -- 2018-11-26 17:40:23]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 17:40:23]
Initialization strings:
[INFO -- 2018-11-26 17:40:23]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 17:40:23]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 17:40:23]
initSignal:0
[INFO -- 2018-11-26 17:40:23]
endSignal:3
[INFO -- 2018-11-26 17:40:23]
faultModel:1
[EXCEPTION -- 2018-11-26 17:40:25]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-26 17:40:25]
Backtrace BEGIN:
#0  0x0000555555555ae5 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:141
#1  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#2  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

136		to the adjustment variable whose position in T is passed in pos
137	*/
138	double partialDerivate(UINT pos1, UINT pos2){
139		double pD = 0;
140		
141		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<(x.size() - 1); i1++, i2++){
142			pD += ((predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)])*pow(x[verifyUintDup(i1, i2)], verifyUintDup(pos1, pos2)));	
143		}
144		pD *= (2.0/(x.size() - 1));
145		return pD;

Backtrace END
Memory content before bitflip:0xa00xce0xa60x1b0x3a0x2d0x1d0x40
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd7f8
address max offset: 8
Memory content after  bitflip:0xa00xce0xa60x5f0x3a0x2d0x1d0x40
frame name: train
symbol name: MSE
symbol filename: lreg.cpp
symbol line: 190
value: 7.2941679902611725
value address: 0x7fffffffd7f8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-26 17:40:25]
Fault Injection Successful after 2.189950704574585s
[INFO -- 2018-11-26 17:40:27]
event type: exit
[INFO -- 2018-11-26 17:40:27]
exit code: 0
