[INFO -- 2018-11-27 20:37:37]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 20:37:37]
Initialization strings:
[INFO -- 2018-11-27 20:37:37]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 20:37:37]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 20:37:37]
initSignal:0
[INFO -- 2018-11-27 20:37:37]
endSignal:3
[INFO -- 2018-11-27 20:37:37]
faultModel:1
[INFO -- 2018-11-27 20:37:37]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x55555575b180 <T1>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x00005555555569e6 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd840, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/stl_vector.h:328
#2  0x0000555555555f5f in train (iter1=10000, iter2=10000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:199
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Memory content before bitflip:0x01
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd7d0
address max offset: 1
Memory content after  bitflip:0x07
frame name: train
symbol name: stopsWhenStable
symbol filename: lreg.cpp
symbol line: 177
value: 7
value address: 0x7fffffffd7d0
Type: A boolean type.
Type sizeof: 1

[INFO -- 2018-11-27 20:37:37]
Fault Injection Successful after 0.9829728603363037s
[INFO -- 2018-11-27 20:37:39]
event type: exit
[INFO -- 2018-11-27 20:37:39]
exit code: 0
