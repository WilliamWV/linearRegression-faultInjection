[INFO -- 2018-11-27 19:27:33]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 19:27:33]
Initialization strings:
[INFO -- 2018-11-27 19:27:33]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 19:27:33]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 19:27:33]
initSignal:0
[INFO -- 2018-11-27 19:27:33]
endSignal:3
[INFO -- 2018-11-27 19:27:33]
faultModel:1
[EXCEPTION -- 2018-11-27 19:27:33]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-27 19:27:34]
Backtrace BEGIN:
#0  0x00005555555551e0 in verifyUintDup (a=1, b=1) at lreg.cpp:69
#1  0x000055555555576f in predict (v=-16) at lreg.cpp:115
#2  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Memory content before bitflip:0x000x000x000x000xe00x930xe20xc0
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd918
address max offset: 8
Memory content after  bitflip:0x000x000x410x000xe00x930xe20xc0
frame name: main
symbol name: temp
symbol filename: lreg.cpp
symbol line: 233
value: -38047.000030994415
value address: 0x7fffffffd918
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-27 19:27:34]
Fault Injection Successful after 1.8422200679779053s
[INFO -- 2018-11-27 19:27:35]
event type: exit
[INFO -- 2018-11-27 19:27:35]
exit code: 0
