[INFO -- 2018-11-27 18:11:55]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 18:11:55]
Initialization strings:
[INFO -- 2018-11-27 18:11:55]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 18:11:55]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 18:11:55]
initSignal:0
[INFO -- 2018-11-27 18:11:55]
endSignal:3
[INFO -- 2018-11-27 18:11:55]
faultModel:1
[EXCEPTION -- 2018-11-27 18:11:57]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-27 18:11:57]
Backtrace BEGIN:
#0  0x000055555555510c in verifyUintDup (a=3, b=3) at lreg.cpp:61
#1  0x00005555555557c3 in predict (v=21) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

56	*/
57	
58	int detected = 0;
59	
60	
61	UINT verifyUintDup(UINT a, UINT b){
62		if (a != b && detected != 1){
63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Fliping a bit of the value pointed by a pointer
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x2f
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffe1fe 
address max offset: 1
Memory content after  bitflip:0x37
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 217
value: 0x7fffffffde58
value address: 0x7fffffffd8c0
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-27 18:11:57]
Fault Injection Successful after 2.236306667327881s
[INFO -- 2018-11-27 18:11:58]
event type: exit
[INFO -- 2018-11-27 18:11:58]
exit code: 0
