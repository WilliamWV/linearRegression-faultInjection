[INFO -- 2018-11-27 16:21:16]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 16:21:16]
Initialization strings:
[INFO -- 2018-11-27 16:21:16]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 16:21:16]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 16:21:16]
initSignal:0
[INFO -- 2018-11-27 16:21:16]
endSignal:3
[INFO -- 2018-11-27 16:21:16]
faultModel:1
[INFO -- 2018-11-27 16:21:18]
Backtrace BEGIN:
#0  0x000055555555522d in verifyDoubleDup (a=1.2920048647492617, b=-1.0183357999548939) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=-10) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=10000, iter2=10000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0xd60xb70x2a0xd20x720x700xde0x3f
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd7f8
address max offset: 8
Memory content after  bitflip:0xd60xb70x2a0xd20x720x730xde0x3f
frame name: train
symbol name: MSE
symbol filename: lreg.cpp
symbol line: 190
value: 0.47579641841991582
value address: 0x7fffffffd7f8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-27 16:21:18]
Fault Injection Successful after 2.1855149269104004s
[INFO -- 2018-11-27 16:21:22]
event type: exit
[INFO -- 2018-11-27 16:21:22]
exit code: 0
