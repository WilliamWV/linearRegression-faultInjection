[INFO -- 2018-11-27 19:27:09]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 19:27:09]
Initialization strings:
[INFO -- 2018-11-27 19:27:09]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 19:27:09]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 19:27:09]
initSignal:0
[INFO -- 2018-11-27 19:27:09]
endSignal:3
[INFO -- 2018-11-27 19:27:09]
faultModel:1
[EXCEPTION -- 2018-11-27 19:27:10]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-27 19:27:12]
Backtrace BEGIN:
#0  0x00005555555567db in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b1a0 <T2>, __n=1) at /usr/include/c++/7/bits/stl_vector.h:799
#1  0x00005555555557ab in predict (v=-1) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.
803	       *  @param __n The index of the element for which data should be

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x800x240x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575b150 
address max offset: 8
Memory content after  bitflip:0x200x240x770x550x550x550x000x00
frame name: predict
symbol name: x
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 13, capacity 4 = {-4, -3, -7, -2, -1, -1, -21, -3, -19, 13, 6, 23, -19}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-27 19:27:12]
Fault Injection Successful after 3.3664512634277344s
[INFO -- 2018-11-27 19:27:15]
event type: exit
[INFO -- 2018-11-27 19:27:15]
exit code: 0
