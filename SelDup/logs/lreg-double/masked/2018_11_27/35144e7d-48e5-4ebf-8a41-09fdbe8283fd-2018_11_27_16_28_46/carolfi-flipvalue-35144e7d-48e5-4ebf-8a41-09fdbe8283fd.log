[INFO -- 2018-11-27 16:28:43]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 16:28:43]
Initialization strings:
[INFO -- 2018-11-27 16:28:43]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 16:28:43]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 16:28:43]
initSignal:0
[INFO -- 2018-11-27 16:28:43]
endSignal:3
[INFO -- 2018-11-27 16:28:43]
faultModel:1
[INFO -- 2018-11-27 16:28:43]
Backtrace BEGIN:
#0  0x00005555555551e0 in verifyUintDup (a=822, b=822) at lreg.cpp:69
#1  0x0000555555555e43 in train (iter1=10000, iter2=10000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:191
#2  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x700x230x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575b1b0 
address max offset: 8
Memory content after  bitflip:0x700x230x770x590x550x550x000x00
frame name: main
symbol name: T2
symbol filename: lreg.cpp
symbol line: 37
value: std::vector of length 2, capacity 8388610 = {0.3572045938531011, -1.0425362966666172}
value address: 0x55555575b1a0 <T2>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-27 16:28:43]
Fault Injection Successful after 0.6156697273254395s
[INFO -- 2018-11-27 16:28:45]
event type: exit
[INFO -- 2018-11-27 16:28:45]
exit code: 0
