[INFO -- 2018-11-12 17:23:31]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 17:23:31]
Initialization strings:
[INFO -- 2018-11-12 17:23:31]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 17:23:31]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 17:23:31]
initSignal:0
[INFO -- 2018-11-12 17:23:31]
endSignal:10
[INFO -- 2018-11-12 17:23:31]
faultModel:1
[INFO -- 2018-11-12 17:23:34]
Backtrace BEGIN:
#0  0x0000555555555909 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:139
#1  0x0000555555555a81 in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:153
#2  0x0000555555555da3 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:190
#3  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

134	*/
135	double partialDerivate(UINT pos1, UINT pos2){
136		double pD = 0;
137		
138		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<x.size(); i1++, i2++){
139			pD += ((predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)])*pow(x[verifyUintDup(i1, i2)], verifyUintDup(pos1, pos2)));	
140		}
141		pD *= (2.0/x.size());
142		return pD;
143	}

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575b1c8 
address max offset: 4
Memory content after  bitflip:0x000x000x000x14
frame name: partialDerivate
symbol name: detected
symbol filename: lreg.cpp
symbol line: 58
value: 335544320
value address: 0x55555575b1c8 <detected>
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-12 17:23:34]
Fault Injection Successful after 3.131089448928833s
[INFO -- 2018-11-12 17:23:44]
event type: exit
[INFO -- 2018-11-12 17:23:44]
exit code: 0
