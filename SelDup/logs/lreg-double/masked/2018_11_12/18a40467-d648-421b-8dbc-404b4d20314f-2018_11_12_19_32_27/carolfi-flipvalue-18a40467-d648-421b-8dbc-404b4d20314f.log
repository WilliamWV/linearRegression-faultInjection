[INFO -- 2018-11-12 19:32:20]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 19:32:20]
Initialization strings:
[INFO -- 2018-11-12 19:32:20]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 19:32:20]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 19:32:20]
initSignal:0
[INFO -- 2018-11-12 19:32:20]
endSignal:10
[INFO -- 2018-11-12 19:32:20]
faultModel:1
[INFO -- 2018-11-12 19:32:26]
Backtrace BEGIN:
#0  verifyDoubleDup (a=-1.1150018669017951, b=-1.1150018669017951) at lreg.cpp:70
#1  0x00005555555556bd in predict (v=-32) at lreg.cpp:113
#2  0x000055555555591a in partialDerivate (pos1=1, pos2=1) at lreg.cpp:139
#3  0x0000555555555a81 in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:153
#4  0x0000555555555da3 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:190
#5  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x230x050x8e0x9e0x0a0x6e0x6a0xc0
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd7a0
address max offset: 8
Memory content after  bitflip:0x370x050x8e0x9e0x0a0x6e0x6a0xc0
frame name: adjust
symbol name: PD
symbol filename: lreg.cpp
symbol line: 150
value: -211.43879630792955
value address: 0x7fffffffd7a0
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 19:32:26]
Fault Injection Successful after 6.566119194030762s
[INFO -- 2018-11-12 19:32:26]
event type: exit
[INFO -- 2018-11-12 19:32:26]
exit code: 0
