[INFO -- 2018-11-12 14:19:06]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 14:19:06]
Initialization strings:
[INFO -- 2018-11-12 14:19:06]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 14:19:06]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 14:19:06]
initSignal:0
[INFO -- 2018-11-12 14:19:06]
endSignal:10
[INFO -- 2018-11-12 14:19:06]
faultModel:1
[INFO -- 2018-11-12 14:19:08]
Backtrace BEGIN:
#0  0x0000555555555a7c in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:153
#1  0x0000555555555da3 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:190
#2  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

148	void adjust(double alpha1, double alpha2){
149		
150		double PD;
151		
152		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
153			PD = partialDerivate(verifyUintDup(i1, i2), verifyUintDup(i1, i2));
154			// alpha is different from the canonical version because this works better
155			double diff = ((verifyDoubleDup(alpha1, alpha2) / (sqrt( fabs(PD) ))) * PD);
156			T1[verifyUintDup(i1, i2)]= T1[verifyUintDup(i1, i2)] - diff;
157			T2[verifyUintDup(i1, i2)]= T2[verifyUintDup(i1, i2)] - diff;

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x555555772330
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x000x000x30
frame name: train
symbol name: x
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 8, capacity 8 = {6, -10, 2, -7, 5, 12, 8, -11}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-12 14:19:08]
Fault Injection Successful after 2.2895374298095703s
[INFO -- 2018-11-12 14:19:23]
event type: exit
[INFO -- 2018-11-12 14:19:23]
exit code: 0
