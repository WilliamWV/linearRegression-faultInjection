[INFO -- 2018-11-12 16:33:31]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 16:33:31]
Initialization strings:
[INFO -- 2018-11-12 16:33:31]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 16:33:31]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 16:33:31]
initSignal:0
[INFO -- 2018-11-12 16:33:31]
endSignal:10
[INFO -- 2018-11-12 16:33:31]
faultModel:1
[EXCEPTION -- 2018-11-12 16:33:32]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-12 16:33:32]
Backtrace BEGIN:
#0  0x0000555555555825 in meanSquaredError () at lreg.cpp:125
#1  0x0000555555555da8 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:191
#2  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

120	*/
121	double meanSquaredError(){
122		double error = 0;
123		
124		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<x.size(); i1++, i2++){
125			error+= ((predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)]) * (predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)]));	
126		}
127		error /= x.size();
128		return error;
129	

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd930
address max offset: 8
Memory content after  bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x2b
frame name: main
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 230
value: 9.3633527093843971e-101
value address: 0x7fffffffd930
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 16:33:32]
Fault Injection Successful after 1.8497998714447021s
[INFO -- 2018-11-12 16:33:46]
event type: exit
[INFO -- 2018-11-12 16:33:46]
exit code: 0
