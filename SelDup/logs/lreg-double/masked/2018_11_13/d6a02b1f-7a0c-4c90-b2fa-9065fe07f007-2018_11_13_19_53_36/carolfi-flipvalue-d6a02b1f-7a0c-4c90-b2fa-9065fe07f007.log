[INFO -- 2018-11-13 19:53:30]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-13 19:53:30]
Initialization strings:
[INFO -- 2018-11-13 19:53:30]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-13 19:53:30]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-13 19:53:30]
initSignal:0
[INFO -- 2018-11-13 19:53:30]
endSignal:5
[INFO -- 2018-11-13 19:53:30]
faultModel:1
[INFO -- 2018-11-13 19:53:31]
Backtrace BEGIN:
#0  0x0000555555555c13 in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:158
#1  0x0000555555555ee0 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:193
#2  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

153		double PD;
154		
155		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
156			PD = partialDerivate(verifyUintDup(i1, i2), verifyUintDup(i1, i2));
157			// alpha is different from the canonical version because this works better
158			double diff = ((verifyDoubleDup(alpha1, alpha2) / (sqrt( fabs(PD) ))) * PD);
159			T1[verifyUintDup(i1, i2)]= T1[verifyUintDup(i1, i2)] - diff;
160			T2[verifyUintDup(i1, i2)]= T2[verifyUintDup(i1, i2)] - diff;
161			 
162		}

Backtrace END
Memory content before bitflip:0xa00x8a0x480x230x300xe40x260xbf
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd788
address max offset: 8
Memory content after  bitflip:0xa00x8a0x480x230xb80xe40x260xbf
frame name: adjust
symbol name: diff
symbol filename: lreg.cpp
symbol line: 158
value: -0.00017466304565612756
value address: 0x7fffffffd788
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-13 19:53:31]
Fault Injection Successful after 1.2826237678527832s
[INFO -- 2018-11-13 19:53:35]
event type: exit
[INFO -- 2018-11-13 19:53:35]
exit code: 0
