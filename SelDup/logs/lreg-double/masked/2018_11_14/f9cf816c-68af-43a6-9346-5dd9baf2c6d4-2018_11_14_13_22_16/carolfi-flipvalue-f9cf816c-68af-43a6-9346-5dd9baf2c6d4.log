[INFO -- 2018-11-14 13:22:10]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 13:22:10]
Initialization strings:
[INFO -- 2018-11-14 13:22:10]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 13:22:10]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 13:22:10]
initSignal:0
[INFO -- 2018-11-14 13:22:10]
endSignal:5
[INFO -- 2018-11-14 13:22:10]
faultModel:1
[INFO -- 2018-11-14 13:22:11]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::~vector (this=0x7fffffffd870, __in_chrg=<optimized out>) at /usr/include/c++/7/bits/stl_vector.h:435
#1  0x0000555555555fb4 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:199
#2  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

430	       *  not touched in any way.  Managing the pointer is the user's
431	       *  responsibility.
432	       */
433	      ~vector() _GLIBCXX_NOEXCEPT
434	      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
435			      _M_get_Tp_allocator()); }
436	
437	      /**
438	       *  @brief  %Vector assignment operator.
439	       *  @param  __x  A %vector of identical element and allocator types.

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575b1b8 
address max offset: 4
Memory content after  bitflip:0x000x220x000x00
frame name: std::vector<double, std::allocator<double> >::~vector
symbol name: detected
symbol filename: lreg.cpp
symbol line: 58
value: 8704
value address: 0x55555575b1b8 <detected>
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-14 13:22:11]
Fault Injection Successful after 1.6126363277435303s
[INFO -- 2018-11-14 13:22:15]
event type: exit
[INFO -- 2018-11-14 13:22:15]
exit code: 0
