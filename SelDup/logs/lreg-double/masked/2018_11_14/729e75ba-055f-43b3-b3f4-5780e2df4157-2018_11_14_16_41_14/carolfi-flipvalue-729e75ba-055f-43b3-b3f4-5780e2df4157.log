[INFO -- 2018-11-14 16:41:07]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 16:41:07]
Initialization strings:
[INFO -- 2018-11-14 16:41:07]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 16:41:07]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 16:41:07]
initSignal:0
[INFO -- 2018-11-14 16:41:07]
endSignal:5
[INFO -- 2018-11-14 16:41:07]
faultModel:1
[INFO -- 2018-11-14 16:41:09]
Backtrace BEGIN:
#0  0x0000555555555c93 in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:160
#1  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#2  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

155		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
156			PD = partialDerivate(verifyUintDup(i1, i2), verifyUintDup(i1, i2));
157			// alpha is different from the canonical version because this works better
158			double diff = ((verifyDoubleDup(alpha1, alpha2) / (sqrt( fabs(PD) ))) * PD);
159			T1[verifyUintDup(i1, i2)]= T1[verifyUintDup(i1, i2)] - diff;
160			T2[verifyUintDup(i1, i2)]= T2[verifyUintDup(i1, i2)] - diff;
161			 
162		}
163	}
164	

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x980x850x40
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd928
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x980xad0x40
frame name: main
symbol name: temp
symbol filename: lreg.cpp
symbol line: 233
value: 3788
value address: 0x7fffffffd928
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 16:41:09]
Fault Injection Successful after 2.184802770614624s
[INFO -- 2018-11-14 16:41:13]
event type: exit
[INFO -- 2018-11-14 16:41:13]
exit code: 0
