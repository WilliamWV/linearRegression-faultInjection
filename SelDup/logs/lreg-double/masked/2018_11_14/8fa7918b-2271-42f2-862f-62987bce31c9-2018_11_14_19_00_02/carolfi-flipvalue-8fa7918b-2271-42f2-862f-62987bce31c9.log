[INFO -- 2018-11-14 18:59:52]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 18:59:52]
Initialization strings:
[INFO -- 2018-11-14 18:59:53]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 18:59:53]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 18:59:53]
initSignal:0
[INFO -- 2018-11-14 18:59:53]
endSignal:5
[INFO -- 2018-11-14 18:59:53]
faultModel:1
[INFO -- 2018-11-14 18:59:55]
Backtrace BEGIN:
#0  0x000055555555521d in verifyDoubleDup (a=4.2439915829186759e-314, b=-4.0011248481590771) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=-8) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x000xa60x9c0x4d0xe40x970xeb0x3f
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd738
address max offset: 8
Memory content after  bitflip:0x000x240x9c0x4d0xe40x970xeb0x3f
frame name: partialDerivate
symbol name: pD
symbol filename: lreg.cpp
symbol line: 139
value: 0.86229148061931937
value address: 0x7fffffffd738
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 18:59:55]
Fault Injection Successful after 2.6335480213165283s
[INFO -- 2018-11-14 19:00:01]
event type: exit
[INFO -- 2018-11-14 19:00:01]
exit code: 0
