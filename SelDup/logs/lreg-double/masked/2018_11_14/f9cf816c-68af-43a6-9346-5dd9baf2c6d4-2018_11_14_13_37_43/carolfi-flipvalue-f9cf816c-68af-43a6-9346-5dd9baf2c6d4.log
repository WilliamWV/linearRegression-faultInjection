[INFO -- 2018-11-14 13:37:33]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 13:37:33]
Initialization strings:
[INFO -- 2018-11-14 13:37:33]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 13:37:33]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 13:37:33]
initSignal:0
[INFO -- 2018-11-14 13:37:33]
endSignal:5
[INFO -- 2018-11-14 13:37:33]
faultModel:1
[INFO -- 2018-11-14 13:37:35]
Backtrace BEGIN:
#0  0x000055555555522d in verifyDoubleDup (a=1.0131505765981994, b=-0.63236371056584251) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=-15) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x110xd70x010xd20x520x3c0xe40xbf
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd480
address max offset: 8
Memory content after  bitflip:0x110xd70x010xd20x760x3c0xe40xbf
frame name: verifyDoubleDup
symbol name: b
symbol filename: lreg.cpp
symbol line: 70
value: -0.63238087670353782
value address: 0x7fffffffd480
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 13:37:35]
Fault Injection Successful after 2.4339449405670166s
[INFO -- 2018-11-14 13:37:41]
event type: exit
[INFO -- 2018-11-14 13:37:41]
exit code: 0
