[INFO -- 2018-11-16 11:08:14]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 11:08:14]
Initialization strings:
[INFO -- 2018-11-16 11:08:14]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 11:08:14]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 11:08:14]
initSignal:0
[INFO -- 2018-11-16 11:08:14]
endSignal:5
[INFO -- 2018-11-16 11:08:14]
faultModel:1
[INFO -- 2018-11-16 11:08:16]
Backtrace BEGIN:
#0  0x00005555555567ad in std::vector<double, std::allocator<double> >::size (this=0x55555575b140 <x>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x000055555555587d in meanSquaredError () at lreg.cpp:127
#2  0x0000555555555ee5 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:194
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Fliping a bit of the pointer
Memory content before bitflip:0x400xb10x750x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd758
address max offset: 8
Memory content after  bitflip:0x400xb10x750x550x550x950x000x00
frame name: std::vector<double, std::allocator<double> >::size
symbol name: this
symbol filename: lreg.cpp
symbol line: 0
value: 0x55555575b140 <x>
value address: 0x7fffffffd758
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-16 11:08:16]
Fault Injection Successful after 2.4584879875183105s
[INFO -- 2018-11-16 11:08:22]
event type: exit
[INFO -- 2018-11-16 11:08:22]
exit code: 0
