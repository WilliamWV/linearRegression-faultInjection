[INFO -- 2018-11-15 12:49:12]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 12:49:12]
Initialization strings:
[INFO -- 2018-11-15 12:49:12]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 12:49:12]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 12:49:12]
initSignal:0
[INFO -- 2018-11-15 12:49:12]
endSignal:5
[INFO -- 2018-11-15 12:49:12]
faultModel:1
[INFO -- 2018-11-15 12:49:15]
Backtrace BEGIN:
#0  0x000055555555679a in std::vector<double, std::allocator<double> >::size (this=0x0) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x0000555555555a10 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:141
#2  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x000x6a0x820x9f0x5f0xc30xfe0x9c
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd788
address max offset: 8
Memory content after  bitflip:0x000x6a0xa60x9f0x5f0xc30xfe0x9c
frame name: adjust
symbol name: diff
symbol filename: lreg.cpp
symbol line: 158
value: -5.0946416504631142e-169
value address: 0x7fffffffd788
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-15 12:49:15]
Fault Injection Successful after 3.0070741176605225s
[INFO -- 2018-11-15 12:49:20]
event type: exit
[INFO -- 2018-11-15 12:49:20]
exit code: 0
