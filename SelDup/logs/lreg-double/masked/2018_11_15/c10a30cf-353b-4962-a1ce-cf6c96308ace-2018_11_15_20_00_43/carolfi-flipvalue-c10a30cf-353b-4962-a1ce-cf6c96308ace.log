[INFO -- 2018-11-15 20:00:37]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 20:00:37]
Initialization strings:
[INFO -- 2018-11-15 20:00:37]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 20:00:37]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 20:00:37]
initSignal:0
[INFO -- 2018-11-15 20:00:37]
endSignal:5
[INFO -- 2018-11-15 20:00:37]
faultModel:1
[INFO -- 2018-11-15 20:00:41]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x2) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x000055555555577d in predict (v=12) at lreg.cpp:115
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x000x000x000x000x000xc00x500xc0
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd930
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000xc00x420xc0
frame name: main
symbol name: xChecksum
symbol filename: lreg.cpp
symbol line: 233
value: -37.5
value address: 0x7fffffffd930
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-15 20:00:41]
Fault Injection Successful after 4.587337255477905s
[INFO -- 2018-11-15 20:00:42]
event type: exit
[INFO -- 2018-11-15 20:00:42]
exit code: 0
