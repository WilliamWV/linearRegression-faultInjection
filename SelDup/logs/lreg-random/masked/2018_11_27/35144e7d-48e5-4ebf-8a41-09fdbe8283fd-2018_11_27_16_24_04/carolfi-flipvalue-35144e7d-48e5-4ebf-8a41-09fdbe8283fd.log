[INFO -- 2018-11-27 16:24:01]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 16:24:01]
Initialization strings:
[INFO -- 2018-11-27 16:24:01]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 16:24:01]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 16:24:01]
initSignal:0
[INFO -- 2018-11-27 16:24:01]
endSignal:3
[INFO -- 2018-11-27 16:24:01]
faultModel:2
[INFO -- 2018-11-27 16:24:01]
Backtrace BEGIN:
#0  0x00005555555567a9 in std::vector<double, std::allocator<double> >::size (this=0x55555575b180 <T1>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x0000555555555b87 in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:155
#2  0x0000555555555ee0 in train (iter1=10000, iter2=10000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:193
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x400x40
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd928
address max offset: 8
Memory content after  bitflip:0xbd0x0a0x790x300x150x160x3d0x47
frame name: main
symbol name: yChecksum
symbol filename: lreg.cpp
symbol line: 233
value: 1.5102450070181434e+35
value address: 0x7fffffffd928
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-27 16:24:01]
Fault Injection Successful after 0.9217591285705566s
[INFO -- 2018-11-27 16:24:03]
event type: exit
[INFO -- 2018-11-27 16:24:03]
exit code: 0
