[INFO -- 2018-11-27 20:21:22]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 20:21:22]
Initialization strings:
[INFO -- 2018-11-27 20:21:22]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 20:21:22]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 20:21:22]
initSignal:0
[INFO -- 2018-11-27 20:21:22]
endSignal:3
[INFO -- 2018-11-27 20:21:22]
faultModel:2
[EXCEPTION -- 2018-11-27 20:21:23]
gdbException: Attempt to dereference a generic pointer.
[EXCEPTION -- 2018-11-27 20:21:23]
gdbException: Attempt to dereference a generic pointer.
[EXCEPTION -- 2018-11-27 20:21:23]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-27 20:21:23]
Backtrace BEGIN:
#0  0x000055555555536f in verifyDoubleDup (a=0.71809161276893618, b=0.71809161276893618) at lreg.cpp:78
#1  0x00005555555557ea in predict (v=-1) at lreg.cpp:116
#2  0x0000555555555928 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	
76		}	
77		return a;
78	}
79	
80	
81	void verifyChecksum(vector<double> vec){
82		if(detected!=1){

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b1b8 
address max offset: 4
Memory content after  bitflip:0x700x920xcc0x67
frame name: verifyDoubleDup
symbol name: detected
symbol filename: lreg.cpp
symbol line: 58
value: 1741460080
value address: 0x55555575b1b8 <detected>
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-27 20:21:23]
Fault Injection Successful after 1.7348179817199707s
[INFO -- 2018-11-27 20:21:25]
event type: exit
[INFO -- 2018-11-27 20:21:25]
exit code: 0
