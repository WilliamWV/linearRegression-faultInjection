[INFO -- 2018-11-27 18:12:51]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 18:12:51]
Initialization strings:
[INFO -- 2018-11-27 18:12:51]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 18:12:51]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 18:12:51]
initSignal:0
[INFO -- 2018-11-27 18:12:51]
endSignal:3
[INFO -- 2018-11-27 18:12:51]
faultModel:2
[INFO -- 2018-11-27 18:12:52]
Backtrace BEGIN:
#0  0x000055555555520f in verifyUintDup (a=2, b=2) at lreg.cpp:69
#1  0x000055555555576f in predict (v=7) at lreg.cpp:115
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=10000, iter2=10000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x400x40
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd928
address max offset: 8
Memory content after  bitflip:0x6c0xa80x370x8d0x520x300x730xb2
frame name: main
symbol name: yChecksum
symbol filename: lreg.cpp
symbol line: 233
value: -1.1388010443683826e-65
value address: 0x7fffffffd928
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-27 18:12:52]
Fault Injection Successful after 1.1550955772399902s
[INFO -- 2018-11-27 18:12:54]
event type: exit
[INFO -- 2018-11-27 18:12:54]
exit code: 0
