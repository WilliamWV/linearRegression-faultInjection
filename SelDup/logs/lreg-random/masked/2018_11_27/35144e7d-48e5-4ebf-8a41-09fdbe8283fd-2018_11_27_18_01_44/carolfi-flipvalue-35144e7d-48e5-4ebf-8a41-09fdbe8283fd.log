[INFO -- 2018-11-27 18:01:41]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 18:01:41]
Initialization strings:
[INFO -- 2018-11-27 18:01:41]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 18:01:41]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 18:01:41]
initSignal:0
[INFO -- 2018-11-27 18:01:41]
endSignal:3
[INFO -- 2018-11-27 18:01:41]
faultModel:2
[INFO -- 2018-11-27 18:01:42]
Backtrace BEGIN:
#0  0x000055555555536f in verifyDoubleDup (a=-3.9919754410347461, b=-3.9919754410347461) at lreg.cpp:78
#1  0x00005555555557ea in predict (v=-18) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	
76		}	
77		return a;
78	}
79	
80	
81	void verifyChecksum(vector<double> vec){
82		if(detected!=1){

Backtrace END
Memory content before bitflip:0x6f0x6f0xed0xd10x900xef0x0f0xc0
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd470
address max offset: 8
Memory content after  bitflip:0x330x8c0x810xb40x990x080x3d0xc0
frame name: verifyDoubleDup
symbol name: b
symbol filename: lreg.cpp
symbol line: 70
value: -29.033595353725286
value address: 0x7fffffffd470
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-27 18:01:42]
Fault Injection Successful after 1.1223459243774414s
[INFO -- 2018-11-27 18:01:43]
event type: exit
[INFO -- 2018-11-27 18:01:43]
exit code: 0
