[INFO -- 2018-11-27 20:46:12]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 20:46:12]
Initialization strings:
[INFO -- 2018-11-27 20:46:12]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 20:46:12]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 20:46:12]
initSignal:0
[INFO -- 2018-11-27 20:46:12]
endSignal:3
[INFO -- 2018-11-27 20:46:12]
faultModel:2
[EXCEPTION -- 2018-11-27 20:46:13]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-27 20:46:14]
Backtrace BEGIN:
#0  0x0000555555555366 in verifyDoubleDup (a=-0.044433488721383398, b=-0.044433488721383398) at lreg.cpp:78
#1  0x00005555555557ea in predict (v=-4) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	
76		}	
77		return a;
78	}
79	
80	
81	void verifyChecksum(vector<double> vec){
82		if(detected!=1){

Backtrace END
Memory content before bitflip:0x0c0x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd8e4
address max offset: 4
Memory content after  bitflip:0x570x890x970x16
frame name: main
symbol name: sizeOfTraining
symbol filename: lreg.cpp
symbol line: 236
value: 379029847
value address: 0x7fffffffd8e4
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-27 20:46:14]
Fault Injection Successful after 2.232252597808838s
[INFO -- 2018-11-27 20:46:18]
event type: exit
[INFO -- 2018-11-27 20:46:18]
exit code: 0
