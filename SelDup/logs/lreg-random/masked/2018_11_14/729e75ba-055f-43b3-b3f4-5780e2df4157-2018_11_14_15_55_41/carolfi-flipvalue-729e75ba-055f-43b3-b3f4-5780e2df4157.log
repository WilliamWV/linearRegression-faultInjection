[INFO -- 2018-11-14 15:55:31]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 15:55:31]
Initialization strings:
[INFO -- 2018-11-14 15:55:31]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 15:55:31]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 15:55:31]
initSignal:0
[INFO -- 2018-11-14 15:55:31]
endSignal:5
[INFO -- 2018-11-14 15:55:31]
faultModel:2
[EXCEPTION -- 2018-11-14 15:55:34]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-14 15:55:34]
Backtrace BEGIN:
#0  verifyDoubleDup (a=0.90408052183170262, b=0.90408052183170262) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=12) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x2f0xdc0x6d0x030x8c0x000xe00x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd800
address max offset: 8
Memory content after  bitflip:0x3b0x3d0xb50x670x890x470xb70x96
frame name: train
symbol name: bestMSE
symbol filename: lreg.cpp
symbol line: 189
value: -3.041273062038044e-199
value address: 0x7fffffffd800
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 15:55:34]
Fault Injection Successful after 3.4326446056365967s
[INFO -- 2018-11-14 15:55:40]
event type: exit
[INFO -- 2018-11-14 15:55:40]
exit code: 0
