[INFO -- 2018-11-14 15:45:09]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 15:45:09]
Initialization strings:
[INFO -- 2018-11-14 15:45:09]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 15:45:09]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 15:45:09]
initSignal:0
[INFO -- 2018-11-14 15:45:09]
endSignal:5
[INFO -- 2018-11-14 15:45:09]
faultModel:2
[INFO -- 2018-11-14 15:45:10]
Backtrace BEGIN:
#0  0x000055555555511f in verifyUintDup (a=5, b=5) at lreg.cpp:61
#1  0x000055555555589e in meanSquaredError () at lreg.cpp:128
#2  0x0000555555555ee5 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:194
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

56	*/
57	
58	int detected = 0;
59	
60	
61	UINT verifyUintDup(UINT a, UINT b){
62		if (a != b && detected != 1){
63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x5555557724d8
address max offset: 8
Memory content after  bitflip:0x840xc10x470x7b0x510x9f0x670xe9
frame name: meanSquaredError
symbol name: y
symbol filename: lreg.cpp
symbol line: 35
value: std::vector of length 9, capacity 16 = {-2, -2, -2, -2, -2, -2, -2, -2, -16}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-14 15:45:10]
Fault Injection Successful after 1.925671100616455s
[INFO -- 2018-11-14 15:45:17]
event type: exit
[INFO -- 2018-11-14 15:45:17]
exit code: 0
