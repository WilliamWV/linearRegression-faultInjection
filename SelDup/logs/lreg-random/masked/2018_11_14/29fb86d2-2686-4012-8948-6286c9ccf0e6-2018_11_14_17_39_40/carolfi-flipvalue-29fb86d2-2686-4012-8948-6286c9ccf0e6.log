[INFO -- 2018-11-14 17:39:32]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 17:39:32]
Initialization strings:
[INFO -- 2018-11-14 17:39:32]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 17:39:32]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 17:39:32]
initSignal:0
[INFO -- 2018-11-14 17:39:32]
endSignal:5
[INFO -- 2018-11-14 17:39:32]
faultModel:2
[INFO -- 2018-11-14 17:39:33]
Backtrace BEGIN:
#0  0x0000555555555bc3 in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#1  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#2  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

151	void adjust(double alpha1, double alpha2){
152		
153		double PD;
154		
155		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
156			PD = partialDerivate(verifyUintDup(i1, i2), verifyUintDup(i1, i2));
157			// alpha is different from the canonical version because this works better
158			double diff = ((verifyDoubleDup(alpha1, alpha2) / (sqrt( fabs(PD) ))) * PD);
159			T1[verifyUintDup(i1, i2)]= T1[verifyUintDup(i1, i2)] - diff;
160			T2[verifyUintDup(i1, i2)]= T2[verifyUintDup(i1, i2)] - diff;

Backtrace END
Memory content before bitflip:0x970x3e0x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd790
address max offset: 8
Memory content after  bitflip:0x5f0xee0xfd0x970x380x980x2f0xec
frame name: adjust
symbol name: PD
symbol filename: lreg.cpp
symbol line: 153
value: -1.3295356883070404e+213
value address: 0x7fffffffd790
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 17:39:33]
Fault Injection Successful after 1.925431728363037s
[INFO -- 2018-11-14 17:39:38]
event type: exit
[INFO -- 2018-11-14 17:39:38]
exit code: 0
