[INFO -- 2018-11-14 20:09:49]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 20:09:49]
Initialization strings:
[INFO -- 2018-11-14 20:09:50]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 20:09:50]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 20:09:50]
initSignal:0
[INFO -- 2018-11-14 20:09:50]
endSignal:5
[INFO -- 2018-11-14 20:09:50]
faultModel:2
[INFO -- 2018-11-14 20:09:51]
Backtrace BEGIN:
#0  0x000055555555510c in verifyUintDup (a=0, b=0) at lreg.cpp:61
#1  0x0000555555555aaa in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

56	*/
57	
58	int detected = 0;
59	
60	
61	UINT verifyUintDup(UINT a, UINT b){
62		if (a != b && detected != 1){
63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Fliping a bit of the pointer
Memory content before bitflip:0x680xde0xff0xff0xff0x7f0x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd8d0
address max offset: 8
Memory content after  bitflip:0x020x800xc50x2f0x2b0xfb0x860x3e
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 217
value: 0x7fffffffde68
value address: 0x7fffffffd8d0
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-14 20:09:51]
Fault Injection Successful after 1.7292025089263916s
[INFO -- 2018-11-14 20:09:58]
event type: exit
[INFO -- 2018-11-14 20:09:58]
exit code: 0
