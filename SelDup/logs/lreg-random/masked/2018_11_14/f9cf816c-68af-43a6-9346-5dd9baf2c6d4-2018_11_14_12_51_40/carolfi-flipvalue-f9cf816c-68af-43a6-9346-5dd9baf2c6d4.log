[INFO -- 2018-11-14 12:51:32]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 12:51:32]
Initialization strings:
[INFO -- 2018-11-14 12:51:32]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 12:51:32]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 12:51:32]
initSignal:0
[INFO -- 2018-11-14 12:51:32]
endSignal:5
[INFO -- 2018-11-14 12:51:32]
faultModel:2
[INFO -- 2018-11-14 12:51:35]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x0) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x000055555555577d in predict (v=5) at lreg.cpp:115
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x030x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd8dc
address max offset: 4
Memory content after  bitflip:0xbf0x5b0xca0xab
frame name: main
symbol name: argc
symbol filename: lreg.cpp
symbol line: 217
value: -1412801601
value address: 0x7fffffffd8dc
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-14 12:51:35]
Fault Injection Successful after 3.5931081771850586s
[INFO -- 2018-11-14 12:51:38]
event type: exit
[INFO -- 2018-11-14 12:51:38]
exit code: 0
