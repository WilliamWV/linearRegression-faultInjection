[INFO -- 2018-11-14 18:02:47]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 18:02:47]
Initialization strings:
[INFO -- 2018-11-14 18:02:47]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 18:02:47]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 18:02:47]
initSignal:0
[INFO -- 2018-11-14 18:02:47]
endSignal:5
[INFO -- 2018-11-14 18:02:47]
faultModel:2
[EXCEPTION -- 2018-11-14 18:02:48]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-14 18:02:48]
Backtrace BEGIN:
#0  0x000055555555521d in verifyDoubleDup (a=0, b=2.0389211047690075) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=6) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x610xd60x1e0x290xf40xd20xf20x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd808
address max offset: 8
Memory content after  bitflip:0xdb0xb40xeb0x7b0xf30x490x6a0xb2
frame name: train
symbol name: MSE
symbol filename: lreg.cpp
symbol line: 190
value: -7.8008675155206806e-66
value address: 0x7fffffffd808
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 18:02:48]
Fault Injection Successful after 1.5420925617218018s
[INFO -- 2018-11-14 18:02:54]
event type: exit
[INFO -- 2018-11-14 18:02:54]
exit code: 0
