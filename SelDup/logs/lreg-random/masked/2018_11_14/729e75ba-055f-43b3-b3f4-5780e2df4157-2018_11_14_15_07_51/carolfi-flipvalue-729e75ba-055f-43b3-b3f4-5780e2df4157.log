[INFO -- 2018-11-14 15:07:41]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 15:07:41]
Initialization strings:
[INFO -- 2018-11-14 15:07:41]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 15:07:41]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 15:07:41]
initSignal:0
[INFO -- 2018-11-14 15:07:41]
endSignal:5
[INFO -- 2018-11-14 15:07:41]
faultModel:2
[INFO -- 2018-11-14 15:07:44]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b1a0 <T2>, __n=1) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x00005555555557ab in predict (v=1) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Fliping a bit of the pointer
Memory content before bitflip:0x680xde0xff0xff0xff0x7f0x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd8d0
address max offset: 8
Memory content after  bitflip:0xc00xec0x120x7f0xfc0x850xf30x7d
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 217
value: 0x7fffffffde68
value address: 0x7fffffffd8d0
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-14 15:07:44]
Fault Injection Successful after 3.5922281742095947s
[INFO -- 2018-11-14 15:07:50]
event type: exit
[INFO -- 2018-11-14 15:07:50]
exit code: 0
