[INFO -- 2018-11-14 16:48:51]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 16:48:51]
Initialization strings:
[INFO -- 2018-11-14 16:48:51]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 16:48:51]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 16:48:51]
initSignal:0
[INFO -- 2018-11-14 16:48:51]
endSignal:5
[INFO -- 2018-11-14 16:48:51]
faultModel:2
[INFO -- 2018-11-14 16:48:53]
Backtrace BEGIN:
#0  0x000055555555582b in predict (v=-13) at lreg.cpp:115
#1  0x0000555555555928 in meanSquaredError () at lreg.cpp:128
#2  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

110		Predicts the value related to v using the Ts variables
111	*/
112	double predict(double v){
113		double val = 0;
114		
115		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
116			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
117		}
118		return val;
119		

Backtrace END
Fliping a bit of the value pointed by a pointer
Fliping a bit of the pointer
Memory content before bitflip:0x010xe20xff0xff0xff0x7f0x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffde68
address max offset: 8
Memory content after  bitflip:0x3a0x350x2d0xd60xaa0xc20x560xd6
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 217
value: 0x7fffffffde68
value address: 0x7fffffffd8d0
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-14 16:48:53]
Fault Injection Successful after 2.7348508834838867s
[INFO -- 2018-11-14 16:48:59]
event type: exit
[INFO -- 2018-11-14 16:48:59]
exit code: 0
