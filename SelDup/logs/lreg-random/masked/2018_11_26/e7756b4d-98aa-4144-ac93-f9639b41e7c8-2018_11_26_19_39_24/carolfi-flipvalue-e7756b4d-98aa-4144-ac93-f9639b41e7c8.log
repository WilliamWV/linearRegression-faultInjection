[INFO -- 2018-11-26 19:39:21]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 19:39:21]
Initialization strings:
[INFO -- 2018-11-26 19:39:21]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 19:39:21]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 19:39:21]
initSignal:0
[INFO -- 2018-11-26 19:39:21]
endSignal:3
[INFO -- 2018-11-26 19:39:21]
faultModel:2
[EXCEPTION -- 2018-11-26 19:39:22]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-26 19:39:22]
Backtrace BEGIN:
#0  verifyUintDup (a=2, b=2) at lreg.cpp:68
#1  0x0000555555555a99 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log

Backtrace END
Memory content before bitflip:0x550x3d0x200xb80xd50xe00x9c0xbf
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd780
address max offset: 8
Memory content after  bitflip:0xf90xf80x450x220x0d0x930xd70x32
frame name: adjust
symbol name: PD
symbol filename: lreg.cpp
symbol line: 153
value: 8.9540997669300708e-64
value address: 0x7fffffffd780
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-26 19:39:22]
Fault Injection Successful after 1.7481014728546143s
[INFO -- 2018-11-26 19:39:24]
event type: exit
[INFO -- 2018-11-26 19:39:24]
exit code: 0
