[INFO -- 2018-11-26 16:29:59]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 16:29:59]
Initialization strings:
[INFO -- 2018-11-26 16:29:59]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 16:29:59]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 16:29:59]
initSignal:0
[INFO -- 2018-11-26 16:29:59]
endSignal:3
[INFO -- 2018-11-26 16:29:59]
faultModel:2
[INFO -- 2018-11-26 16:30:00]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x1, __n=0) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x00005555555557ab in predict (v=6) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x580x230x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b1a8 
address max offset: 8
Memory content after  bitflip:0x750x830x2c0x420xe80xa60x4d0x56
frame name: train
symbol name: T2
symbol filename: lreg.cpp
symbol line: 37
value: std::vector of length 777339543993363462, capacity 3 = {1.3580170355935506, -0.022656719968348314, -2.9934014535603208, 1.6304166312761136e-322, 1.3579244977851002, -0.022656719968348314, -2.9934014535603208, 2.4209216646221081e-322, 0, 8, 12, 5, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 6.3482494834141768e-320, 0, 0, 0, 0, 0, 7.1639518646980749e-322, -4, -3, -7, -2, -1, -1, -21, -3, -19, 13, 6, 23, -19, 0, 0, 0, 0, 7.1639518646980749e-322, -44, -23, -143, -8, 1, 1, -1319, -23, -1079, -503, -104, -1583, -4827, 0, 0, 0, 0, 1.6304166312761136e-322, 1.3580170355935506, -0.022656719968348314, -2.9934014535603208, 1.6304166312761136e-322, 1.3579244977851002, -0.022656719968348314, -2.9934014535603208, 1.6304166312761136e-322, 4.6355706480405627e-310, -0.022665098073742809, -2.993268467164468, 1.6304166312761136e-322, 0, -0.022656719968348314, -2.9934014535603208, 2.155756632499111e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b1a0 <T2>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-26 16:30:00]
Fault Injection Successful after 1.8049523830413818s
[INFO -- 2018-11-26 16:30:02]
event type: exit
[INFO -- 2018-11-26 16:30:02]
exit code: 0
