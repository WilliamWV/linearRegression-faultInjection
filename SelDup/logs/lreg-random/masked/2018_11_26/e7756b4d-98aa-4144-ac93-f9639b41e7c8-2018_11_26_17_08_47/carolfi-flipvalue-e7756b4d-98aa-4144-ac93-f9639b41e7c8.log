[INFO -- 2018-11-26 17:08:44]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 17:08:44]
Initialization strings:
[INFO -- 2018-11-26 17:08:44]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 17:08:44]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 17:08:44]
initSignal:0
[INFO -- 2018-11-26 17:08:44]
endSignal:3
[INFO -- 2018-11-26 17:08:44]
faultModel:2
[INFO -- 2018-11-26 17:08:46]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0xc) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x000055555555577d in predict (v=7) at lreg.cpp:115
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd6d8
address max offset: 8
Memory content after  bitflip:0x4d0x920x0f0xdf0x1a0x710x190x15
frame name: predict
symbol name: val
symbol filename: lreg.cpp
symbol line: 113
value: 4.9528035686081011e-207
value address: 0x7fffffffd6d8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-26 17:08:46]
Fault Injection Successful after 2.0042173862457275s
[INFO -- 2018-11-26 17:08:47]
event type: exit
[INFO -- 2018-11-26 17:08:47]
exit code: 0
