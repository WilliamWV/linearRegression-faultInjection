[INFO -- 2018-11-26 14:57:00]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 14:57:00]
Initialization strings:
[INFO -- 2018-11-26 14:57:00]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 14:57:00]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 14:57:00]
initSignal:0
[INFO -- 2018-11-26 14:57:00]
endSignal:3
[INFO -- 2018-11-26 14:57:00]
faultModel:2
[INFO -- 2018-11-26 14:57:00]
Backtrace BEGIN:
#0  0x000055555555576a in predict (v=-1) at lreg.cpp:115
#1  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

110		Predicts the value related to v using the Ts variables
111	*/
112	double predict(double v){
113		double val = 0;
114		
115		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
116			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
117		}
118		return val;
119		

Backtrace END
Memory content before bitflip:0xbd0x810x170x290xcd0xce0xe10xbe
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd788
address max offset: 8
Memory content after  bitflip:0x4c0xc80x5c0xfb0x9d0x270x450xac
frame name: adjust
symbol name: diff
symbol filename: lreg.cpp
symbol line: 158
value: -1.9807942657414653e-95
value address: 0x7fffffffd788
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-26 14:57:00]
Fault Injection Successful after 0.9504110813140869s
[INFO -- 2018-11-26 14:57:02]
event type: exit
[INFO -- 2018-11-26 14:57:02]
exit code: 0
