[INFO -- 2018-11-26 18:24:59]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 18:24:59]
Initialization strings:
[INFO -- 2018-11-26 18:24:59]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 18:24:59]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 18:24:59]
initSignal:0
[INFO -- 2018-11-26 18:24:59]
endSignal:3
[INFO -- 2018-11-26 18:24:59]
faultModel:2
[INFO -- 2018-11-26 18:25:00]
Backtrace BEGIN:
#0  0x00005555555551e0 in verifyUintDup (a=1, b=1) at lreg.cpp:69
#1  0x00005555555557c3 in predict (v=-17) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Fliping a bit of the value pointed by a pointer
Fliping a bit of the pointer
Memory content before bitflip:0xff0xe10xff0xff0xff0x7f0x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffde58
address max offset: 8
Memory content after  bitflip:0xd00x110xe40xfb0xdd0x500x3c0x43
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 217
value: 0x7fffffffde58
value address: 0x7fffffffd8c0
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-26 18:25:00]
Fault Injection Successful after 1.9074857234954834s
[INFO -- 2018-11-26 18:25:01]
event type: exit
[INFO -- 2018-11-26 18:25:01]
exit code: 0
