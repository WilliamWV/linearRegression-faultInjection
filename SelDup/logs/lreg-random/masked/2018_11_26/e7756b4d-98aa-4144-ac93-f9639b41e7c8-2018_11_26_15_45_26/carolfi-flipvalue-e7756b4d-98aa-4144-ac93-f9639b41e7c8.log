[INFO -- 2018-11-26 15:45:22]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 15:45:22]
Initialization strings:
[INFO -- 2018-11-26 15:45:22]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 15:45:22]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 15:45:22]
initSignal:0
[INFO -- 2018-11-26 15:45:22]
endSignal:3
[INFO -- 2018-11-26 15:45:22]
faultModel:2
[INFO -- 2018-11-26 15:45:25]
Backtrace BEGIN:
#0  verifyDoubleDup (a=0.25857559578819578, b=0.25857559578819578) at lreg.cpp:77
#1  0x00005555555557ea in predict (v=25) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	
76		}	
77		return a;
78	}
79	
80	
81	void verifyChecksum(vector<double> vec){

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x340xc0
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd920
address max offset: 8
Memory content after  bitflip:0x800x050x120x7a0xb80x240xf80x86
frame name: main
symbol name: xChecksum
symbol filename: lreg.cpp
symbol line: 233
value: -4.3583601909145152e-275
value address: 0x7fffffffd920
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-26 15:45:25]
Fault Injection Successful after 3.6907615661621094s
[INFO -- 2018-11-26 15:45:26]
event type: exit
[INFO -- 2018-11-26 15:45:26]
exit code: 0
