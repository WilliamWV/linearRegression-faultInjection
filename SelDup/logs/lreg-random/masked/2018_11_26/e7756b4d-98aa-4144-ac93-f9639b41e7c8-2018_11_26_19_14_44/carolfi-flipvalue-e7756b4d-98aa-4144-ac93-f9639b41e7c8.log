[INFO -- 2018-11-26 19:14:38]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 19:14:38]
Initialization strings:
[INFO -- 2018-11-26 19:14:38]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 19:14:38]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 19:14:38]
initSignal:0
[INFO -- 2018-11-26 19:14:38]
endSignal:3
[INFO -- 2018-11-26 19:14:38]
faultModel:2
[INFO -- 2018-11-26 19:14:40]
Backtrace BEGIN:
#0  0x000055555555523e in verifyDoubleDup (a=0.21041081014289262, b=0.21041081014289262) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=-1) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x330xc0
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd920
address max offset: 8
Memory content after  bitflip:0xad0x350xa90xa00x1c0xad0x1c0x46
frame name: main
symbol name: xChecksum
symbol filename: lreg.cpp
symbol line: 233
value: 5.6799101643036203e+29
value address: 0x7fffffffd920
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-26 19:14:40]
Fault Injection Successful after 2.045954704284668s
[INFO -- 2018-11-26 19:14:43]
event type: exit
[INFO -- 2018-11-26 19:14:43]
exit code: 0
