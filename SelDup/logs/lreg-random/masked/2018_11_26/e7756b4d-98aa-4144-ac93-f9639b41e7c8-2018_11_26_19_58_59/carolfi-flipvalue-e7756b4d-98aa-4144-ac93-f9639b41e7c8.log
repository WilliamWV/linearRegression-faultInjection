[INFO -- 2018-11-26 19:58:56]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 19:58:56]
Initialization strings:
[INFO -- 2018-11-26 19:58:56]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 19:58:56]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 19:58:56]
initSignal:0
[INFO -- 2018-11-26 19:58:56]
endSignal:3
[INFO -- 2018-11-26 19:58:56]
faultModel:2
[EXCEPTION -- 2018-11-26 19:58:56]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-26 19:58:57]
Backtrace BEGIN:
#0  partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#1  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#2  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

137	*/
138	double partialDerivate(UINT pos1, UINT pos2){
139		double pD = 0;
140		
141		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<(x.size() - 1); i1++, i2++){
142			pD += ((predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)])*pow(x[verifyUintDup(i1, i2)], verifyUintDup(pos1, pos2)));	
143		}
144		pD *= (2.0/(x.size() - 1));
145		return pD;
146	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x555555772850
address max offset: 8
Memory content after  bitflip:0x5a0xc80xb20x7f0x4b0xc60x3b0xa1
frame name: main
symbol name: T2
symbol filename: lreg.cpp
symbol line: 37
value: std::vector of length 4, capacity 4 = {-0.0039404006766731014, -0.38947201798562214, -1.9499332647255083, -4.0457250012988339}
value address: 0x55555575b1a0 <T2>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-26 19:58:57]
Fault Injection Successful after 1.7177314758300781s
[INFO -- 2018-11-26 19:58:58]
event type: exit
[INFO -- 2018-11-26 19:58:58]
exit code: 0
