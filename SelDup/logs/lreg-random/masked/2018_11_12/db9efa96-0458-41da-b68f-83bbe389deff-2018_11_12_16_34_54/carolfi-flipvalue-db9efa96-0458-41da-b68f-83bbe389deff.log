[INFO -- 2018-11-12 16:34:37]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 16:34:37]
Initialization strings:
[INFO -- 2018-11-12 16:34:37]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 16:34:37]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 16:34:37]
initSignal:0
[INFO -- 2018-11-12 16:34:37]
endSignal:10
[INFO -- 2018-11-12 16:34:37]
faultModel:2
[INFO -- 2018-11-12 16:34:42]
Backtrace BEGIN:
#0  0x0000555555555254 in verifyDoubleDup (a=-2.201963865584053, b=-2.201963865584053) at lreg.cpp:71
#1  0x00005555555556bd in predict (v=14) at lreg.cpp:113
#2  0x000055555555578f in meanSquaredError () at lreg.cpp:125
#3  0x0000555555555da8 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:191
#4  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x2c0x40
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd758
address max offset: 8
Memory content after  bitflip:0xbd0xb60x690xe20xef0xcb0xba0xd1
frame name: predict
symbol name: v
symbol filename: lreg.cpp
symbol line: 109
value: -5.205697776101686e+85
value address: 0x7fffffffd758
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 16:34:42]
Fault Injection Successful after 5.939734697341919s
[INFO -- 2018-11-12 16:34:53]
event type: exit
[INFO -- 2018-11-12 16:34:53]
exit code: 0
