[INFO -- 2018-11-12 19:22:07]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 19:22:07]
Initialization strings:
[INFO -- 2018-11-12 19:22:07]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 19:22:07]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 19:22:07]
initSignal:0
[INFO -- 2018-11-12 19:22:07]
endSignal:10
[INFO -- 2018-11-12 19:22:07]
faultModel:2
[EXCEPTION -- 2018-11-12 19:22:08]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-12 19:22:08]
Backtrace BEGIN:
#0  0x00005555555556e7 in predict (v=-8) at lreg.cpp:113
#1  0x000055555555578f in meanSquaredError () at lreg.cpp:125
#2  0x0000555555555da8 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:191
#3  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

108	*/
109	double predict(double v){
110		double val = 0;
111		
112		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
113			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
114		}
115		return val;
116		
117	}

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd930
address max offset: 8
Memory content after  bitflip:0xd10xbb0x7f0x780xa80x820x210x1b
frame name: main
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 230
value: 5.4014233881728186e-178
value address: 0x7fffffffd930
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 19:22:08]
Fault Injection Successful after 1.4241609573364258s
[INFO -- 2018-11-12 19:22:15]
event type: exit
[INFO -- 2018-11-12 19:22:15]
exit code: 0
