[INFO -- 2018-11-12 17:38:46]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 17:38:46]
Initialization strings:
[INFO -- 2018-11-12 17:38:46]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 17:38:46]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 17:38:46]
initSignal:0
[INFO -- 2018-11-12 17:38:46]
endSignal:10
[INFO -- 2018-11-12 17:38:46]
faultModel:2
[INFO -- 2018-11-12 17:38:47]
Backtrace BEGIN:
#0  0x000055555555522d in verifyDoubleDup (a=2.0000029681036682, b=-5.6166169494346322e-07) at lreg.cpp:70
#1  0x00005555555556bd in predict (v=14) at lreg.cpp:113
#2  0x000055555555591a in partialDerivate (pos1=1, pos2=1) at lreg.cpp:139
#3  0x0000555555555a81 in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:153
#4  0x0000555555555da3 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:190
#5  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b1c8 
address max offset: 4
Memory content after  bitflip:0xcd0x410x310x87
frame name: adjust
symbol name: detected
symbol filename: lreg.cpp
symbol line: 58
value: -2026815027
value address: 0x55555575b1c8 <detected>
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-12 17:38:47]
Fault Injection Successful after 1.6370320320129395s
[INFO -- 2018-11-12 17:38:58]
event type: exit
[INFO -- 2018-11-12 17:38:58]
exit code: 0
