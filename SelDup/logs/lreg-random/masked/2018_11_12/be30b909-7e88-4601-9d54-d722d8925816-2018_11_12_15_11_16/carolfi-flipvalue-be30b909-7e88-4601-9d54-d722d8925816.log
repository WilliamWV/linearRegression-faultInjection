[INFO -- 2018-11-12 15:10:57]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 15:10:57]
Initialization strings:
[INFO -- 2018-11-12 15:10:57]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 15:10:57]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 15:10:57]
initSignal:0
[INFO -- 2018-11-12 15:10:57]
endSignal:10
[INFO -- 2018-11-12 15:10:57]
faultModel:2
[INFO -- 2018-11-12 15:11:00]
Backtrace BEGIN:
#0  predict (v=-13) at lreg.cpp:112
#1  0x000055555555578f in meanSquaredError () at lreg.cpp:125
#2  0x0000555555555da8 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:191
#3  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

107		Predicts the value related to v using the Ts variables
108	*/
109	double predict(double v){
110		double val = 0;
111		
112		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
113			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
114		}
115		return val;
116		

Backtrace END
Memory content before bitflip:0xcf0x370x410xd50xde0x4d0x010xc0
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd768
address max offset: 8
Memory content after  bitflip:0x4d0x240x2a0x770x350x880xaa0x5b
frame name: predict
symbol name: val
symbol filename: lreg.cpp
symbol line: 110
value: 3.7665103266615932e+133
value address: 0x7fffffffd768
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 15:11:00]
Fault Injection Successful after 3.25089168548584s
[INFO -- 2018-11-12 15:11:14]
event type: exit
[INFO -- 2018-11-12 15:11:14]
exit code: 0
