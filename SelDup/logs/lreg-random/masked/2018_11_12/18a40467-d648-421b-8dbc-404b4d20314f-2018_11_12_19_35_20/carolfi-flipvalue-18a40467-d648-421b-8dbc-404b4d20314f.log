[INFO -- 2018-11-12 19:35:10]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 19:35:10]
Initialization strings:
[INFO -- 2018-11-12 19:35:10]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 19:35:10]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 19:35:10]
initSignal:0
[INFO -- 2018-11-12 19:35:10]
endSignal:10
[INFO -- 2018-11-12 19:35:10]
faultModel:2
[INFO -- 2018-11-12 19:35:16]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x3) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x0000555555555650 in predict (v=-28) at lreg.cpp:112
#2  0x000055555555578f in meanSquaredError () at lreg.cpp:125
#3  0x0000555555555da8 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:191
#4  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b1c8 
address max offset: 4
Memory content after  bitflip:0x8a0x0c0x230xe6
frame name: std::vector<double, std::allocator<double> >::size
symbol name: detected
symbol filename: lreg.cpp
symbol line: 58
value: -433910646
value address: 0x55555575b1c8 <detected>
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-12 19:35:16]
Fault Injection Successful after 6.232697010040283s
[INFO -- 2018-11-12 19:35:19]
event type: exit
[INFO -- 2018-11-12 19:35:19]
exit code: 0
