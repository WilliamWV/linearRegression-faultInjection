[INFO -- 2018-11-12 17:58:58]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 17:58:58]
Initialization strings:
[INFO -- 2018-11-12 17:58:58]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 17:58:58]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 17:58:58]
initSignal:0
[INFO -- 2018-11-12 17:58:58]
endSignal:10
[INFO -- 2018-11-12 17:58:58]
faultModel:2
[INFO -- 2018-11-12 17:59:04]
Backtrace BEGIN:
#0  0x000055555555663b in std::vector<double, std::allocator<double> >::size (this=0x55555575b140 <x>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x0000555555555750 in meanSquaredError () at lreg.cpp:124
#2  0x0000555555555da8 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:191
#3  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd930
address max offset: 8
Memory content after  bitflip:0xe40xcf0xa50x390xd30xa70xba0xa4
frame name: main
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 230
value: -9.3883620537654262e-132
value address: 0x7fffffffd930
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 17:59:04]
Fault Injection Successful after 6.187611103057861s
[INFO -- 2018-11-12 17:59:13]
event type: exit
[INFO -- 2018-11-12 17:59:13]
exit code: 0
