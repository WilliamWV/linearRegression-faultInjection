[INFO -- 2018-11-15 20:05:39]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 20:05:39]
Initialization strings:
[INFO -- 2018-11-15 20:05:39]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 20:05:39]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 20:05:39]
initSignal:0
[INFO -- 2018-11-15 20:05:39]
endSignal:5
[INFO -- 2018-11-15 20:05:39]
faultModel:2
[EXCEPTION -- 2018-11-15 20:05:40]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-15 20:05:40]
Backtrace BEGIN:
#0  0x00005555555551e0 in verifyUintDup (a=0, b=0) at lreg.cpp:69
#1  0x000055555555576f in predict (v=6) at lreg.cpp:115
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Memory content before bitflip:0xaf0x6f0x2b0x0b0x170x4c0x150x40
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd808
address max offset: 8
Memory content after  bitflip:0x040x4c0x260x8f0xf00x0f0x480x40
frame name: train
symbol name: MSE
symbol filename: lreg.cpp
symbol line: 190
value: 48.124528783511806
value address: 0x7fffffffd808
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-15 20:05:40]
Fault Injection Successful after 1.92195463180542s
[INFO -- 2018-11-15 20:05:43]
event type: exit
[INFO -- 2018-11-15 20:05:43]
exit code: 0
