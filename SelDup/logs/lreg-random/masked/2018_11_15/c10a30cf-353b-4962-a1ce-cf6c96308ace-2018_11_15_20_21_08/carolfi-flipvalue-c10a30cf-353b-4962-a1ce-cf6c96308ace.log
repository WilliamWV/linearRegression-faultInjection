[INFO -- 2018-11-15 20:21:03]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 20:21:03]
Initialization strings:
[INFO -- 2018-11-15 20:21:03]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 20:21:03]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 20:21:03]
initSignal:0
[INFO -- 2018-11-15 20:21:03]
endSignal:5
[INFO -- 2018-11-15 20:21:03]
faultModel:2
[INFO -- 2018-11-15 20:21:05]
Backtrace BEGIN:
#0  0x0000555555555254 in verifyDoubleDup (a=1.9932740995507663, b=1.9932740995507663) at lreg.cpp:71
#1  0x00005555555557ea in predict (v=-3) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	

Backtrace END
Memory content before bitflip:0xe90xcd0x270xd00xb40xa80xd00x40
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd798
address max offset: 8
Memory content after  bitflip:0x010x280xa50xf70x520x210x300xa3
frame name: meanSquaredError
symbol name: error
symbol filename: lreg.cpp
symbol line: 125
value: -3.3862655826550516e-139
value address: 0x7fffffffd798
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-15 20:21:05]
Fault Injection Successful after 2.518519639968872s
[INFO -- 2018-11-15 20:21:07]
event type: exit
[INFO -- 2018-11-15 20:21:07]
exit code: 0
