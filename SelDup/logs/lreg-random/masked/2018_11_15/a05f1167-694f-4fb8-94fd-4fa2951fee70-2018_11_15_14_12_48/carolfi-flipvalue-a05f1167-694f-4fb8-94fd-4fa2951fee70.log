[INFO -- 2018-11-15 14:12:44]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 14:12:44]
Initialization strings:
[INFO -- 2018-11-15 14:12:44]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 14:12:44]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 14:12:44]
initSignal:0
[INFO -- 2018-11-15 14:12:44]
endSignal:5
[INFO -- 2018-11-15 14:12:44]
faultModel:2
[INFO -- 2018-11-15 14:12:46]
Backtrace BEGIN:
#0  0x000055555555583d in predict (v=24) at lreg.cpp:120
#1  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

115		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
116			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
117		}
118		return val;
119		
120	}
121	/**
122		Calculates the mean squared error of T
123	*/
124	double meanSquaredError(){

Backtrace END
Memory content before bitflip:0x6a0xaa0x480x340x1a0xbd0xc10x40
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd780
address max offset: 8
Memory content after  bitflip:0x810x740x960x190x9e0xe40x330xb2
frame name: adjust
symbol name: PD
symbol filename: lreg.cpp
symbol line: 153
value: -7.3787376731190762e-67
value address: 0x7fffffffd780
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-15 14:12:46]
Fault Injection Successful after 2.385525703430176s
[INFO -- 2018-11-15 14:12:47]
event type: exit
[INFO -- 2018-11-15 14:12:47]
exit code: 0
