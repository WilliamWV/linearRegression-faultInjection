[INFO -- 2018-11-15 15:12:13]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 15:12:13]
Initialization strings:
[INFO -- 2018-11-15 15:12:13]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 15:12:13]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 15:12:13]
initSignal:0
[INFO -- 2018-11-15 15:12:13]
endSignal:5
[INFO -- 2018-11-15 15:12:13]
faultModel:2
[INFO -- 2018-11-15 15:12:14]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b1a0 <T2>, __n=1) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x00005555555557ab in predict (v=-1) at lreg.cpp:116
#2  0x0000555555555928 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x000x000x000x000x800x860xd10xc0
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd918
address max offset: 8
Memory content after  bitflip:0xfd0xf40x630x2e0xd90x4e0x440x42
frame name: main
symbol name: temp
symbol filename: lreg.cpp
symbol line: 233
value: 174444403911.91397
value address: 0x7fffffffd918
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-15 15:12:14]
Fault Injection Successful after 1.7728841304779053s
[INFO -- 2018-11-15 15:12:16]
event type: exit
[INFO -- 2018-11-15 15:12:16]
exit code: 0
