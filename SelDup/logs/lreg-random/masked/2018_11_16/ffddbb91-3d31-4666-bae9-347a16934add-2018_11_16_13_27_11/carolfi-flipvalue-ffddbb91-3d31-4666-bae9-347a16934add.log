[INFO -- 2018-11-16 13:27:02]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 13:27:02]
Initialization strings:
[INFO -- 2018-11-16 13:27:02]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 13:27:02]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 13:27:02]
initSignal:0
[INFO -- 2018-11-16 13:27:02]
endSignal:5
[INFO -- 2018-11-16 13:27:02]
faultModel:2
[EXCEPTION -- 2018-11-16 13:27:03]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-16 13:27:04]
Backtrace BEGIN:
#0  0x000055555555520f in verifyUintDup (a=1, b=1) at lreg.cpp:69
#1  0x00005555555557c3 in predict (v=-20) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Memory content before bitflip:0xf50x170x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd780
address max offset: 8
Memory content after  bitflip:0x030x3e0x5f0x860x750x660x6d0x08
frame name: adjust
symbol name: PD
symbol filename: lreg.cpp
symbol line: 153
value: 4.4520969352935569e-268
value address: 0x7fffffffd780
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-16 13:27:04]
Fault Injection Successful after 2.383419990539551s
[INFO -- 2018-11-16 13:27:10]
event type: exit
[INFO -- 2018-11-16 13:27:10]
exit code: 0
