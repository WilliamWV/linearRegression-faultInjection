[INFO -- 2018-11-16 15:02:23]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 15:02:23]
Initialization strings:
[INFO -- 2018-11-16 15:02:23]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 15:02:23]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 15:02:23]
initSignal:0
[INFO -- 2018-11-16 15:02:23]
endSignal:5
[INFO -- 2018-11-16 15:02:23]
faultModel:2
[INFO -- 2018-11-16 15:02:24]
Backtrace BEGIN:
#0  verifyUintDup (a=6, b=6) at lreg.cpp:68
#1  0x000055555555589e in meanSquaredError () at lreg.cpp:128
#2  0x0000555555555ee5 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:194
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x5555557724d8
address max offset: 8
Memory content after  bitflip:0x280xce0x280x4c0x560xda0xb70x0b
frame name: main
symbol name: y
symbol filename: lreg.cpp
symbol line: 35
value: std::vector of length 9, capacity 16 = {31, -15, 33, 5, 5, 29, 33, -9, 112}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-16 15:02:24]
Fault Injection Successful after 1.572624683380127s
[INFO -- 2018-11-16 15:02:29]
event type: exit
[INFO -- 2018-11-16 15:02:29]
exit code: 0
