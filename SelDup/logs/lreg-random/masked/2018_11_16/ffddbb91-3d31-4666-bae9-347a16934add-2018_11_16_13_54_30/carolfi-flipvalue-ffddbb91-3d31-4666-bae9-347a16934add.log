[INFO -- 2018-11-16 13:54:23]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 13:54:23]
Initialization strings:
[INFO -- 2018-11-16 13:54:23]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 13:54:23]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 13:54:23]
initSignal:0
[INFO -- 2018-11-16 13:54:23]
endSignal:5
[INFO -- 2018-11-16 13:54:23]
faultModel:2
[INFO -- 2018-11-16 13:54:25]
Backtrace BEGIN:
#0  0x0000555555556d1c in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd800, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#1  0x0000555555555e7d in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:192
#2  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

213		      this->_M_impl._M_start = __tmp;
214		      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
215		    }
216		  else if (size() >= __xlen)
217		    {
218		      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
219				    end(), _M_get_Tp_allocator());
220		    }
221		  else
222		    {

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd910
address max offset: 8
Memory content after  bitflip:0xf50xe00x0a0x660x320xa70x430xde
frame name: main
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 233
value: -1.2270415260825136e+146
value address: 0x7fffffffd910
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-16 13:54:25]
Fault Injection Successful after 2.7908482551574707s
[INFO -- 2018-11-16 13:54:29]
event type: exit
[INFO -- 2018-11-16 13:54:29]
exit code: 0
