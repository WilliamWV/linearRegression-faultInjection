[INFO -- 2018-11-16 13:06:23]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 13:06:23]
Initialization strings:
[INFO -- 2018-11-16 13:06:23]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 13:06:23]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 13:06:23]
initSignal:0
[INFO -- 2018-11-16 13:06:23]
endSignal:5
[INFO -- 2018-11-16 13:06:23]
faultModel:2
[EXCEPTION -- 2018-11-16 13:06:24]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-16 13:06:24]
Backtrace BEGIN:
#0  0x0000555555555717 in equals (a=std::vector of length 2, capacity 2 = {...}, b=std::vector of length 2, capacity 2 = {...}) at lreg.cpp:102
#1  0x0000555555555f78 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:199
#2  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

97	}
98	
99	bool equals(vector<double> a, vector<double> b){
100		if (a.size() != b.size()) return false;
101		for (UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<a.size(); i1++, i2++){
102			if(a[verifyUintDup(i1, i2)] != b[verifyUintDup(i1, i2)]) 
103				return false;
104		}
105	
106		return true;

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b1b8 
address max offset: 4
Memory content after  bitflip:0xb20x940x110x7d
frame name: equals
symbol name: detected
symbol filename: lreg.cpp
symbol line: 58
value: 2098304178
value address: 0x55555575b1b8 <detected>
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-16 13:06:24]
Fault Injection Successful after 1.6180238723754883s
[INFO -- 2018-11-16 13:06:30]
event type: exit
[INFO -- 2018-11-16 13:06:30]
exit code: 0
