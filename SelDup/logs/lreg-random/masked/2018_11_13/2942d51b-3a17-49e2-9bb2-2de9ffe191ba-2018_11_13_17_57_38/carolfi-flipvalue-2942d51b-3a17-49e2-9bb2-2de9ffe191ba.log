[INFO -- 2018-11-13 17:57:29]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-13 17:57:29]
Initialization strings:
[INFO -- 2018-11-13 17:57:29]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-13 17:57:29]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-13 17:57:29]
initSignal:0
[INFO -- 2018-11-13 17:57:29]
endSignal:5
[INFO -- 2018-11-13 17:57:29]
faultModel:2
[EXCEPTION -- 2018-11-13 17:57:30]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-13 17:57:33]
Backtrace BEGIN:
#0  0x0000555555555704 in equals (a=std::vector of length 4, capacity 4 = {...}, b=std::vector of length 4, capacity 4 = {...}) at lreg.cpp:102
#1  0x0000555555555f78 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:199
#2  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

97	}
98	
99	bool equals(vector<double> a, vector<double> b){
100		if (a.size() != b.size()) return false;
101		for (UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<a.size(); i1++, i2++){
102			if(a[verifyUintDup(i1, i2)] != b[verifyUintDup(i1, i2)]) 
103				return false;
104		}
105	
106		return true;

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd78c
address max offset: 4
Memory content after  bitflip:0xad0x6f0xed0xd2
frame name: equals
symbol name: i2
symbol filename: lreg.cpp
symbol line: 101
value: 3538775981
value address: 0x7fffffffd78c
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-13 17:57:33]
Fault Injection Successful after 4.9346535205841064s
[INFO -- 2018-11-13 17:57:37]
event type: exit
[INFO -- 2018-11-13 17:57:37]
exit code: 0
