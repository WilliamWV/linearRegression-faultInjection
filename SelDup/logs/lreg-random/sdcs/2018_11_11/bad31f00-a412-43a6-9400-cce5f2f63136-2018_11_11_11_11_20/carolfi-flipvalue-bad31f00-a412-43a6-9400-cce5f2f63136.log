[INFO -- 2018-11-11 11:11:05]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-11 11:11:05]
Initialization strings:
[INFO -- 2018-11-11 11:11:05]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-11 11:11:05]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-11 11:11:05]
initSignal:0
[INFO -- 2018-11-11 11:11:05]
endSignal:10
[INFO -- 2018-11-11 11:11:05]
faultModel:2
[INFO -- 2018-11-11 11:11:10]
Backtrace BEGIN:
#0  0x00005555555556bf in predict (v=29) at lreg.cpp:111
#1  0x00005555555558db in partialDerivate (pos1=1, pos2=1) at lreg.cpp:138
#2  0x0000555555555a42 in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:152
#3  0x0000555555555cab in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:185
#4  0x00005555555561e0 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:241

106		Predicts the value related to v using the Ts variables
107	*/
108	double predict(double v){
109		double val = 0;
110		
111		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T.size(); i1++, i2++){
112			val+= (T[verifyUintDup(i1, i2)] * pow(v, verifyUintDup(i1, i2)));
113		}
114		return val;
115		

Backtrace END
Memory content before bitflip:0xe50x030x040x470x080x1a0x120xc0
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd708
address max offset: 8
Memory content after  bitflip:0x750x0c0xf00x480xce0x4f0x520x7c
frame name: predict
symbol name: val
symbol filename: lreg.cpp
symbol line: 109
value: 7.1381468046497165e+290
value address: 0x7fffffffd708
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-11 11:11:10]
Fault Injection Successful after 5.223424673080444s
[INFO -- 2018-11-11 11:11:19]
event type: exit
[INFO -- 2018-11-11 11:11:19]
exit code: 0
