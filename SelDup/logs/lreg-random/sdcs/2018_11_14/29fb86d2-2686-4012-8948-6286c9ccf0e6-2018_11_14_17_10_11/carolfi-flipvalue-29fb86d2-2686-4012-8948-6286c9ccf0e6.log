[INFO -- 2018-11-14 17:10:05]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 17:10:05]
Initialization strings:
[INFO -- 2018-11-14 17:10:05]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 17:10:05]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 17:10:05]
initSignal:0
[INFO -- 2018-11-14 17:10:05]
endSignal:5
[INFO -- 2018-11-14 17:10:05]
faultModel:2
[INFO -- 2018-11-14 17:10:07]
Backtrace BEGIN:
#0  0x000055555555520f in verifyUintDup (a=3, b=3) at lreg.cpp:69
#1  0x000055555555576f in predict (v=-6) at lreg.cpp:115
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x180xc0
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd6d8
address max offset: 8
Memory content after  bitflip:0xe30x440xd10xeb0x350x550x1e0xa4
frame name: predict
symbol name: v
symbol filename: lreg.cpp
symbol line: 112
value: -1.0433144591680992e-134
value address: 0x7fffffffd6d8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 17:10:07]
Fault Injection Successful after 2.3823235034942627s
[INFO -- 2018-11-14 17:10:10]
event type: exit
[INFO -- 2018-11-14 17:10:10]
exit code: 0
