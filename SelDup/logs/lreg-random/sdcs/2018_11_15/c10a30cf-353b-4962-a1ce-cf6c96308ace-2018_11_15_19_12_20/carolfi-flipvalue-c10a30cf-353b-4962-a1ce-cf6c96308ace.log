[INFO -- 2018-11-15 19:12:14]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 19:12:14]
Initialization strings:
[INFO -- 2018-11-15 19:12:14]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 19:12:14]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 19:12:14]
initSignal:0
[INFO -- 2018-11-15 19:12:14]
endSignal:5
[INFO -- 2018-11-15 19:12:14]
faultModel:2
[INFO -- 2018-11-15 19:12:15]
Backtrace BEGIN:
#0  0x0000555555555254 in verifyDoubleDup (a=0.15088560764953454, b=0.15088560764953454) at lreg.cpp:71
#1  0x00005555555557ea in predict (v=-7) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x1c0xc0
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd6d8
address max offset: 8
Memory content after  bitflip:0x0f0x7f0x560x1d0xc10x8f0x5c0x4f
frame name: predict
symbol name: v
symbol filename: lreg.cpp
symbol line: 112
value: 2.0185549560292621e+74
value address: 0x7fffffffd6d8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-15 19:12:15]
Fault Injection Successful after 1.343034267425537s
[INFO -- 2018-11-15 19:12:19]
event type: exit
[INFO -- 2018-11-15 19:12:19]
exit code: 0
