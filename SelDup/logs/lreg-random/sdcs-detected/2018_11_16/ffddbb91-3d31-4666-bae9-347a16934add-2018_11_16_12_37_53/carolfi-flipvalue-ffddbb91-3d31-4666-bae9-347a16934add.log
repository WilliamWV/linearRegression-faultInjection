[INFO -- 2018-11-16 12:37:41]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 12:37:41]
Initialization strings:
[INFO -- 2018-11-16 12:37:41]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 12:37:41]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 12:37:41]
initSignal:0
[INFO -- 2018-11-16 12:37:41]
endSignal:5
[INFO -- 2018-11-16 12:37:41]
faultModel:2
[EXCEPTION -- 2018-11-16 12:37:43]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-16 12:37:43]
Backtrace BEGIN:
#0  verifyUintDup (a=1, b=1) at lreg.cpp:61
#1  0x000055555555576f in predict (v=16) at lreg.cpp:115
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

56	*/
57	
58	int detected = 0;
59	
60	
61	UINT verifyUintDup(UINT a, UINT b){
62		if (a != b && detected != 1){
63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7c8
address max offset: 8
Memory content after  bitflip:0xbc0xb90x030x970xff0xff0x410x82
frame name: train
symbol name: alpha1
symbol filename: lreg.cpp
symbol line: 177
value: -8.6009545180408778e-298
value address: 0x7fffffffd7c8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-16 12:37:43]
Fault Injection Successful after 2.6218268871307373s
[INFO -- 2018-11-16 12:37:49]
event type: exit
[INFO -- 2018-11-16 12:37:49]
exit code: 0
