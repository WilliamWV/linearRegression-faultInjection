[INFO -- 2018-11-16 13:02:47]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 13:02:47]
Initialization strings:
[INFO -- 2018-11-16 13:02:47]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 13:02:47]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 13:02:47]
initSignal:0
[INFO -- 2018-11-16 13:02:47]
endSignal:5
[INFO -- 2018-11-16 13:02:47]
faultModel:2
[INFO -- 2018-11-16 13:02:48]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x0) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x000055555555577d in predict (v=2) at lreg.cpp:115
#2  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd760
address max offset: 8
Memory content after  bitflip:0x0c0x0e0x270x610xbd0x860xbf0x68
frame name: adjust
symbol name: alpha2
symbol filename: lreg.cpp
symbol line: 151
value: 3.6822270912073972e+196
value address: 0x7fffffffd760
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-16 13:02:48]
Fault Injection Successful after 1.9530160427093506s
[INFO -- 2018-11-16 13:02:52]
event type: exit
[INFO -- 2018-11-16 13:02:52]
exit code: 0
