[INFO -- 2018-11-16 15:16:54]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 15:16:54]
Initialization strings:
[INFO -- 2018-11-16 15:16:54]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 15:16:54]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 15:16:54]
initSignal:0
[INFO -- 2018-11-16 15:16:54]
endSignal:5
[INFO -- 2018-11-16 15:16:54]
faultModel:2
[INFO -- 2018-11-16 15:16:56]
Backtrace BEGIN:
#0  0x00005555555551e0 in verifyUintDup (a=4, b=4) at lreg.cpp:69
#1  0x000055555555576f in predict (v=-29) at lreg.cpp:115
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd768
address max offset: 8
Memory content after  bitflip:0xfd0x2b0x4d0x380x070x000x560x74
frame name: adjust
symbol name: alpha1
symbol filename: lreg.cpp
symbol line: 151
value: 2.5202361651145762e+252
value address: 0x7fffffffd768
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-16 15:16:56]
Fault Injection Successful after 2.7648844718933105s
[INFO -- 2018-11-16 15:16:58]
event type: exit
[INFO -- 2018-11-16 15:16:58]
exit code: 0
