[INFO -- 2018-11-16 11:13:56]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 11:13:56]
Initialization strings:
[INFO -- 2018-11-16 11:13:56]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 11:13:56]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 11:13:56]
initSignal:0
[INFO -- 2018-11-16 11:13:56]
endSignal:5
[INFO -- 2018-11-16 11:13:56]
faultModel:2
[INFO -- 2018-11-16 11:13:59]
Backtrace BEGIN:
#0  0x00005555555582bd in __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >::base (this=0x7fffffffd6a8) at /usr/include/c++/7/bits/stl_iterator.h:844
#1  0x000055555555805d in std::__niter_base<double const*, std::vector<double, std::allocator<double> > > (__it=1.6304166312761136e-322) at /usr/include/c++/7/bits/stl_iterator.h:984
#2  0x0000555555557b90 in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=-0.63986822530807608, __last=1.6304166312761136e-322, __result=-0.63980512601124406) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x00005555555573d1 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=-0.63986822530807608, __last=1.6304166312761136e-322, __result=-0.63980512601124406) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555556d13 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd820, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x0000555555555f26 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:197
#6  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

839	      __normal_iterator
840	      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
841	      { return __normal_iterator(_M_current - __n); }
842	
843	      const _Iterator&
844	      base() const _GLIBCXX_NOEXCEPT
845	      { return _M_current; }
846	    };
847	
848	  // Note: In what follows, the left- and right-hand-side iterators are

Backtrace END
Memory content before bitflip:0x010x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd8ec
address max offset: 4
Memory content after  bitflip:0x430xd90x640xa4
frame name: main
symbol name: i1
symbol filename: lreg.cpp
symbol line: 232
value: 2758072643
value address: 0x7fffffffd8ec
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-16 11:13:59]
Fault Injection Successful after 3.8059186935424805s
[INFO -- 2018-11-16 11:14:00]
event type: exit
[INFO -- 2018-11-16 11:14:00]
exit code: 0
