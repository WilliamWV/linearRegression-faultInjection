[INFO -- 2018-11-16 12:17:22]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 12:17:22]
Initialization strings:
[INFO -- 2018-11-16 12:17:23]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 12:17:23]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 12:17:23]
initSignal:0
[INFO -- 2018-11-16 12:17:23]
endSignal:5
[INFO -- 2018-11-16 12:17:23]
faultModel:2
[EXCEPTION -- 2018-11-16 12:17:25]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-16 12:17:26]
Backtrace BEGIN:
#0  __gnu_cxx::new_allocator<double>::allocate (this=0x7fffffffd6f0, __n=140737488344808) at /usr/include/c++/7/ext/new_allocator.h:99
#1  0x0000555555558043 in std::allocator_traits<std::allocator<double> >::allocate (__a=..., __n=3) at /usr/include/c++/7/bits/alloc_traits.h:436
#2  0x0000555555557b1a in std::_Vector_base<double, std::allocator<double> >::_M_allocate (this=0x7fffffffd860, __n=3) at /usr/include/c++/7/bits/stl_vector.h:172
#3  0x000055555555787f in std::_Vector_base<double, std::allocator<double> >::_M_create_storage (this=0x7fffffffd860, __n=3) at /usr/include/c++/7/bits/stl_vector.h:187
#4  0x0000555555556f4f in std::_Vector_base<double, std::allocator<double> >::_Vector_base (this=0x7fffffffd860, __n=3, __a=...) at /usr/include/c++/7/bits/stl_vector.h:138
#5  0x00005555555569fb in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd860, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/stl_vector.h:328
#6  0x0000555555555f47 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:199
#7  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

94	      { return std::__addressof(__x); }
95	
96	      // NB: __n is permitted to be 0.  The C++ standard says nothing
97	      // about what the return value is when __n == 0.
98	      pointer
99	      allocate(size_type __n, const void* = static_cast<const void*>(0))
100	      {
101		if (__n > this->max_size())
102		  std::__throw_bad_alloc();
103	

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7c8
address max offset: 8
Memory content after  bitflip:0x550x9c0x220x1e0x290xe90xf30xc7
frame name: train
symbol name: alpha1
symbol filename: lreg.cpp
symbol line: 177
value: -4.2345553686883401e+38
value address: 0x7fffffffd7c8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-16 12:17:26]
Fault Injection Successful after 3.207226276397705s
[INFO -- 2018-11-16 12:17:32]
event type: exit
[INFO -- 2018-11-16 12:17:32]
exit code: 0
