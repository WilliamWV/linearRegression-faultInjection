[INFO -- 2018-11-13 17:38:45]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-13 17:38:45]
Initialization strings:
[INFO -- 2018-11-13 17:38:45]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-13 17:38:45]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-13 17:38:45]
initSignal:0
[INFO -- 2018-11-13 17:38:45]
endSignal:5
[INFO -- 2018-11-13 17:38:45]
faultModel:2
[INFO -- 2018-11-13 17:38:47]
Backtrace BEGIN:
#0  0x0000555555555254 in verifyDoubleDup (a=-0.14141594148639791, b=-0.14141594148639791) at lreg.cpp:71
#1  0x00005555555557ea in predict (v=2) at lreg.cpp:116
#2  0x0000555555555928 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	

Backtrace END
Memory content before bitflip:0xac0x970xe80xe50xea0x190xc20xbf
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd4e8
address max offset: 8
Memory content after  bitflip:0x680x330x030x260xef0x150x0a0x97
frame name: verifyDoubleDup
symbol name: a
symbol filename: lreg.cpp
symbol line: 70
value: -1.0905234928535104e-197
value address: 0x7fffffffd4e8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-13 17:38:47]
Fault Injection Successful after 2.0461525917053223s
[INFO -- 2018-11-13 17:38:53]
event type: exit
[INFO -- 2018-11-13 17:38:53]
exit code: 0
