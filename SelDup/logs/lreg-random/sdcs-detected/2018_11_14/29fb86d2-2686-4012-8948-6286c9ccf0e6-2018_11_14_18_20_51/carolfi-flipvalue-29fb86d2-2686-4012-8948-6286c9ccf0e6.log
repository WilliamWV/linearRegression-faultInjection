[INFO -- 2018-11-14 18:20:42]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 18:20:42]
Initialization strings:
[INFO -- 2018-11-14 18:20:42]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 18:20:42]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 18:20:42]
initSignal:0
[INFO -- 2018-11-14 18:20:42]
endSignal:5
[INFO -- 2018-11-14 18:20:42]
faultModel:2
[EXCEPTION -- 2018-11-14 18:20:43]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-14 18:20:43]
Backtrace BEGIN:
#0  0x000055555555523e in verifyDoubleDup (a=2.0497451271297873, b=2.0497451271297873) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=6) at lreg.cpp:116
#2  0x0000555555555928 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7d0
address max offset: 8
Memory content after  bitflip:0x600xbc0xab0x350x5d0xff0xd60x61
frame name: train
symbol name: alpha2
symbol filename: lreg.cpp
symbol line: 177
value: 2.0692768409294925e+163
value address: 0x7fffffffd7d0
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 18:20:43]
Fault Injection Successful after 1.6537063121795654s
[INFO -- 2018-11-14 18:20:49]
event type: exit
[INFO -- 2018-11-14 18:20:49]
exit code: 0
