[INFO -- 2018-11-14 15:36:48]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 15:36:48]
Initialization strings:
[INFO -- 2018-11-14 15:36:48]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 15:36:48]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 15:36:48]
initSignal:0
[INFO -- 2018-11-14 15:36:48]
endSignal:5
[INFO -- 2018-11-14 15:36:48]
faultModel:2
[EXCEPTION -- 2018-11-14 15:36:50]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-14 15:36:50]
Backtrace BEGIN:
#0  0x00005555555550fe in verifyUintDup (a=2, b=2) at lreg.cpp:61
#1  0x0000555555555a02 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:141
#2  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

56	*/
57	
58	int detected = 0;
59	
60	
61	UINT verifyUintDup(UINT a, UINT b){
62		if (a != b && detected != 1){
63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd778
address max offset: 8
Memory content after  bitflip:0xca0xff0x9f0x950x500x040x7d0x04
frame name: adjust
symbol name: alpha1
symbol filename: lreg.cpp
symbol line: 151
value: 4.7640299060699035e-287
value address: 0x7fffffffd778
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 15:36:50]
Fault Injection Successful after 2.7853453159332275s
[INFO -- 2018-11-14 15:36:54]
event type: exit
[INFO -- 2018-11-14 15:36:54]
exit code: 0
