[INFO -- 2018-11-14 16:00:07]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 16:00:07]
Initialization strings:
[INFO -- 2018-11-14 16:00:07]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 16:00:07]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 16:00:07]
initSignal:0
[INFO -- 2018-11-14 16:00:07]
endSignal:5
[INFO -- 2018-11-14 16:00:07]
faultModel:2
[EXCEPTION -- 2018-11-14 16:00:08]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-14 16:00:09]
Backtrace BEGIN:
#0  0x0000555555556797 in std::vector<double, std::allocator<double> >::size (this=0x55555575b140 <x>) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x0000555555555afa in partialDerivate (pos1=0, pos2=0) at lreg.cpp:144
#2  0x0000555555555bbe in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7d0
address max offset: 8
Memory content after  bitflip:0x930x230x0c0x8c0x850xd70xa00x5e
frame name: train
symbol name: alpha2
symbol filename: lreg.cpp
symbol line: 177
value: 6.7297432586859241e+147
value address: 0x7fffffffd7d0
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-14 16:00:09]
Fault Injection Successful after 2.401047945022583s
[INFO -- 2018-11-14 16:00:15]
event type: exit
[INFO -- 2018-11-14 16:00:15]
exit code: 0
