[INFO -- 2018-11-12 14:58:33]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 14:58:33]
Initialization strings:
[INFO -- 2018-11-12 14:58:33]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 14:58:33]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 14:58:33]
initSignal:0
[INFO -- 2018-11-12 14:58:33]
endSignal:10
[INFO -- 2018-11-12 14:58:33]
faultModel:2
[INFO -- 2018-11-12 14:58:36]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x5, __n=5) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x000055555555581c in meanSquaredError () at lreg.cpp:125
#2  0x0000555555555da8 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:191
#3  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x400xc0
Fault Model: Random bit-flip
base address to flip value: 0x55555575b1b8 
address max offset: 8
Memory content after  bitflip:0x6d0x1f0x5e0xbe0xda0x8e0x240x86
frame name: std::vector<double, std::allocator<double> >::operator[]
symbol name: xChecksum
symbol filename: lreg.cpp
symbol line: 39
value: -4.5301796366353444e-279
value address: 0x55555575b1b8 <xChecksum>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 14:58:36]
Fault Injection Successful after 3.8203208446502686s
[INFO -- 2018-11-12 14:58:48]
event type: exit
[INFO -- 2018-11-12 14:58:48]
exit code: 0
