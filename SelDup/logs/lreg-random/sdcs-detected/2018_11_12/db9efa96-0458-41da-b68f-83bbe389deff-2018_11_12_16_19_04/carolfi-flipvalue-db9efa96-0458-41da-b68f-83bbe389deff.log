[INFO -- 2018-11-12 16:18:47]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 16:18:47]
Initialization strings:
[INFO -- 2018-11-12 16:18:47]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 16:18:47]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 16:18:47]
initSignal:0
[INFO -- 2018-11-12 16:18:47]
endSignal:10
[INFO -- 2018-11-12 16:18:47]
faultModel:2
[INFO -- 2018-11-12 16:18:49]
Backtrace BEGIN:
#0  std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772450, __last=0x555555772460, __result=0x555555772490) at /usr/include/c++/7/bits/stl_algobase.h:357
#1  0x0000555555557f3e in std::__copy_move_a<false, double const*, double*> (__first=0x555555772340, __last=0x555555772350, __result=0x5555557724b0) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x00005555555582ac in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-5.6166169494757578e-07, __last=0, __result=0x5555557724b0) at /usr/include/c++/7/bits/stl_algobase.h:424
#3  0x0000555555558103 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-5.6166169494757578e-07, __last=0, __result=0x5555557724b0) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555557e86 in std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-5.6166169494757578e-07, __last=0, __result=0x5555557724b0) at /usr/include/c++/7/bits/stl_uninitialized.h:101
#5  0x00005555555578fc in std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-5.6166169494757578e-07, __last=0, __result=0x5555557724b0) at /usr/include/c++/7/bits/stl_uninitialized.h:134
#6  0x0000555555557055 in std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double> (__first=-5.6166169494757578e-07, __last=0, __result=0x5555557724b0) at /usr/include/c++/7/bits/stl_uninitialized.h:289
#7  0x00005555555568db in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd860, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#8  0x0000555555555e22 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:196
#9  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

352	  template<bool _IsMove>
353	    struct __copy_move<_IsMove, true, random_access_iterator_tag>
354	    {
355	      template<typename _Tp>
356	        static _Tp*
357	        __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
358	        {
359	#if __cplusplus >= 201103L
360		  using __assignable = conditional<_IsMove,
361						   is_move_assignable<_Tp>,

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x800x540x40
Fault Model: Random bit-flip
base address to flip value: 0x55555575b1c0 
address max offset: 8
Memory content after  bitflip:0x9f0xe50x740x820x7e0x690xb20xdb
frame name: std::vector<double, std::allocator<double> >::vector
symbol name: yChecksum
symbol filename: lreg.cpp
symbol line: 40
value: -5.2275849844243975e+133
value address: 0x55555575b1c0 <yChecksum>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 16:18:49]
Fault Injection Successful after 2.983644723892212s
[INFO -- 2018-11-12 16:19:03]
event type: exit
[INFO -- 2018-11-12 16:19:03]
exit code: 0
