[INFO -- 2018-11-12 15:55:27]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 15:55:27]
Initialization strings:
[INFO -- 2018-11-12 15:55:27]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 15:55:27]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 15:55:27]
initSignal:0
[INFO -- 2018-11-12 15:55:27]
endSignal:10
[INFO -- 2018-11-12 15:55:27]
faultModel:2
[INFO -- 2018-11-12 15:55:28]
Backtrace BEGIN:
#0  0x0000555555555225 in verifyDoubleDup (a=0, b=-3.1200175609017644) at lreg.cpp:70
#1  0x00005555555556bd in predict (v=22) at lreg.cpp:113
#2  0x000055555555591a in partialDerivate (pos1=1, pos2=1) at lreg.cpp:139
#3  0x0000555555555a81 in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:153
#4  0x0000555555555da3 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:190
#5  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x300x750x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7f8
address max offset: 4
Memory content after  bitflip:0x220xe80x560x1f
frame name: train
symbol name: iter2
symbol filename: lreg.cpp
symbol line: 174
value: 525789218
value address: 0x7fffffffd7f8
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-12 15:55:28]
Fault Injection Successful after 1.976222276687622s
[INFO -- 2018-11-12 15:55:37]
event type: exit
[INFO -- 2018-11-12 15:55:37]
exit code: 0
