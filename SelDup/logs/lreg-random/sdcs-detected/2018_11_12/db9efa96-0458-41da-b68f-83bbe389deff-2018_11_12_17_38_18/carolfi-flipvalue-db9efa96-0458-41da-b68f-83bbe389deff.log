[INFO -- 2018-11-12 17:38:06]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 17:38:06]
Initialization strings:
[INFO -- 2018-11-12 17:38:06]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 17:38:06]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 17:38:06]
initSignal:0
[INFO -- 2018-11-12 17:38:06]
endSignal:10
[INFO -- 2018-11-12 17:38:06]
faultModel:2
[INFO -- 2018-11-12 17:38:09]
Backtrace BEGIN:
#0  0x0000555555555254 in verifyDoubleDup (a=-0.24883054035761018, b=-0.24883054035761018) at lreg.cpp:71
#1  0x00005555555556bd in predict (v=0) at lreg.cpp:113
#2  0x000055555555591a in partialDerivate (pos1=2, pos2=2) at lreg.cpp:139
#3  0x0000555555555a81 in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:153
#4  0x0000555555555da3 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:190
#5  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x800x590x40
Fault Model: Random bit-flip
base address to flip value: 0x55555575b1b8 
address max offset: 8
Memory content after  bitflip:0xdc0x290x390x810x9e0x260xf80xb0
frame name: verifyDoubleDup
symbol name: xChecksum
symbol filename: lreg.cpp
symbol line: 39
value: -8.5430625874549416e-73
value address: 0x55555575b1b8 <xChecksum>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 17:38:09]
Fault Injection Successful after 3.9376466274261475s
[INFO -- 2018-11-12 17:38:16]
event type: exit
[INFO -- 2018-11-12 17:38:16]
exit code: 0
