[INFO -- 2018-11-12 17:14:48]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 17:14:48]
Initialization strings:
[INFO -- 2018-11-12 17:14:48]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 17:14:48]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 17:14:48]
initSignal:0
[INFO -- 2018-11-12 17:14:48]
endSignal:10
[INFO -- 2018-11-12 17:14:48]
faultModel:2
[INFO -- 2018-11-12 17:14:51]
Backtrace BEGIN:
#0  0x00005555555551e0 in verifyUintDup (a=2, b=2) at lreg.cpp:69
#1  0x00005555555556d1 in predict (v=-14) at lreg.cpp:113
#2  0x00005555555557f7 in meanSquaredError () at lreg.cpp:125
#3  0x0000555555555da8 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:191
#4  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x380x40
Fault Model: Random bit-flip
base address to flip value: 0x55555575b1b8 
address max offset: 8
Memory content after  bitflip:0x780x3b0xc80x330xfc0xa60x220x25
frame name: meanSquaredError
symbol name: xChecksum
symbol filename: lreg.cpp
symbol line: 39
value: 8.4089919910273055e-130
value address: 0x55555575b1b8 <xChecksum>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 17:14:51]
Fault Injection Successful after 3.782545804977417s
[INFO -- 2018-11-12 17:15:02]
event type: exit
[INFO -- 2018-11-12 17:15:02]
exit code: 0
