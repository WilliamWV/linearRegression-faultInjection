[INFO -- 2018-11-15 15:06:10]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 15:06:10]
Initialization strings:
[INFO -- 2018-11-15 15:06:10]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 15:06:10]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 15:06:10]
initSignal:0
[INFO -- 2018-11-15 15:06:10]
endSignal:5
[INFO -- 2018-11-15 15:06:10]
faultModel:2
[INFO -- 2018-11-15 15:06:11]
Backtrace BEGIN:
#0  0x0000555555555254 in verifyDoubleDup (a=-0.98593969468945497, b=-0.98593969468945497) at lreg.cpp:71
#1  0x00005555555557ea in predict (v=-9) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	

Backtrace END
Memory content before bitflip:0x340x9f0x100x670xd10x8c0xef0xbf
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd4e0
address max offset: 8
Memory content after  bitflip:0xd20x420xcf0x460x6e0x460x2e0x14
frame name: verifyDoubleDup
symbol name: b
symbol filename: lreg.cpp
symbol line: 70
value: 1.7986179892749385e-211
value address: 0x7fffffffd4e0
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-15 15:06:11]
Fault Injection Successful after 1.7594711780548096s
[INFO -- 2018-11-15 15:06:14]
event type: exit
[INFO -- 2018-11-15 15:06:14]
exit code: 0
