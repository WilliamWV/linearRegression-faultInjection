[INFO -- 2018-11-15 19:13:40]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 19:13:40]
Initialization strings:
[INFO -- 2018-11-15 19:13:40]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 19:13:40]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 19:13:40]
initSignal:0
[INFO -- 2018-11-15 19:13:40]
endSignal:5
[INFO -- 2018-11-15 19:13:40]
faultModel:2
[INFO -- 2018-11-15 19:13:41]
Backtrace BEGIN:
#0  0x0000555555555254 in verifyDoubleDup (a=-1.1463294489760141, b=-1.1463294489760141) at lreg.cpp:71
#1  0x00005555555557ea in predict (v=13) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	

Backtrace END
Memory content before bitflip:0xeb0xb20x5c0x8c0x5d0x570xf20xbf
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd488
address max offset: 8
Memory content after  bitflip:0xc70xfd0x800x2a0xe00xfc0xcb0xdf
frame name: verifyDoubleDup
symbol name: a
symbol filename: lreg.cpp
symbol line: 70
value: -2.9316795818415374e+153
value address: 0x7fffffffd488
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-15 19:13:41]
Fault Injection Successful after 1.192908763885498s
[INFO -- 2018-11-15 19:13:43]
event type: exit
[INFO -- 2018-11-15 19:13:43]
exit code: 0
