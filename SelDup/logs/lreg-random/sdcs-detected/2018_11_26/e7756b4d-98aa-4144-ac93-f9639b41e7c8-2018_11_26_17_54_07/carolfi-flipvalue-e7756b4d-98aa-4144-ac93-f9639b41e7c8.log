[INFO -- 2018-11-26 17:54:05]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 17:54:05]
Initialization strings:
[INFO -- 2018-11-26 17:54:05]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 17:54:05]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 17:54:05]
initSignal:0
[INFO -- 2018-11-26 17:54:05]
endSignal:3
[INFO -- 2018-11-26 17:54:05]
faultModel:2
[INFO -- 2018-11-26 17:54:06]
Backtrace BEGIN:
#0  0x000055555555536f in verifyDoubleDup (a=-0.022633456660019129, b=-0.022633456660019129) at lreg.cpp:78
#1  0x00005555555557ea in predict (v=-1) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	
76		}	
77		return a;
78	}
79	
80	
81	void verifyChecksum(vector<double> vec){
82		if(detected!=1){

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7c0
address max offset: 8
Memory content after  bitflip:0xac0x940x9d0x400xe40x460xe90xc9
frame name: train
symbol name: alpha2
symbol filename: lreg.cpp
symbol line: 177
value: -1.1544456401857424e+48
value address: 0x7fffffffd7c0
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-26 17:54:06]
Fault Injection Successful after 1.0819811820983887s
[INFO -- 2018-11-26 17:54:07]
event type: exit
[INFO -- 2018-11-26 17:54:07]
exit code: 0
