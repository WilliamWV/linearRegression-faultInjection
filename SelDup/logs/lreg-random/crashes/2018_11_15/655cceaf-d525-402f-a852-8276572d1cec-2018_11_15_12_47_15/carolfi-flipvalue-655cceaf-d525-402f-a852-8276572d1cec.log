[INFO -- 2018-11-15 12:47:12]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 12:47:12]
Initialization strings:
[INFO -- 2018-11-15 12:47:12]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 12:47:12]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 12:47:12]
initSignal:0
[INFO -- 2018-11-15 12:47:12]
endSignal:5
[INFO -- 2018-11-15 12:47:12]
faultModel:2
[INFO -- 2018-11-15 12:47:14]
Backtrace BEGIN:
#0  0x00005555555567cf in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b180 <T1>, __n=3) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x00005555555557d4 in predict (v=15) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x030x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd700
address max offset: 8
Memory content after  bitflip:0x9a0xaf0x6d0x010x090x1a0x590xed
frame name: std::vector<double, std::allocator<double> >::operator[]
symbol name: __n
symbol filename: /usr/include/c++/7/bits/stl_vector.h
symbol line: 795
value: 17102729685897162650
value address: 0x7fffffffd700
Type: The type is an integer type.
Type sizeof: 8

[INFO -- 2018-11-15 12:47:14]
Fault Injection Successful after 2.911468029022217s
[INFO -- 2018-11-15 12:47:15]
event type: exit
[EXCEPTION -- 2018-11-15 12:47:15]
exit code: no exit code available
