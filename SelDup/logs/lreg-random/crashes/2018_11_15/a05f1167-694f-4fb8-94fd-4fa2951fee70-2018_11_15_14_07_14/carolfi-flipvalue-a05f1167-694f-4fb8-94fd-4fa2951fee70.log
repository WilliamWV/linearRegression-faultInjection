[INFO -- 2018-11-15 14:07:10]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 14:07:10]
Initialization strings:
[INFO -- 2018-11-15 14:07:10]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 14:07:10]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 14:07:10]
initSignal:0
[INFO -- 2018-11-15 14:07:10]
endSignal:5
[INFO -- 2018-11-15 14:07:10]
faultModel:2
[EXCEPTION -- 2018-11-15 14:07:13]
gdbException: Cannot access memory at address 0x27ee2b301d54ea26
[INFO -- 2018-11-15 14:07:13]
Backtrace BEGIN:
#0  0x000055555555577d in predict (v=14) at lreg.cpp:115
#1  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

110		Predicts the value related to v using the Ts variables
111	*/
112	double predict(double v){
113		double val = 0;
114		
115		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
116			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
117		}
118		return val;
119		

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x240xc0
Fault Model: Random bit-flip
base address to flip value: 0x555555772720
address max offset: 8
Memory content after  bitflip:0xfe0x710x190xda0x1f0x8e0x640xf3
frame name: partialDerivate
symbol name: y
symbol filename: lreg.cpp
symbol line: 35
value: std::vector of length 17, capacity 32 = {-7.1860063419165936e+247, 27462, -101958, -390, 218, -41926, 117618, -55578, -71910, 32408, 6, -14650, 4454, 84390, -390, -17946, -38202}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-15 14:07:13]
Fault Injection Successful after 3.247267484664917s
[INFO -- 2018-11-15 14:07:13]
event type: exit
[EXCEPTION -- 2018-11-15 14:07:13]
exit code: no exit code available
