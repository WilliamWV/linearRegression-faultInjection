[INFO -- 2018-11-15 14:03:48]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 14:03:48]
Initialization strings:
[INFO -- 2018-11-15 14:03:48]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 14:03:48]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 14:03:48]
initSignal:0
[INFO -- 2018-11-15 14:03:48]
endSignal:5
[INFO -- 2018-11-15 14:03:48]
faultModel:2
[EXCEPTION -- 2018-11-15 14:03:50]
gdbException: Cannot access memory at address 0xe676f3ee536b7bab
[INFO -- 2018-11-15 14:03:50]
Backtrace BEGIN:
#0  0x0000555555555225 in verifyDoubleDup (a=4.2439915829186759e-314, b=-0.98354341270503309) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=-11) at lreg.cpp:116
#2  0x0000555555555928 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xf80x240x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b168 
address max offset: 8
Memory content after  bitflip:0xa50x560x140xe80x9c0x2e0xc40x75
frame name: meanSquaredError
symbol name: y
symbol filename: lreg.cpp
symbol line: 35
value: std::vector of length 1060733128040228418, capacity 16 = {1787, 335, 317, 1622, 566, 16, 691, 335, 266, 665, 497, 887, 7984, 0, 0, 0, 0, 1.6304166312761136e-322, 0.38565465711287256, -0.98354341270503309, 4.0065407735741658, 1.6304166312761136e-322, 0.38560117375075531, -0.98356127179175423, 4.006649094438, 1.6304166312761136e-322, 4.6355706480405627e-310, -0.98354231551410232, 4.0065412139126639, 1.6304166312761136e-322, 0, -0.98356127179175423, 4.006649094438, 2.155756632499111e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-15 14:03:50]
Fault Injection Successful after 2.2436797618865967s
[INFO -- 2018-11-15 14:03:50]
event type: exit
[EXCEPTION -- 2018-11-15 14:03:50]
exit code: no exit code available
