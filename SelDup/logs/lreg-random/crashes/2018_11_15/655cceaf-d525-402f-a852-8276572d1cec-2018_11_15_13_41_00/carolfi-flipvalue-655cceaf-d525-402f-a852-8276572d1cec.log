[INFO -- 2018-11-15 13:40:54]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-15 13:40:54]
Initialization strings:
[INFO -- 2018-11-15 13:40:54]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-15 13:40:54]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-15 13:40:54]
initSignal:0
[INFO -- 2018-11-15 13:40:54]
endSignal:5
[INFO -- 2018-11-15 13:40:54]
faultModel:2
[EXCEPTION -- 2018-11-15 13:40:56]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-15 13:40:56]
Backtrace BEGIN:
#0  verifyUintDup (a=2, b=2) at lreg.cpp:68
#1  0x00005555555557fe in predict (v=-27) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=3, pos2=3) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x5555557727a8
address max offset: 8
Memory content after  bitflip:0x220x700x200x190x950x8d0xd70x81
frame name: adjust
symbol name: y
symbol filename: lreg.cpp
symbol line: 35
value: std::vector of length -4, capacity 10 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6.1975594614325967e-320, -1.2574805949990964e-41, -4.1613416942598657e+90, -8.3603408308697052e+307, 4.9207521537931166e-194, 3.1620201333839779e-322, 6.1975594614325967e-320, -5.8076810628455034e-41, -3.0175471088876364e+89, 1.6606631342629397e-308, 4.9207521537931172e-194, 3.1620201333839779e-322, 6.1975594614325967e-320, -1.2341793590612589e-41, -4.0476760423264996e+90, -8.3602120235475106e+307, 5.6328308539168553e-192, 3.1620201333839779e-322, 6.1975594614325967e-320, 4.7468246801061408e-307, -4.0476760423264711e+90, -8.3602120235475106e+307, 5.6328308539168553e-192, 3.1620201333839779e-322, 6.1975594614325967e-320, 0, -3.0175471088876008e+89, 1.6606631342629397e-308, 4.9207521537931172e-194, 3.1620201333839779e-322, 5.4054101776172425e-317, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-15 13:40:56]
Fault Injection Successful after 2.801133155822754s
[INFO -- 2018-11-15 13:40:59]
event type: exit
[EXCEPTION -- 2018-11-15 13:40:59]
exit code: no exit code available
