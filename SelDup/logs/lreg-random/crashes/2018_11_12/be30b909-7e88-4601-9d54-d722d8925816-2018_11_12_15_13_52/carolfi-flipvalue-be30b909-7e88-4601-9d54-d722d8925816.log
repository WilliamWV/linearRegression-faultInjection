[INFO -- 2018-11-12 15:13:46]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 15:13:46]
Initialization strings:
[INFO -- 2018-11-12 15:13:46]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 15:13:46]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 15:13:46]
initSignal:0
[INFO -- 2018-11-12 15:13:46]
endSignal:10
[INFO -- 2018-11-12 15:13:46]
faultModel:2
[EXCEPTION -- 2018-11-12 15:13:48]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-12 15:13:49]
Backtrace BEGIN:
#0  0x000055555555510c in verifyUintDup (a=1, b=1) at lreg.cpp:61
#1  0x000055555555592e in partialDerivate (pos1=1, pos2=1) at lreg.cpp:139
#2  0x0000555555555a81 in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:153
#3  0x0000555555555da3 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:190
#4  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

56	*/
57	
58	int detected = 0;
59	
60	
61	UINT verifyUintDup(UINT a, UINT b){
62		if (a != b && detected != 1){
63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0xec0xf50x1b0x7c0xb50xdb0x320x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7a8
address max offset: 8
Memory content after  bitflip:0x960x3f0x350x0f0x490x250x360x03
frame name: adjust
symbol name: diff
symbol filename: lreg.cpp
symbol line: 155
value: 3.4674689938670169e-293
value address: 0x7fffffffd7a8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 15:13:49]
Fault Injection Successful after 3.2118418216705322s
[INFO -- 2018-11-12 15:13:51]
event type: exit
[EXCEPTION -- 2018-11-12 15:13:51]
exit code: no exit code available
