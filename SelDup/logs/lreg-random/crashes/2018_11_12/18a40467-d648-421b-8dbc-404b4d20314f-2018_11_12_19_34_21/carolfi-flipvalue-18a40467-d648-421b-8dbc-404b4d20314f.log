[INFO -- 2018-11-12 19:34:17]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 19:34:17]
Initialization strings:
[INFO -- 2018-11-12 19:34:17]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 19:34:17]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 19:34:17]
initSignal:0
[INFO -- 2018-11-12 19:34:17]
endSignal:10
[INFO -- 2018-11-12 19:34:17]
faultModel:2
[EXCEPTION -- 2018-11-12 19:34:19]
pythonException: empty range for randrange() (0,0, 0)
[EXCEPTION -- 2018-11-12 19:34:19]
gdbException: Cannot access memory at address 0xb4c7d15c8a63e756
[INFO -- 2018-11-12 19:34:19]
Backtrace BEGIN:
#0  0x0000555555555afb in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#1  0x0000555555555da3 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:190
#2  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

151		
152		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
153			PD = partialDerivate(verifyUintDup(i1, i2), verifyUintDup(i1, i2));
154			// alpha is different from the canonical version because this works better
155			double diff = ((verifyDoubleDup(alpha1, alpha2) / (sqrt( fabs(PD) ))) * PD);
156			T1[verifyUintDup(i1, i2)]= T1[verifyUintDup(i1, i2)] - diff;
157			T2[verifyUintDup(i1, i2)]= T2[verifyUintDup(i1, i2)] - diff;
158			 
159		}
160	}

Backtrace END
Memory content before bitflip:0x300x750x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7fc
address max offset: 4
Memory content after  bitflip:0xed0x540x970x78
frame name: train
symbol name: iter1
symbol filename: lreg.cpp
symbol line: 174
value: 2023183597
value address: 0x7fffffffd7fc
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-12 19:34:19]
Fault Injection Successful after 2.511991024017334s
[INFO -- 2018-11-12 19:34:19]
event type: exit
[EXCEPTION -- 2018-11-12 19:34:19]
exit code: no exit code available
