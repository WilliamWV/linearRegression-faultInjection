[INFO -- 2018-11-12 16:23:33]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 16:23:33]
Initialization strings:
[INFO -- 2018-11-12 16:23:33]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 16:23:33]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 16:23:33]
initSignal:0
[INFO -- 2018-11-12 16:23:33]
endSignal:10
[INFO -- 2018-11-12 16:23:33]
faultModel:2
[EXCEPTION -- 2018-11-12 16:23:35]
gdbException: Cannot access memory at address 0x8fbd1d0370dfa536
[INFO -- 2018-11-12 16:23:35]
Backtrace BEGIN:
#0  0x000055555555511b in verifyUintDup (a=1, b=1) at lreg.cpp:61
#1  0x0000555555555960 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:139
#2  0x0000555555555a81 in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:153
#3  0x0000555555555da3 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:190
#4  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

56	*/
57	
58	int detected = 0;
59	
60	
61	UINT verifyUintDup(UINT a, UINT b){
62		if (a != b && detected != 1){
63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd930
address max offset: 8
Memory content after  bitflip:0x800x2a0x000x3c0xf30x920x140x61
frame name: main
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 230
value: 4.5195683697349549e+159
value address: 0x7fffffffd930
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-12 16:23:35]
Fault Injection Successful after 2.3166801929473877s
[INFO -- 2018-11-12 16:23:35]
event type: exit
[EXCEPTION -- 2018-11-12 16:23:35]
exit code: no exit code available
