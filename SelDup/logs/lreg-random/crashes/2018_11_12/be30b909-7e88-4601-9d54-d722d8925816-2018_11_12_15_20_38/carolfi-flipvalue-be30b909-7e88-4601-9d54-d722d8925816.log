[INFO -- 2018-11-12 15:20:19]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 15:20:19]
Initialization strings:
[INFO -- 2018-11-12 15:20:19]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 15:20:19]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 15:20:19]
initSignal:0
[INFO -- 2018-11-12 15:20:19]
endSignal:10
[INFO -- 2018-11-12 15:20:19]
faultModel:2
[INFO -- 2018-11-12 15:20:27]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x2, __n=4294967297) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x000055555555567e in predict (v=-13) at lreg.cpp:113
#2  0x000055555555591a in partialDerivate (pos1=3, pos2=3) at lreg.cpp:139
#3  0x0000555555555a81 in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:153
#4  0x0000555555555da3 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:190
#5  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x600x2b0x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b168 
address max offset: 8
Memory content after  bitflip:0x870x2d0xb20xe30x420x550x8e0x23
frame name: train
symbol name: y
symbol filename: lreg.cpp
symbol line: 35
value: std::vector of length 320248144850280552, capacity 64 = {6, -10, 2, -7, 5, 12, 8, -11, 508, 422, 344, 602, 2, 8, 212, 212, 8, 22, 92, 308, 25071, 794, -4204, 16841, -19786, -19786, 13506, 119528, 94974, 411, -349, -81769, -142, -160171, -24049, 16841, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, 9.5852532428908308, 98.21182170366761, -11.906461409442153, -4.9672648100184897, 0, 2.4209216646221081e-322, 9.5845505612069744, 98.205010941356704, -11.906893434893965, -4.9672648100184897, 0, 2.4209216646221081e-322, 9.5845505612069744, 98.205010941356704, -11.906893434893965, -4.9672648100184897, 0, 2.4209216646221081e-322, 4.6355706481362138e-310, 98.198396100783953, -11.906505145583388, -4.9392981884121312, 0, 2.4209216646221081e-322, 0, 98.205010941356704, -11.906893434893965, -4.9672648100184897, 0, 2.0593150184308997e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-12 15:20:27]
Fault Injection Successful after 8.867022037506104s
[INFO -- 2018-11-12 15:20:36]
event type: exit
[EXCEPTION -- 2018-11-12 15:20:36]
exit code: no exit code available
