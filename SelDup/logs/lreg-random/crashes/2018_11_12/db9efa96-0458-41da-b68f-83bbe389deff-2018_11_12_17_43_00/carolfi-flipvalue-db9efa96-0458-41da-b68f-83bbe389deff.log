[INFO -- 2018-11-12 17:42:56]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-12 17:42:56]
Initialization strings:
[INFO -- 2018-11-12 17:42:56]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-12 17:42:56]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-12 17:42:56]
initSignal:0
[INFO -- 2018-11-12 17:42:56]
endSignal:10
[INFO -- 2018-11-12 17:42:56]
faultModel:2
[EXCEPTION -- 2018-11-12 17:42:58]
gdbException: Cannot access memory at address 0x8247ae83762bc79b
[EXCEPTION -- 2018-11-12 17:42:58]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-12 17:42:59]
Backtrace BEGIN:
#0  0x00005555555556a7 in predict (v=-20) at lreg.cpp:113
#1  0x000055555555591a in partialDerivate (pos1=0, pos2=0) at lreg.cpp:139
#2  0x0000555555555a81 in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:153
#3  0x0000555555555da3 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:190
#4  0x00005555555562e6 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:246

108	*/
109	double predict(double v){
110		double val = 0;
111		
112		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
113			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
114		}
115		return val;
116		
117	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x555555772710
address max offset: 8
Memory content after  bitflip:0xce0x650xf90x660x190xd80x690xb6
frame name: adjust
symbol name: y
symbol filename: lreg.cpp
symbol line: 35
value: std::vector of length 20, capacity 32 = {26, -14, 22, 24, -4, 32, 28, -32, -809, -989, -207, -809, -809, -1637, -377, 3, -1889, -9, -1053, -1257}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-12 17:42:59]
Fault Injection Successful after 3.263749122619629s
[INFO -- 2018-11-12 17:42:59]
event type: exit
[EXCEPTION -- 2018-11-12 17:42:59]
exit code: no exit code available
