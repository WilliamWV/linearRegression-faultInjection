[INFO -- 2018-11-14 16:38:06]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-14 16:38:06]
Initialization strings:
[INFO -- 2018-11-14 16:38:06]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-14 16:38:06]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-14 16:38:06]
initSignal:0
[INFO -- 2018-11-14 16:38:06]
endSignal:5
[INFO -- 2018-11-14 16:38:06]
faultModel:2
[EXCEPTION -- 2018-11-14 16:38:12]
pythonException: empty range for randrange() (0,0, 0)
[EXCEPTION -- 2018-11-14 16:38:12]
gdbException: Cannot access memory at address 0x266830717d799a1
[INFO -- 2018-11-14 16:38:12]
Backtrace BEGIN:
#0  0x00005555555557d4 in predict (v=-26) at lreg.cpp:116
#1  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:253

111	*/
112	double predict(double v){
113		double val = 0;
114		
115		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
116			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
117		}
118		return val;
119		
120	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa80x270x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b168 
address max offset: 8
Memory content after  bitflip:0x660xfa0x6b0x490xf50x1a0xf40x8d
frame name: train
symbol name: y
symbol filename: lreg.cpp
symbol line: 35
value: std::vector of length -1027250950529705367, capacity 32 = {-123163, -20893, 1832, 60125, 35385, 12675, 40766, 1832, -50899, -111750, 4895, -57720, 67730, -1603, -159, -81783, -222730, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, -0.14150515688741927, -0.69012633018994318, -3.9791399949895196, -4.0546175752647811, 0, 2.4209216646221081e-322, -0.14189172931573815, -0.69368779680555426, -3.9791399949895196, -4.0546175752647811, 0, 2.4209216646221081e-322, -0.14189172931573815, -0.69368779680555426, -3.9791399949895196, -4.0546175752647811, 0, 2.4209216646221081e-322, 4.6355706480840404e-310, -0.69007648749667083, -3.9667195970091851, -3.9581223818420042, 0, 2.4209216646221081e-322, 0, -0.69368779680555426, -3.9791399949895196, -4.0546175752647811, 0, 2.1114883506317354e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-14 16:38:12]
Fault Injection Successful after 6.889932632446289s
[INFO -- 2018-11-14 16:38:13]
event type: exit
[EXCEPTION -- 2018-11-14 16:38:13]
exit code: no exit code available
