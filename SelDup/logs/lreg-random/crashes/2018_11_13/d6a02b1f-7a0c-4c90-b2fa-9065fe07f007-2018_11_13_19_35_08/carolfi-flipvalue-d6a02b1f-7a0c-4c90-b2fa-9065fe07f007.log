[INFO -- 2018-11-13 19:35:03]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-13 19:35:03]
Initialization strings:
[INFO -- 2018-11-13 19:35:03]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-13 19:35:03]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-13 19:35:03]
initSignal:0
[INFO -- 2018-11-13 19:35:03]
endSignal:5
[INFO -- 2018-11-13 19:35:03]
faultModel:2
[EXCEPTION -- 2018-11-13 19:35:06]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-13 19:35:06]
Backtrace BEGIN:
#0  0x0000555555555254 in verifyDoubleDup (a=3.999614573802698, b=3.999614573802698) at lreg.cpp:71
#1  0x00005555555557ea in predict (v=-14) at lreg.cpp:116
#2  0x0000555555555928 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	

Backtrace END
Memory content before bitflip:0x020x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd784
address max offset: 4
Memory content after  bitflip:0x5a0x620x130x83
frame name: meanSquaredError
symbol name: i2
symbol filename: lreg.cpp
symbol line: 127
value: 2199085658
value address: 0x7fffffffd784
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-13 19:35:06]
Fault Injection Successful after 3.993133544921875s
[INFO -- 2018-11-13 19:35:07]
event type: exit
[EXCEPTION -- 2018-11-13 19:35:07]
exit code: no exit code available
