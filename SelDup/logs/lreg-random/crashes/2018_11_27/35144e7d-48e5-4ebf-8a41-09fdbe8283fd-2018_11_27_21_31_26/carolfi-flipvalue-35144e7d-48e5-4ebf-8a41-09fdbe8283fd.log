[INFO -- 2018-11-27 21:31:21]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-27 21:31:21]
Initialization strings:
[INFO -- 2018-11-27 21:31:21]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-27 21:31:21]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-27 21:31:21]
initSignal:0
[INFO -- 2018-11-27 21:31:21]
endSignal:3
[INFO -- 2018-11-27 21:31:21]
faultModel:2
[EXCEPTION -- 2018-11-27 21:31:23]
gdbException: Cannot access memory at address 0xda2685fd4bad0e8e
[INFO -- 2018-11-27 21:31:24]
Backtrace BEGIN:
#0  0x0000555555556797 in std::vector<double, std::allocator<double> >::size (this=0x253b5b5a902d5100) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x00005555555569e6 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd860, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/stl_vector.h:328
#2  0x0000555555555f47 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:199
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x010x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd8f0
address max offset: 4
Memory content after  bitflip:0x640x330x1b0x93
frame name: main
symbol name: i2
symbol filename: lreg.cpp
symbol line: 232
value: 2468033380
value address: 0x7fffffffd8f0
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-27 21:31:24]
Fault Injection Successful after 3.606780529022217s
[INFO -- 2018-11-27 21:31:25]
event type: exit
[EXCEPTION -- 2018-11-27 21:31:25]
exit code: no exit code available
