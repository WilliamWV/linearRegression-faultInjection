[INFO -- 2018-11-26 19:52:20]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 19:52:20]
Initialization strings:
[INFO -- 2018-11-26 19:52:20]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 19:52:20]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 19:52:20]
initSignal:0
[INFO -- 2018-11-26 19:52:20]
endSignal:3
[INFO -- 2018-11-26 19:52:20]
faultModel:2
[EXCEPTION -- 2018-11-26 19:52:21]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-26 19:52:21]
Backtrace BEGIN:
#0  0x000055555555521d in verifyDoubleDup (a=4.2439915829186759e-314, b=-0.019896087500557016) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=23) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Fliping a bit of the value pointed by a pointer
Fliping a bit of the pointer
Memory content before bitflip:0xff0xe10xff0xff0xff0x7f0x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffde58
address max offset: 8
Memory content after  bitflip:0x6c0x990xd30x460x090xa80x600xc3
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 217
value: 0x7fffffffde58
value address: 0x7fffffffd8c0
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-26 19:52:21]
Fault Injection Successful after 1.8294055461883545s
[INFO -- 2018-11-26 19:52:22]
event type: exit
[EXCEPTION -- 2018-11-26 19:52:22]
exit code: no exit code available
