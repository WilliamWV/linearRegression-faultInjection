[INFO -- 2018-11-26 20:36:36]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 20:36:36]
Initialization strings:
[INFO -- 2018-11-26 20:36:36]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 20:36:36]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 20:36:36]
initSignal:0
[INFO -- 2018-11-26 20:36:36]
endSignal:3
[INFO -- 2018-11-26 20:36:36]
faultModel:2
[EXCEPTION -- 2018-11-26 20:36:37]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-26 20:36:37]
Backtrace BEGIN:
#0  0x0000555555555106 in verifyUintDup (a=3214950146, b=817766608) at lreg.cpp:61
#1  0x00005555555557fe in predict (v=-3) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

56	*/
57	
58	int detected = 0;
59	
60	
61	UINT verifyUintDup(UINT a, UINT b){
62		if (a != b && detected != 1){
63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x030x3d0x620x040x970x880x520x40
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd788
address max offset: 8
Memory content after  bitflip:0xca0x150xe50x9d0xac0x660x850x1f
frame name: meanSquaredError
symbol name: error
symbol filename: lreg.cpp
symbol line: 125
value: 7.7937735686221366e-157
value address: 0x7fffffffd788
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-26 20:36:37]
Fault Injection Successful after 1.1412482261657715s
[INFO -- 2018-11-26 20:36:37]
event type: exit
[EXCEPTION -- 2018-11-26 20:36:37]
exit code: no exit code available
