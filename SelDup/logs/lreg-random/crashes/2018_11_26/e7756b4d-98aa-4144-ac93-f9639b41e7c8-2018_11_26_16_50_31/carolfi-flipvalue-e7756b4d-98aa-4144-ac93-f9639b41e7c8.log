[INFO -- 2018-11-26 16:50:29]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 16:50:29]
Initialization strings:
[INFO -- 2018-11-26 16:50:29]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 16:50:29]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 16:50:29]
initSignal:0
[INFO -- 2018-11-26 16:50:29]
endSignal:3
[INFO -- 2018-11-26 16:50:29]
faultModel:2
[EXCEPTION -- 2018-11-26 16:50:30]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-26 16:50:30]
Backtrace BEGIN:
#0  verifyUintDup (a=0, b=0) at lreg.cpp:61
#1  0x000055555555579a in predict (v=-15) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

56	*/
57	
58	int detected = 0;
59	
60	
61	UINT verifyUintDup(UINT a, UINT b){
62		if (a != b && detected != 1){
63			//gerar entrada no log
64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd910
address max offset: 8
Memory content after  bitflip:0x770x300xbb0x200x490xc70x500xb0
frame name: main
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 233
value: -5.7960642054384584e-76
value address: 0x7fffffffd910
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-26 16:50:30]
Fault Injection Successful after 1.6597177982330322s
[INFO -- 2018-11-26 16:50:30]
event type: exit
[EXCEPTION -- 2018-11-26 16:50:30]
exit code: no exit code available
