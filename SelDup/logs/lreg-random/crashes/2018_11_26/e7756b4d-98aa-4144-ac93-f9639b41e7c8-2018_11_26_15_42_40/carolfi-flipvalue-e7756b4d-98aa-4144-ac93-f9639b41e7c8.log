[INFO -- 2018-11-26 15:42:37]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 15:42:37]
Initialization strings:
[INFO -- 2018-11-26 15:42:37]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 15:42:37]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 15:42:37]
initSignal:0
[INFO -- 2018-11-26 15:42:37]
endSignal:3
[INFO -- 2018-11-26 15:42:37]
faultModel:2
[INFO -- 2018-11-26 15:42:39]
Backtrace BEGIN:
#0  0x00005555555567a9 in std::vector<double, std::allocator<double> >::size (this=0x55555575b180 <T1>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x000055555555577d in predict (v=-28) at lreg.cpp:115
#2  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x980x260x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b148 
address max offset: 8
Memory content after  bitflip:0xf50x930x780xb90x8e0xdb0x620x26
frame name: adjust
symbol name: x
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 345740087775997372, capacity 32 = {-15, -9, -1, 29, 5, -18, 31, -16, -18, -28, 25, -14, 7, -2, -17, 21, -20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.3487992131466031e-321, 13145, 2813, 13, -99407, -575, 22793, -121267, 15973, 22793, 86413, -63895, 10673, -1507, 41, 19181, -38047, -130860, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, 0.18371627302662102, -0.94172410962657205, -1.9453125976897925, -3.9702854587021115, 0, 2.4209216646221081e-322, 0.18396614153271534, -0.93892520310424032, -1.9453125976897925, -3.9702854587021115, 0, 2.4209216646221081e-322, 0.18368481269678333, -0.9416327204436008, -1.9547420753001734, -4.0449057460661457, 0, 2.4209216646221081e-322, 4.6355706480840404e-310, -0.9416327204436008, -1.9547420753001734, -4.0449057460661457, 0, 2.4209216646221081e-322, 0, -0.93892520310424032, -1.9453125976897925, -3.9702854587021115, 0, 2.1114883506317354e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-26 15:42:39]
Fault Injection Successful after 2.4532487392425537s
[INFO -- 2018-11-26 15:42:39]
event type: exit
[EXCEPTION -- 2018-11-26 15:42:39]
exit code: no exit code available
