[INFO -- 2018-11-26 17:31:49]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 17:31:49]
Initialization strings:
[INFO -- 2018-11-26 17:31:49]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 17:31:49]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 17:31:49]
initSignal:0
[INFO -- 2018-11-26 17:31:49]
endSignal:3
[INFO -- 2018-11-26 17:31:49]
faultModel:2
[EXCEPTION -- 2018-11-26 17:31:50]
gdbException: Cannot access memory at address 0x82baeebf88127ecb
[INFO -- 2018-11-26 17:31:50]
Backtrace BEGIN:
#0  0x000055555555583f in predict (v=-14) at lreg.cpp:120
#1  0x0000555555555928 in meanSquaredError () at lreg.cpp:128
#2  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:194
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

115		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
116			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
117		}
118		return val;
119		
120	}
121	/**
122		Calculates the mean squared error of T
123	*/
124	double meanSquaredError(){

Backtrace END
Memory content before bitflip:0x030x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd8d8
address max offset: 4
Memory content after  bitflip:0xd30xb40xc90x65
frame name: main
symbol name: testCases
symbol filename: lreg.cpp
symbol line: 229
value: 1707717843
value address: 0x7fffffffd8d8
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-26 17:31:50]
Fault Injection Successful after 1.966378927230835s
[INFO -- 2018-11-26 17:31:51]
event type: exit
[EXCEPTION -- 2018-11-26 17:31:51]
exit code: no exit code available
