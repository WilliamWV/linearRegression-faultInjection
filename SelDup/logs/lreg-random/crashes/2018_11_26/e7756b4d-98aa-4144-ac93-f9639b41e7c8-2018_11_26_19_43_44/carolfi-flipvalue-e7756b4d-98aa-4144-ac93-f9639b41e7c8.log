[INFO -- 2018-11-26 19:43:43]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 19:43:43]
Initialization strings:
[INFO -- 2018-11-26 19:43:43]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 19:43:43]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 19:43:43]
initSignal:0
[INFO -- 2018-11-26 19:43:43]
endSignal:3
[INFO -- 2018-11-26 19:43:43]
faultModel:2
[EXCEPTION -- 2018-11-26 19:43:43]
gdbException: Cannot access memory at address 0x8d155a7d6669f299
[INFO -- 2018-11-26 19:43:43]
Backtrace BEGIN:
#0  0x0000555555555218 in verifyUintDup (a=0, b=0) at lreg.cpp:69
#1  0x0000555555555906 in meanSquaredError () at lreg.cpp:128
#2  0x0000555555555ee5 in train (iter1=10000, iter2=10000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:194
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

64			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);

Backtrace END
Memory content before bitflip:0x020x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd8e0
address max offset: 4
Memory content after  bitflip:0x850x620xbf0xe2
frame name: main
symbol name: N
symbol filename: lreg.cpp
symbol line: 236
value: 3804193413
value address: 0x7fffffffd8e0
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-26 19:43:43]
Fault Injection Successful after 0.9902839660644531s
[INFO -- 2018-11-26 19:43:44]
event type: exit
[EXCEPTION -- 2018-11-26 19:43:44]
exit code: no exit code available
