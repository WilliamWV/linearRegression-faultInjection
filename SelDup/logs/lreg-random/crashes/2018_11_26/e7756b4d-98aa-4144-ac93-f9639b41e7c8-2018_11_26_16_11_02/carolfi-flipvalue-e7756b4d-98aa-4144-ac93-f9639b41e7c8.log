[INFO -- 2018-11-26 16:11:00]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-26 16:11:00]
Initialization strings:
[INFO -- 2018-11-26 16:11:00]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-26 16:11:00]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-26 16:11:00]
initSignal:0
[INFO -- 2018-11-26 16:11:00]
endSignal:3
[INFO -- 2018-11-26 16:11:00]
faultModel:2
[EXCEPTION -- 2018-11-26 16:11:01]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-26 16:11:01]
Backtrace BEGIN:
#0  0x00005555555557b4 in predict (v=-1) at lreg.cpp:116
#1  0x0000555555555a53 in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=20000, iter2=20000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

111	*/
112	double predict(double v){
113		double val = 0;
114		
115		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
116			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
117		}
118		return val;
119		
120	}

Backtrace END
Memory content before bitflip:0xda0x130xa70x530x600xf70x660xc0
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd728
address max offset: 8
Memory content after  bitflip:0x6f0x900x860xf80x250x010x8d0xe2
frame name: partialDerivate
symbol name: pD
symbol filename: lreg.cpp
symbol line: 139
value: -5.3448163550240024e+166
value address: 0x7fffffffd728
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-26 16:11:01]
Fault Injection Successful after 1.177304983139038s
[INFO -- 2018-11-26 16:11:01]
event type: exit
[EXCEPTION -- 2018-11-26 16:11:01]
exit code: no exit code available
