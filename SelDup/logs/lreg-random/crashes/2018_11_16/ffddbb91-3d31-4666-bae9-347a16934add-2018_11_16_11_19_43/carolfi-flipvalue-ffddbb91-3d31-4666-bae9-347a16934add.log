[INFO -- 2018-11-16 11:19:39]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 11:19:39]
Initialization strings:
[INFO -- 2018-11-16 11:19:39]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 11:19:39]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 11:19:39]
initSignal:0
[INFO -- 2018-11-16 11:19:39]
endSignal:5
[INFO -- 2018-11-16 11:19:39]
faultModel:2
[EXCEPTION -- 2018-11-16 11:19:42]
pythonException: empty range for randrange() (0,0, 0)
[EXCEPTION -- 2018-11-16 11:19:42]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-16 11:19:42]
Backtrace BEGIN:
#0  0x00005555555557ab in predict (v=-23) at lreg.cpp:116
#1  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#2  0x0000555555555bbe in adjust (alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05) at lreg.cpp:156
#3  0x0000555555555ee0 in train (iter1=45000, iter2=45000, N=4, alpha1=2.2222199999999999e-05, alpha2=2.2222199999999999e-05, stopsWhenStable=true) at lreg.cpp:193
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

111	*/
112	double predict(double v){
113		double val = 0;
114		
115		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<T1.size(); i1++, i2++){
116			val+= (verifyDoubleDup(T1[verifyUintDup(i1, i2)], T2[verifyUintDup(i1, i2)]) * pow(v, verifyUintDup(i1, i2)));
117		}
118		return val;
119		
120	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x5555557723a0
address max offset: 8
Memory content after  bitflip:0x790x370x820xc80xf80xa40x150x97
frame name: adjust
symbol name: T1
symbol filename: lreg.cpp
symbol line: 36
value: std::vector of length 0, capacity 0 = {6.763047098698273e-315, 0, 2.6524947387065904e-315, 7.2911220059756244e-304, 1.2132676715765114e-312, 0, 0, 0, 0, 0, 1.2019116784764238e-314, 0, 0, 2.0802298053506514e-317, 2.0785855548812917e-317, 6.223740988137016e-317, 2.0797238821293099e-317, 6.2228556224996685e-317, 6.2208319296143027e-317, 2.070237821729158e-317, 6.2244998729690281e-317, 6.2208319296143027e-317, 2.0794709205186392e-317, 6.2213378528356442e-317, 6.223740988137016e-317, 6.2229821033050038e-317, 6.2244998729690281e-317, 6.2218437760569856e-317, 1.2019116784764238e-314, 1.2019250314815823e+103, -2.68156158598857e+154, -6.2470203732377638e-317, 2.0000000056108447, -2.6815615885185131e+154, 6.2457130755388679e-317, 2.0960898066478012e-317, 2.0896723879739693e-317, 1.4916681504100882e-154, 2.1013852022399277e-317, -2.6815615885069011e+154, 6.2451854134291095e-317, 2.0000000018801547, -2.0993076561991653e-317, 1.4916681476456423e-154, 2.1013852022399277e-317, 2.0933966548123206e-317, 2.7353851992911713e-315, 1.2019244974848233e+103, 6.3942081942217409e-249, -9.6597318177870086e-178, 2.7561077798527214e-315, 1.2019262062744521e+103, 6.3942081942217409e-249, -9.6597318177870086e-178, 2.7561077798527214e-315, 1.2019263130738039e+103, 4.9371432694855823e-236, -1.5445471793822169e+238, 2.7561077798527214e-315, 0, 6.3942081942216566e-249, -9.6597318177870086e-178, 9.3873446266191974e-315, 0, 0, 2.0897395809018037e-317, 2.0820005366253464e-317, 2.0864747951140847e-317, 2.0722615146145237e-317, 6.2167845438435712e-317, 2.0722615146145237e-317, 2.085826580986741e-317, 2.0820005366253464e-317, 2.0872653001474307e-317, 2.085826580986741e-317, 2.0894233788884653e-317, 2.2650027917621085e-314, 0, 6.2228556224996685e-317, 2.0802298053506514e-317, 2.0785855548812917e-317, 6.223740988137016e-317, 2.0797238821293099e-317, 6.2228556224996685e-317, 6.2208319296143027e-317, 2.070237821729158e-317, 6.2244998729690281e-317, 6.2208319296143027e-317, 2.0794709205186392e-317, 6.2213378528356442e-317, 6.223740988137016e-317, 6.2229821033050038e-317, 6.2244998729690281e-317, 6.2218437760569856e-317, 6.227693513303746e-317, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.2629095739590599e-314, 0, -2.6815615885146351e+154, -6.2470203732377638e-317, 2.0000000056108447, -2.6815615885185131e+154, 6.2457130755388679e-317, 2.0960898066478012e-317, 2.0896723879739693e-317, 1.4916681504100882e-154, 2.1013852022399277e-317, -2.6815615885069011e+154, 6.2451854134291095e-317, 2.0000000018801547, -2.0993076561991653e-317, 1.4916681476456423e-154, 2.1013852022399277e-317, 2.0933966548123206e-317, 2.0976041178523046e-317, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4.0616325686444665e-315, -1.80628291179664e+67, -1.4078405857420607e+269, -5.7890163015576373e+210, 9.160341704207352e+22, 6.2167000586181324e-317, 4.0616325686444665e-315, -1.80628291179664e+67, -1.4078405857420607e+269, -5.7890163015576373e+210, 9.160341704207352e+22, 6.2167000586181324e-317, 4.0616325686444665e-315, -2.0126841295268067e-279, 4.5242006124434188e-51, 1.2195853565677892e+306, -8.2157506106243795e-147, 6.2168388910646138e-317, 4.0616325686444665e-315, 1.2019292500559783e+103, 4.5242006099572792e-51, 1.2195853565677892e+306, -8.2157506106243795e-147, 6.2168388910646138e-317, 4.0616325686444665e-315, 0, -1.4078405845135201e+269, -5.7890163015576373e+210, 9.160341704207352e+22, 6.2167000586181324e-317, 4.6501548387949913e-314, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.2018948606646999e+103, 7.2911220059756932e-304, 0, 0, 1.2019301578504685e+103, -nan(0xfffffff000055), 8.2890455643924491e-317, 1.2019302112501444e+103, 4.1995579896505956e-322, 0, 0, 0...}
value address: 0x55555575b180 <T1>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-16 11:19:42]
Fault Injection Successful after 3.6742403507232666s
[INFO -- 2018-11-16 11:19:42]
event type: exit
[EXCEPTION -- 2018-11-16 11:19:42]
exit code: no exit code available
