[INFO -- 2018-11-16 13:29:53]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 13:29:53]
Initialization strings:
[INFO -- 2018-11-16 13:29:53]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 13:29:53]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 13:29:53]
initSignal:0
[INFO -- 2018-11-16 13:29:53]
endSignal:5
[INFO -- 2018-11-16 13:29:53]
faultModel:2
[EXCEPTION -- 2018-11-16 13:29:55]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-16 13:29:56]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b1a0 <T2>, __n=2) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x00005555555557ab in predict (v=5) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=0, pos2=0) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x680x240x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b148 
address max offset: 8
Memory content after  bitflip:0x420x310x070x580x980x790x5e0xb6
frame name: std::vector<double, std::allocator<double> >::operator[]
symbol name: x
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length -663220430096432727, capacity 16 = {-2, 20, 5, -12, 1, -1, -2, 10, 5, 13, -11, -20, 6, 0, 0, 0, 0, 7.1639518646980749e-322, 2, 838, 58, 262, 2, -2, 2, 218, 58, 362, 218, 758, 2776, 0, 0, 0, 0, 1.6304166312761136e-322, -0.83783513394365849, 1.9960878627384182, 1.9958634051734794, 1.6304166312761136e-322, -0.83783513394365849, 1.9960878627384182, 1.9958634051734794, 1.6304166312761136e-322, 4.6355706480405627e-310, 1.9960903336193796, 1.9959455331849092, 1.6304166312761136e-322, 0, 1.9960878627384182, 1.9958634051734794, 2.155756632499111e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-16 13:29:56]
Fault Injection Successful after 3.489088296890259s
[INFO -- 2018-11-16 13:29:56]
event type: exit
[EXCEPTION -- 2018-11-16 13:29:56]
exit code: no exit code available
