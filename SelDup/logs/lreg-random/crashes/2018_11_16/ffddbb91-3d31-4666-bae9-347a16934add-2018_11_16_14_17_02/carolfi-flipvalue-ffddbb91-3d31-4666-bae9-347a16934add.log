[INFO -- 2018-11-16 14:17:00]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 14:17:00]
Initialization strings:
[INFO -- 2018-11-16 14:17:00]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 14:17:00]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 14:17:00]
initSignal:0
[INFO -- 2018-11-16 14:17:00]
endSignal:5
[INFO -- 2018-11-16 14:17:00]
faultModel:2
[EXCEPTION -- 2018-11-16 14:17:01]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-16 14:17:01]
Backtrace BEGIN:
#0  0x0000555555555337 in verifyDoubleDup (a=0.99999941470570086, b=0.99999941470570086) at lreg.cpp:78
#1  0x00005555555557ea in predict (v=2) at lreg.cpp:116
#2  0x0000555555555a53 in partialDerivate (pos1=1, pos2=1) at lreg.cpp:142
#3  0x0000555555555bbe in adjust (alpha1=0.00020000000000000001, alpha2=0.00020000000000000001) at lreg.cpp:156
#4  0x0000555555555ee0 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:193
#5  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;
75	        detected = 1;	
76		}	
77		return a;
78	}
79	
80	
81	void verifyChecksum(vector<double> vec){
82		if(detected!=1){

Backtrace END
Memory content before bitflip:0x010x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd718
address max offset: 4
Memory content after  bitflip:0x800x6b0x390x9a
frame name: partialDerivate
symbol name: pos2
symbol filename: lreg.cpp
symbol line: 138
value: 2587454336
value address: 0x7fffffffd718
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-16 14:17:01]
Fault Injection Successful after 1.37786865234375s
[INFO -- 2018-11-16 14:17:01]
event type: exit
[EXCEPTION -- 2018-11-16 14:17:01]
exit code: no exit code available
