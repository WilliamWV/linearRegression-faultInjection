[INFO -- 2018-11-16 12:22:45]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 12:22:45]
Initialization strings:
[INFO -- 2018-11-16 12:22:45]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 12:22:45]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 12:22:45]
initSignal:0
[INFO -- 2018-11-16 12:22:45]
endSignal:5
[INFO -- 2018-11-16 12:22:45]
faultModel:2
[EXCEPTION -- 2018-11-16 12:22:46]
gdbException: Cannot access memory at address 0x61f46ba502e01935
[INFO -- 2018-11-16 12:22:46]
Backtrace BEGIN:
#0  0x0000555555555abb in partialDerivate (pos1=2, pos2=2) at lreg.cpp:142
#1  0x0000555555555bbe in adjust (alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05) at lreg.cpp:156
#2  0x0000555555555ee0 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:193
#3  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

137	*/
138	double partialDerivate(UINT pos1, UINT pos2){
139		double pD = 0;
140		
141		for(UINT i1 = 0, i2 = 0; verifyUintDup(i1, i2)<(x.size() - 1); i1++, i2++){
142			pD += ((predict(x[verifyUintDup(i1, i2)]) - y[verifyUintDup(i1, i2)])*pow(x[verifyUintDup(i1, i2)], verifyUintDup(pos1, pos2)));	
143		}
144		pD *= (2.0/(x.size() - 1));
145		return pD;
146	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x100x250x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b170 
address max offset: 8
Memory content after  bitflip:0x6c0xb30x610x570x780x940xc00x43
frame name: adjust
symbol name: y
symbol filename: lreg.cpp
symbol line: 35
value: std::vector of length 13, capacity 610246426957271515 = {2, 838, 58, 262, 2, -2, 2, 218, 58, 362, 218, 758, 2776}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-16 12:22:46]
Fault Injection Successful after 1.4088454246520996s
[INFO -- 2018-11-16 12:22:46]
event type: exit
[EXCEPTION -- 2018-11-16 12:22:46]
exit code: no exit code available
