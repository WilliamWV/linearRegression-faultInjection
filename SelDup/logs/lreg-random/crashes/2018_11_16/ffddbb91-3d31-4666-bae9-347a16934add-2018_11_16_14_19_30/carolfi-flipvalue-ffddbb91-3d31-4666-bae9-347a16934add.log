[INFO -- 2018-11-16 14:19:26]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 14:19:26]
Initialization strings:
[INFO -- 2018-11-16 14:19:26]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 14:19:26]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 14:19:26]
initSignal:0
[INFO -- 2018-11-16 14:19:26]
endSignal:5
[INFO -- 2018-11-16 14:19:26]
faultModel:2
[EXCEPTION -- 2018-11-16 14:19:28]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-16 14:19:29]
Backtrace BEGIN:
#0  0x000055555555522d in verifyDoubleDup (a=1.9980179282787214, b=-1.410690359787476) at lreg.cpp:70
#1  0x00005555555557ea in predict (v=10) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=30000, iter2=30000, N=3, alpha1=5.0000000000000002e-05, alpha2=5.0000000000000002e-05, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

65			fp << "verifyUint: a = "<<a<<"; b = "<<b<<endl;
66	        detected = 1;	
67		}
68		return a;
69	}
70	double verifyDoubleDup(double a, double b){
71		if (a != b && detected != 1){
72			//gerar entrada no log
73			ofstream fp ("/tmp/lreg/detected.log", std::ofstream::app);
74			fp << "verifyDouble: a = "<<a<<"; b = "<<b<<endl;

Backtrace END
Fliping a bit of the value pointed by a pointer
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x2f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffe1fe 
address max offset: 1
Memory content after  bitflip:0xe1
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 217
value: 0x7fffffffde58
value address: 0x7fffffffd8c0
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-16 14:19:29]
Fault Injection Successful after 3.0377891063690186s
[INFO -- 2018-11-16 14:19:29]
event type: exit
[EXCEPTION -- 2018-11-16 14:19:29]
exit code: no exit code available
