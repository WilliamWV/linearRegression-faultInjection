[INFO -- 2018-11-16 11:39:48]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-16 11:39:48]
Initialization strings:
[INFO -- 2018-11-16 11:39:48]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-16 11:39:48]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-16 11:39:48]
initSignal:0
[INFO -- 2018-11-16 11:39:48]
endSignal:5
[INFO -- 2018-11-16 11:39:48]
faultModel:2
[EXCEPTION -- 2018-11-16 11:39:49]
gdbException: Cannot access memory at address 0xa8ffafae6d5b9fd1
[INFO -- 2018-11-16 11:39:49]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b180 <T1>, __n=0) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x00005555555557d4 in predict (v=2) at lreg.cpp:116
#2  0x00005555555558c0 in meanSquaredError () at lreg.cpp:128
#3  0x0000555555555ee5 in train (iter1=15000, iter2=15000, N=2, alpha1=0.00020000000000000001, alpha2=0.00020000000000000001, stopsWhenStable=true) at lreg.cpp:194
#4  0x0000555555556467 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:253

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Fliping a bit of the pointer
Memory content before bitflip:0x800xb10x750x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd708
address max offset: 8
Memory content after  bitflip:0x990x510x820x4d0x9c0xbf0x810x9e
frame name: std::vector<double, std::allocator<double> >::operator[]
symbol name: this
symbol filename: lreg.cpp
symbol line: 0
value: 0x55555575b180 <T1>
value address: 0x7fffffffd708
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-16 11:39:49]
Fault Injection Successful after 1.8950579166412354s
[INFO -- 2018-11-16 11:39:50]
event type: exit
[EXCEPTION -- 2018-11-16 11:39:50]
exit code: no exit code available
