[INFO -- 2018-11-22 14:51:18]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-22 14:51:18]
Initialization strings:
[INFO -- 2018-11-22 14:51:18]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-22 14:51:18]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-22 14:51:18]
initSignal:0
[INFO -- 2018-11-22 14:51:18]
endSignal:3
[INFO -- 2018-11-22 14:51:18]
faultModel:1
[INFO -- 2018-11-22 14:51:20]
Backtrace BEGIN:
#0  0x0000555555555332 in meanSquaredError () at lreg.cpp:63
#1  0x0000555555555661 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#2  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

58	double meanSquaredError(){
59		double error = 0;
60		for(int i = 0; i<x.size(); i++){
61			error+= ((predict(x[i]) - y[i]) * (predict(x[i]) - y[i]));	
62		}
63		error /= x.size();
64		return error;
65	
66	}
67	/**

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x5555557715a0
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x000x000x81
frame name: main
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 12, capacity 16 = {-44, -23, -143, -8, 1, 1, -1319, -23, -1079, -503, -104, -1583}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-22 14:51:20]
Fault Injection Successful after 2.033249855041504s
[INFO -- 2018-11-22 14:51:22]
event type: exit
[INFO -- 2018-11-22 14:51:22]
exit code: 0
