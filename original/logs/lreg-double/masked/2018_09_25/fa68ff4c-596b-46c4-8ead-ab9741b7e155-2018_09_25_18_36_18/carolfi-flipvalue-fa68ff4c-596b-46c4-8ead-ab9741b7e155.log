[INFO -- 2018-09-25 18:36:10]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-25 18:36:10]
Initialization strings:
[INFO -- 2018-09-25 18:36:10]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-25 18:36:10]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-25 18:36:10]
initSignal:0
[INFO -- 2018-09-25 18:36:10]
endSignal:2
[INFO -- 2018-09-25 18:36:10]
faultModel:1
[INFO -- 2018-09-25 18:36:10]
Backtrace BEGIN:
#0  0x0000555555556f7c in std::_Vector_base<double, std::allocator<double> >::_M_create_storage (this=0x7fffffffd8b0, __n=2) at /usr/include/c++/7/bits/stl_vector.h:189
#1  0x000055555555663d in std::_Vector_base<double, std::allocator<double> >::_Vector_base (this=0x7fffffffd8b0, __n=2, __a=...) at /usr/include/c++/7/bits/stl_vector.h:138
#2  0x000055555555610f in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd8b0, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/stl_vector.h:328
#3  0x0000555555555713 in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#4  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

184	      void
185	      _M_create_storage(size_t __n)
186	      {
187		this->_M_impl._M_start = this->_M_allocate(__n);
188		this->_M_impl._M_finish = this->_M_impl._M_start;
189		this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
190	      }
191	    };
192	
193	

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd958
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x000x000x42
frame name: main
symbol name: temp
symbol filename: lreg.cpp
symbol line: 168
value: 8589934592
value address: 0x7fffffffd958
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-09-25 18:36:10]
Fault Injection Successful after 0.8684911727905273s
[INFO -- 2018-09-25 18:36:17]
event type: exit
[INFO -- 2018-09-25 18:36:17]
exit code: 0
