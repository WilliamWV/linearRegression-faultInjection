[INFO -- 2018-10-02 18:04:56]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-02 18:04:56]
Initialization strings:
[INFO -- 2018-10-02 18:04:57]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-02 18:04:57]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-02 18:04:57]
initSignal:0
[INFO -- 2018-10-02 18:04:57]
endSignal:10
[INFO -- 2018-10-02 18:04:57]
faultModel:1
[INFO -- 2018-10-02 18:05:01]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x4022000000000000) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x00005555555551a9 in predict (v=9) at lreg.cpp:49
#2  0x00005555555552ba in meanSquaredError () at lreg.cpp:61
#3  0x0000555555555661 in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:121
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x040x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd818
address max offset: 4
Memory content after  bitflip:0x200x000x000x00
frame name: train
symbol name: N
symbol filename: lreg.cpp
symbol line: 105
value: 32
value address: 0x7fffffffd818
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-10-02 18:05:01]
Fault Injection Successful after 4.988919496536255s
[INFO -- 2018-10-02 18:05:04]
event type: exit
[INFO -- 2018-10-02 18:05:04]
exit code: 0
