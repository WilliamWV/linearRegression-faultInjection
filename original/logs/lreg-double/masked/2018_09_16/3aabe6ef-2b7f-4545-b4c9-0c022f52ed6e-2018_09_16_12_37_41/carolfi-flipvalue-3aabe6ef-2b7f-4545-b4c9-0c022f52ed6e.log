[INFO -- 2018-09-16 12:37:33]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-16 12:37:33]
Initialization strings:
[INFO -- 2018-09-16 12:37:33]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-16 12:37:33]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-16 12:37:33]
initSignal:0
[INFO -- 2018-09-16 12:37:33]
endSignal:2
[INFO -- 2018-09-16 12:37:33]
faultModel:1
[INFO -- 2018-09-16 12:37:35]
Backtrace BEGIN:
#0  predict (v=0) at lreg.cpp:52
#1  0x00005555555553fc in partialDerivate (pos=0) at lreg.cpp:74
#2  0x0000555555555503 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#3  0x00005555555556ac in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}
55	/**
56		Calculates the mean squared error of T

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x555555771640
address max offset: 8
Memory content after  bitflip:0x000x000x090x000x000x000x000x00
frame name: predict
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 20, capacity 32 = {0, 2, 1, -3, -4, -8, -16, -5, 20, -19, 14, 0, -20, -19, -20, 10, -13, -21, 24, -9}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-16 12:37:35]
Fault Injection Successful after 2.232325792312622s
[INFO -- 2018-09-16 12:37:41]
event type: exit
[INFO -- 2018-09-16 12:37:41]
exit code: 0
