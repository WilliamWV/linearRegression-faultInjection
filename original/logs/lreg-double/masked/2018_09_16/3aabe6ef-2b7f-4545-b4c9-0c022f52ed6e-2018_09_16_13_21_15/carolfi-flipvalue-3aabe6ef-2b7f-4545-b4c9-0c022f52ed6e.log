[INFO -- 2018-09-16 13:20:55]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-16 13:20:55]
Initialization strings:
[INFO -- 2018-09-16 13:20:55]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-16 13:20:55]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-16 13:20:55]
initSignal:0
[INFO -- 2018-09-16 13:20:55]
endSignal:2
[INFO -- 2018-09-16 13:20:55]
faultModel:1
[INFO -- 2018-09-16 13:20:56]
Backtrace BEGIN:
#0  0x0000555555555401 in partialDerivate (pos=1) at lreg.cpp:74
#1  0x0000555555555503 in adjust (alpha=0.00020000000000000001) at lreg.cpp:87
#2  0x00005555555556ac in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

69		to the adjustment variable whose position in T is passed in pos
70	*/
71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;
78	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x5555557713f0
address max offset: 8
Memory content after  bitflip:0x000x000x000x110x000x000x000x00
frame name: adjust
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 8, capacity 8 = {1, 5, 3, -5, -7, -15, -31, -9}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-16 13:20:56]
Fault Injection Successful after 1.0244035720825195s
[INFO -- 2018-09-16 13:21:13]
event type: exit
[INFO -- 2018-09-16 13:21:13]
exit code: 0
