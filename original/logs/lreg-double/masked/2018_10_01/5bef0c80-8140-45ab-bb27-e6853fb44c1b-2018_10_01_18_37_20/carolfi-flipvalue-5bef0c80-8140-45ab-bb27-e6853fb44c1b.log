[INFO -- 2018-10-01 18:37:11]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-01 18:37:11]
Initialization strings:
[INFO -- 2018-10-01 18:37:11]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-01 18:37:11]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-01 18:37:11]
initSignal:0
[INFO -- 2018-10-01 18:37:11]
endSignal:10
[INFO -- 2018-10-01 18:37:11]
faultModel:1
[INFO -- 2018-10-01 18:37:12]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x4014000000000000) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x0000555555555379 in partialDerivate (pos=0) at lreg.cpp:73
#2  0x00005555555554b3 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#3  0x000055555555565c in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x4a0x8f0x5d0x2e0x1d0x3f0xf50x40
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd838
address max offset: 8
Memory content after  bitflip:0x4a0x8f0x5d0x2e0x1d0x3f0xc50x40
frame name: train
symbol name: MSE
symbol filename: lreg.cpp
symbol line: 117
value: 10878.227977461782
value address: 0x7fffffffd838
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-01 18:37:12]
Fault Injection Successful after 1.6144442558288574s
[INFO -- 2018-10-01 18:37:18]
event type: exit
[INFO -- 2018-10-01 18:37:18]
exit code: 0
