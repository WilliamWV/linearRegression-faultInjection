[INFO -- 2018-10-01 18:18:58]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-01 18:18:58]
Initialization strings:
[INFO -- 2018-10-01 18:18:58]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-01 18:18:58]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-01 18:18:58]
initSignal:0
[INFO -- 2018-10-01 18:18:58]
endSignal:10
[INFO -- 2018-10-01 18:18:58]
faultModel:1
[INFO -- 2018-10-01 18:18:59]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a180 <T>, __n=0) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x00005555555551c7 in predict (v=15) at lreg.cpp:50
#2  0x00005555555552ba in meanSquaredError () at lreg.cpp:61
#3  0x0000555555555661 in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:121
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Memory content before bitflip:0x0d0x9b0x6b0xda0xfe0xff0xef0x3f
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd798
address max offset: 8
Memory content after  bitflip:0x0d0x9b0x6b0xda0xfe0x7d0xef0x3f
frame name: predict
symbol name: val
symbol filename: lreg.cpp
symbol line: 48
value: 0.9841303125402604
value address: 0x7fffffffd798
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-01 18:18:59]
Fault Injection Successful after 1.2078471183776855s
[INFO -- 2018-10-01 18:19:06]
event type: exit
[INFO -- 2018-10-01 18:19:06]
exit code: 0
