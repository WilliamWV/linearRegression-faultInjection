[INFO -- 2018-09-15 12:30:47]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 12:30:47]
Initialization strings:
[INFO -- 2018-09-15 12:30:47]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 12:30:47]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 12:30:47]
initSignal:0
[INFO -- 2018-09-15 12:30:47]
endSignal:2
[INFO -- 2018-09-15 12:30:47]
faultModel:1
[EXCEPTION -- 2018-09-15 12:30:48]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-09-15 12:30:48]
Backtrace BEGIN:
#0  0x00005555555577d5 in std::__niter_base<double*> (__it=0x100555555771360) at /usr/include/c++/7/bits/stl_algobase.h:277
#1  0x0000555555557b02 in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-0.99999966924593342, __last=0, __result=0x555555771490) at /usr/include/c++/7/bits/stl_algobase.h:422
#2  0x0000555555557985 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-0.99999966924593342, __last=0, __result=0x555555771490) at /usr/include/c++/7/bits/stl_algobase.h:456
#3  0x0000555555557708 in std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-0.99999966924593342, __last=0, __result=0x555555771490) at /usr/include/c++/7/bits/stl_uninitialized.h:101
#4  0x000055555555717e in std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-0.99999966924593342, __last=0, __result=0x555555771490) at /usr/include/c++/7/bits/stl_uninitialized.h:134
#5  0x00005555555568d7 in std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double> (__first=-0.99999966924593342, __last=0, __result=0x555555771490) at /usr/include/c++/7/bits/stl_uninitialized.h:289
#6  0x000055555555615d in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd890, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#7  0x000055555555572b in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#8  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

272	
273	  // Fallback implementation of the function in bits/stl_iterator.h used to
274	  // remove the __normal_iterator wrapper. See copy, fill, ...
275	  template<typename _Iterator>
276	    inline _Iterator
277	    __niter_base(_Iterator __it)
278	    { return __it; }
279	
280	  // All of these auxiliary structs serve two purposes.  (1) Replace
281	  // calls to copy with memmove whenever possible.  (Memmove, not memcpy,

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x555555771330
address max offset: 8
Memory content after  bitflip:0x000x000x000x880x000x000x000x00
frame name: std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 8, capacity 8 = {-12, 2, -16, 15, 4, -13, 8, -6}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 12:30:48]
Fault Injection Successful after 1.2045841217041016s
[INFO -- 2018-09-15 12:30:54]
event type: exit
[INFO -- 2018-09-15 12:30:54]
exit code: 0
