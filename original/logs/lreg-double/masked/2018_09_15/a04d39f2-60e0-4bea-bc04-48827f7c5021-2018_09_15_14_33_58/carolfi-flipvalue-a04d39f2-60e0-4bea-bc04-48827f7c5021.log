[INFO -- 2018-09-15 14:33:50]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 14:33:50]
Initialization strings:
[INFO -- 2018-09-15 14:33:50]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 14:33:50]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 14:33:50]
initSignal:0
[INFO -- 2018-09-15 14:33:50]
endSignal:2
[INFO -- 2018-09-15 14:33:50]
faultModel:1
[INFO -- 2018-09-15 14:33:50]
Backtrace BEGIN:
#0  0x0000555555555107 in equals (a=std::vector of length 2, capacity 2 = {...}, b=<error reading variable: Cannot access memory at address 0xbff00016d2f1db2b>) at lreg.cpp:36
#1  0x0000555555555744 in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#2  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

31	
32	vector<double> x; // input of training set
33	vector<double> y; // observed values of training set inputs
34	vector<double> T; // the adjustment variables
35	
36	bool equals(vector<double> a, vector<double> b){
37		if (a.size() != b.size()) return false;
38		for (int i = 0; i<a.size(); i++){
39			if(a[i] != b[i]) return false;
40		}

Backtrace END
Memory content before bitflip:0x300x750x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd930
address max offset: 4
Memory content after  bitflip:0x210x750x000x00
frame name: main
symbol name: iterations
symbol filename: lreg.cpp
symbol line: 169
value: 29985
value address: 0x7fffffffd930
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-09-15 14:33:50]
Fault Injection Successful after 0.6706435680389404s
[INFO -- 2018-09-15 14:33:57]
event type: exit
[INFO -- 2018-09-15 14:33:57]
exit code: 0
