[INFO -- 2018-09-15 15:27:09]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 15:27:09]
Initialization strings:
[INFO -- 2018-09-15 15:27:09]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 15:27:09]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 15:27:09]
initSignal:0
[INFO -- 2018-09-15 15:27:09]
endSignal:2
[INFO -- 2018-09-15 15:27:09]
faultModel:1
[EXCEPTION -- 2018-09-15 15:27:11]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-09-15 15:27:11]
Backtrace BEGIN:
#0  0x0000555555555f01 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a160 <y>, __n=16) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x0000555555555415 in partialDerivate (pos=0) at lreg.cpp:74
#2  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#3  0x00005555555556ac in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Fliping a bit of the pointer
Memory content before bitflip:0x600xa10x750x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd758
address max offset: 8
Memory content after  bitflip:0x600xc10x750x550x550x550x000x00
frame name: std::vector<double, std::allocator<double> >::operator[]
symbol name: this
symbol filename: lreg.cpp
symbol line: 0
value: 0x55555575a160 <y>
value address: 0x7fffffffd758
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-09-15 15:27:11]
Fault Injection Successful after 2.9493441581726074s
[INFO -- 2018-09-15 15:27:17]
event type: exit
[INFO -- 2018-09-15 15:27:17]
exit code: 0
