[INFO -- 2018-09-15 17:10:15]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 17:10:15]
Initialization strings:
[INFO -- 2018-09-15 17:10:15]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 17:10:15]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 17:10:15]
initSignal:0
[INFO -- 2018-09-15 17:10:15]
endSignal:2
[INFO -- 2018-09-15 17:10:15]
faultModel:1
[INFO -- 2018-09-15 17:10:16]
Backtrace BEGIN:
#0  0x00005555555563ef in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd870, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#1  0x00005555555556f2 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:124
#2  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

213		      this->_M_impl._M_start = __tmp;
214		      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
215		    }
216		  else if (size() >= __xlen)
217		    {
218		      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
219				    end(), _M_get_Tp_allocator());
220		    }
221		  else
222		    {

Backtrace END
Fliping a bit of the value pointed by a pointer
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x680x140x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd880
address max offset: 8
Memory content after  bitflip:0x680x140x770x550x550x550x0a0x00
frame name: std::vector<double, std::allocator<double> >::operator=
symbol name: this
symbol filename: lreg.cpp
symbol line: 0
value: 0x7fffffffd870
value address: 0x7fffffffd7c8
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-09-15 17:10:16]
Fault Injection Successful after 1.3177595138549805s
[INFO -- 2018-09-15 17:10:22]
event type: exit
[INFO -- 2018-09-15 17:10:22]
exit code: 0
