[INFO -- 2018-09-15 19:49:47]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 19:49:47]
Initialization strings:
[INFO -- 2018-09-15 19:49:47]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 19:49:47]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 19:49:47]
initSignal:0
[INFO -- 2018-09-15 19:49:47]
endSignal:2
[INFO -- 2018-09-15 19:49:47]
faultModel:1
[INFO -- 2018-09-15 19:49:49]
Backtrace BEGIN:
#0  0x0000555555555217 in predict (v=-6) at lreg.cpp:50
#1  0x000055555555530a in meanSquaredError () at lreg.cpp:61
#2  0x00005555555556b1 in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x555555771960
address max offset: 8
Memory content after  bitflip:0x000x900x000x000x000x000x000x00
frame name: main
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 36, capacity 64 = {-5, 9, -6, -6, 9, -8, 13, 6, 0, 2, 12, -13, 1, -23, 15, -7, -6, 8, 11, 10, 4, 12, 6, 17, 18, 6, 7, -21, -2, -12, -24, 3, -27, -23, 27, -12}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 19:49:49]
Fault Injection Successful after 2.2979800701141357s
[INFO -- 2018-09-15 19:49:54]
event type: exit
[INFO -- 2018-09-15 19:49:54]
exit code: 0
