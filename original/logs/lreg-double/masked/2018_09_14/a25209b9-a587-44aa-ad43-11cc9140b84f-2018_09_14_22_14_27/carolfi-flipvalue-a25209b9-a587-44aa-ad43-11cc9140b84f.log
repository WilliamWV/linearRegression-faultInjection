[INFO -- 2018-09-14 22:14:18]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-14 22:14:18]
Initialization strings:
[INFO -- 2018-09-14 22:14:18]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-14 22:14:18]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-14 22:14:18]
initSignal:0
[INFO -- 2018-09-14 22:14:18]
endSignal:2
[INFO -- 2018-09-14 22:14:18]
faultModel:1
[INFO -- 2018-09-14 22:14:21]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x403c000000000000) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x00005555555551f9 in predict (v=28) at lreg.cpp:49
#2  0x00005555555553fc in partialDerivate (pos=0) at lreg.cpp:74
#3  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#4  0x00005555555556ac in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x01
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd81c
address max offset: 1
Memory content after  bitflip:0x08
frame name: train
symbol name: stopsWhenStable
symbol filename: lreg.cpp
symbol line: 105
value: 8
value address: 0x7fffffffd81c
Type: A boolean type.
Type sizeof: 1

[INFO -- 2018-09-14 22:14:21]
Fault Injection Successful after 3.6133813858032227s
[INFO -- 2018-09-14 22:14:26]
event type: exit
[INFO -- 2018-09-14 22:14:26]
exit code: 0
