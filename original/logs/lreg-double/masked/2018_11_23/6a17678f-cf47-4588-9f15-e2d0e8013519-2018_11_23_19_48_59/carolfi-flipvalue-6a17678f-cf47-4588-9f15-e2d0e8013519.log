[INFO -- 2018-11-23 19:48:56]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 19:48:56]
Initialization strings:
[INFO -- 2018-11-23 19:48:56]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 19:48:56]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 19:48:56]
initSignal:0
[INFO -- 2018-11-23 19:48:56]
endSignal:3
[INFO -- 2018-11-23 19:48:56]
faultModel:1
[INFO -- 2018-11-23 19:48:57]
Backtrace BEGIN:
#0  0x0000555555555d27 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a180 <T>, __n=0) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x00005555555551c7 in predict (v=6) at lreg.cpp:50
#2  0x00005555555553ac in partialDerivate (pos=0) at lreg.cpp:74
#3  0x00005555555554b3 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#4  0x000055555555565c in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd738
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x000x0c0x00
frame name: predict
symbol name: val
symbol filename: lreg.cpp
symbol line: 48
value: 1.668805393880401e-308
value address: 0x7fffffffd738
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-23 19:48:57]
Fault Injection Successful after 1.6387436389923096s
[INFO -- 2018-11-23 19:48:58]
event type: exit
[INFO -- 2018-11-23 19:48:58]
exit code: 0
