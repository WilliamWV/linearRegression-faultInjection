[INFO -- 2018-11-23 18:37:42]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 18:37:42]
Initialization strings:
[INFO -- 2018-11-23 18:37:42]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 18:37:42]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 18:37:42]
initSignal:0
[INFO -- 2018-11-23 18:37:42]
endSignal:3
[INFO -- 2018-11-23 18:37:42]
faultModel:1
[EXCEPTION -- 2018-11-23 18:37:42]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-23 18:37:43]
Backtrace BEGIN:
#0  predict (v=-2) at lreg.cpp:52
#1  0x00005555555552ba in meanSquaredError () at lreg.cpp:61
#2  0x0000555555555661 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}
55	/**
56		Calculates the mean squared error of T

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x555555771530
address max offset: 8
Memory content after  bitflip:0x000x840x000x000x000x000x000x00
frame name: predict
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 12, capacity 16 = {-4, -3, -7, -2, -1, -1, -21, -3, -19, 13, 6, 23}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-23 18:37:43]
Fault Injection Successful after 1.076883316040039s
[INFO -- 2018-11-23 18:37:44]
event type: exit
[INFO -- 2018-11-23 18:37:44]
exit code: 0
