[INFO -- 2018-11-23 17:21:12]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 17:21:12]
Initialization strings:
[INFO -- 2018-11-23 17:21:12]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 17:21:12]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 17:21:12]
initSignal:0
[INFO -- 2018-11-23 17:21:12]
endSignal:3
[INFO -- 2018-11-23 17:21:12]
faultModel:1
[INFO -- 2018-11-23 17:21:13]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a160 <y>, __n=6) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x00005555555553c5 in partialDerivate (pos=0) at lreg.cpp:74
#2  0x00005555555554b3 in adjust (alpha=0.00020000000000000001) at lreg.cpp:87
#3  0x000055555555565c in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd940
address max offset: 8
Memory content after  bitflip:0x2d0x430x160xeb0xe20x360x2a0x3f
frame name: main
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 160
value: 0.00019999999998934187
value address: 0x7fffffffd940
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-23 17:21:13]
Fault Injection Successful after 1.7602345943450928s
[INFO -- 2018-11-23 17:21:15]
event type: exit
[INFO -- 2018-11-23 17:21:15]
exit code: 0
