[INFO -- 2018-11-23 18:33:13]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 18:33:13]
Initialization strings:
[INFO -- 2018-11-23 18:33:13]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 18:33:13]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 18:33:13]
initSignal:0
[INFO -- 2018-11-23 18:33:13]
endSignal:3
[INFO -- 2018-11-23 18:33:13]
faultModel:1
[EXCEPTION -- 2018-11-23 18:33:14]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-23 18:33:15]
Backtrace BEGIN:
#0  std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555771340, __last=0x555555771350, __result=0x555555771450) at /usr/include/c++/7/bits/stl_algobase.h:370
#1  0x00005555555575e8 in std::__copy_move_a<false, double const*, double*> (__first=0x555555771340, __last=0x555555771350, __result=0x555555771450) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x00005555555570e7 in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=1.9074152721303306, __last=0, __result=1.9074152721303306) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x000055555555690b in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=1.9074152721303306, __last=0, __result=1.9074152721303306) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x000055555555624d in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd860, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x00005555555556a2 in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:124
#6  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}
371	    };
372	
373	  template<bool _IsMove, typename _II, typename _OI>
374	    inline _OI

Backtrace END
Memory content before bitflip:0x080x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd928
address max offset: 4
Memory content after  bitflip:0x080x000x000x09
frame name: main
symbol name: sizeOfTraining
symbol filename: lreg.cpp
symbol line: 161
value: 150994952
value address: 0x7fffffffd928
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-23 18:33:15]
Fault Injection Successful after 2.334714412689209s
[INFO -- 2018-11-23 18:33:17]
event type: exit
[INFO -- 2018-11-23 18:33:17]
exit code: 0
