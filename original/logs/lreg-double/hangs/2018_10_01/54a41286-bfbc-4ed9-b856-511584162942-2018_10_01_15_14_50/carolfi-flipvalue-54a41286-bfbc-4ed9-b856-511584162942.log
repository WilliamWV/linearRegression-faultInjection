[INFO -- 2018-10-01 15:14:25]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-01 15:14:25]
Initialization strings:
[INFO -- 2018-10-01 15:14:25]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-01 15:14:25]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-01 15:14:25]
initSignal:0
[INFO -- 2018-10-01 15:14:25]
endSignal:10
[INFO -- 2018-10-01 15:14:25]
faultModel:1
[INFO -- 2018-10-01 15:14:29]
Backtrace BEGIN:
#0  0x000055555555692c in std::vector<double, std::allocator<double> >::end (this=0x7fffffffd860) at /usr/include/c++/7/bits/stl_vector.h:582
#1  0x00005555555561fa in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd860, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#2  0x00005555555556a2 in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:124
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

577	       *  element in the %vector.  Iteration is done in ordinary
578	       *  element order.
579	       */
580	      iterator
581	      end() _GLIBCXX_NOEXCEPT
582	      { return iterator(this->_M_impl._M_finish); }
583	
584	      /**
585	       *  Returns a read-only (constant) iterator that points one past
586	       *  the last element in the %vector.  Iteration is done in

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x600x170x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575a140 
address max offset: 8
Memory content after  bitflip:0x600x120x770x550x550x550x000x00
frame name: std::vector<double, std::allocator<double> >::operator=
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 196, capacity 224 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4.001931731314097e-322, 4.6355706478192213e-310, 1.5810100666919889e-322, -6.0000038146972647, -2.0000003890073885, -6, -13, -7, 7, 0, 1.6304166312761136e-322, 4.6355706478231738e-310, 3.9983609387757748, -3.5824520774100992, 1.6304166312761136e-322, 4.6355706478097352e-310, 3.9983778631349209, -3.5823426620316341, 2.4209216646221081e-322, -20.841642556355715, -108.44532320638299, 0.67035863740267987, 3.6607589112929162, 0, 4.001931731314097e-322, 4.6355706478057827e-310, 1.5810100666919889e-322, -13.000007629394529, 3.2807642430998139e+178, -13.00000000619192, -27, -15, 13, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 1.1286365798416186e-312, 0, 0, 0, 0, 0, 1.6304166312761136e-322, 4.6355706478247548e-310, 3.9983778631349209, -3.5823426620316341, 1.6304166312761136e-322, 4.6355706478263358e-310, 3.9983609387757748, -3.5824520774100992, 1.6304166312761136e-322, 0, 3.9983778631349209, -3.5823426620316341, 7.1639518646980749e-322, 0, 31, -13, -5, -13, -27, -15, 13, -164, -956, -2020, -356, -220, -220, -1084, -220, 0, 1.3487992131466031e-321, 0, 16, -6, -2, -6, -13, -7, 7, -6, 16, -22, 10, 8, 8, 17, -7, 0, -3, 14, 24, -20, -20, -22, 25, -22, 21, -7, 12, 19, -3, 24, -26, 0, 1.3487992131466031e-321, 4.6355706478350314e-310, 31, -13, -5, -13, -27, -15, 13, -164, -956, -2020, -356, -220, -220, -1084, -220, 4, -44, -724, -2204, -29517, -29517, -39597, 66153, -39597, 39609, -1047, 7731, 29529, -39, 58659, -66141, 0, 2.6136072665001942e-321, 11, 16, -6, -2, -6, -13, -7, 7, -6, 16, -22, 10, 8, 8, 17, -7, 0, -3, 14, 24, -20, -20, -22, 25, -22, 21, -7, 12, 19, -3, 24, -26, 27, -26, 27, -16}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-01 15:14:29]
Fault Injection Successful after 4.463979721069336s
