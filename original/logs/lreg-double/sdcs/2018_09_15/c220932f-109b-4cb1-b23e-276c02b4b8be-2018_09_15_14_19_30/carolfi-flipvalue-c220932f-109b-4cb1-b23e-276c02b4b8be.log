[INFO -- 2018-09-15 14:19:26]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 14:19:26]
Initialization strings:
[INFO -- 2018-09-15 14:19:26]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 14:19:26]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 14:19:26]
initSignal:0
[INFO -- 2018-09-15 14:19:26]
endSignal:2
[INFO -- 2018-09-15 14:19:26]
faultModel:1
[INFO -- 2018-09-15 14:19:27]
Backtrace BEGIN:
#0  __gnu_cxx::new_allocator<double>::~new_allocator (this=0x7fffffffd7d7, __in_chrg=<optimized out>) at /usr/include/c++/7/ext/new_allocator.h:86
#1  0x0000555555555f7e in std::allocator<double>::~allocator (this=0x7fffffffd7d7, __in_chrg=<optimized out>) at /usr/include/c++/7/bits/allocator.h:139
#2  0x000055555555611b in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd890, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/stl_vector.h:328
#3  0x000055555555572b in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:126
#4  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

81	      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
82	
83	      template<typename _Tp1>
84		new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
85	
86	      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
87	
88	      pointer
89	      address(reference __x) const _GLIBCXX_NOEXCEPT
90	      { return std::__addressof(__x); }

Backtrace END
Memory content before bitflip:0x060x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd93c
address max offset: 4
Memory content after  bitflip:0x060x600x000x00
frame name: main
symbol name: predictions
symbol filename: lreg.cpp
symbol line: 169
value: 24582
value address: 0x7fffffffd93c
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-09-15 14:19:27]
Fault Injection Successful after 1.9183502197265625s
[INFO -- 2018-09-15 14:19:29]
event type: exit
[INFO -- 2018-09-15 14:19:29]
exit code: 0
