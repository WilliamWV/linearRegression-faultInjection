[INFO -- 2018-09-15 17:21:54]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 17:21:54]
Initialization strings:
[INFO -- 2018-09-15 17:21:54]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 17:21:54]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 17:21:54]
initSignal:0
[INFO -- 2018-09-15 17:21:54]
endSignal:2
[INFO -- 2018-09-15 17:21:54]
faultModel:1
[EXCEPTION -- 2018-09-15 17:21:55]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[EXCEPTION -- 2018-09-15 17:21:55]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-09-15 17:21:55]
Backtrace BEGIN:
#0  0x0000555555554ed0 in pow@plt ()
#1  0x0000555555555f39 in std::pow<double, int> (__x=-4, __y=0) at /usr/include/c++/7/cmath:418
#2  0x0000555555555237 in predict (v=-4) at lreg.cpp:50
#3  0x00005555555553fc in partialDerivate (pos=0) at lreg.cpp:74
#4  0x0000555555555503 in adjust (alpha=0.00020000000000000001) at lreg.cpp:87
#5  0x00005555555556ac in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#6  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

94		Trains the linear regression model
95		* iterations: max number of iterations
96		* alpha: the learning rate to adjust Ts
97		* N : number of Ts used
98		* stopsWhenStable: stops if T are unchanged
99	
100		P.S.: After experimental conclusions I understood that it would be better
101			  if alpha was smaller to greater derivates, such that a step is not so 
102			  catastrophic in local steps. So the new alpha are calculated as
103				N_Alpha = alpha / (sqrt(PD))

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000xf00xbf
Fault Model: Double bit-flip
base address to flip value: 0x5555557713b0
address max offset: 8
Memory content after  bitflip:0x000x000x000x0c0x000x000xf00xbf
frame name: predict
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 8, capacity 8 = {-1.0000000447034836, -1, -1, -1, -1, -1, -1, -1}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 17:21:55]
Fault Injection Successful after 1.4724962711334229s
[INFO -- 2018-09-15 17:22:02]
event type: exit
[INFO -- 2018-09-15 17:22:02]
exit code: 0
