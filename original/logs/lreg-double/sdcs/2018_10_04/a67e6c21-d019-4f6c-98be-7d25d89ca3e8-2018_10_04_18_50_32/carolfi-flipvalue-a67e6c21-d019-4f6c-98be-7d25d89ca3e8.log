[INFO -- 2018-10-04 18:50:23]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-04 18:50:23]
Initialization strings:
[INFO -- 2018-10-04 18:50:23]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-04 18:50:23]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-04 18:50:23]
initSignal:0
[INFO -- 2018-10-04 18:50:23]
endSignal:10
[INFO -- 2018-10-04 18:50:23]
faultModel:1
[INFO -- 2018-10-04 18:50:25]
Backtrace BEGIN:
#0  0x00005555555551f1 in predict (v=6) at lreg.cpp:50
#1  0x000055555555526a in meanSquaredError () at lreg.cpp:61
#2  0x0000555555555661 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x2e0x40
Fault Model: Double bit-flip
base address to flip value: 0x555555771540
address max offset: 8
Memory content after  bitflip:0x000x000x000x060x000x000x2e0x40
frame name: predict
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 20, capacity 32 = {15.000000178813934, 5, -5, -6, -6, 11, 1, 12, 4, -8, -13, -8, 2, 4, 20, 6, 7, 12, 6, -15}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-04 18:50:25]
Fault Injection Successful after 2.0914175510406494s
[INFO -- 2018-10-04 18:50:31]
event type: exit
[INFO -- 2018-10-04 18:50:31]
exit code: 0
