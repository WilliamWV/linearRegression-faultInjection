[INFO -- 2018-11-22 15:05:58]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-22 15:05:58]
Initialization strings:
[INFO -- 2018-11-22 15:05:58]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-22 15:05:58]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-22 15:05:58]
initSignal:0
[INFO -- 2018-11-22 15:05:58]
endSignal:3
[INFO -- 2018-11-22 15:05:58]
faultModel:1
[INFO -- 2018-11-22 15:06:00]
Backtrace BEGIN:
#0  0x0000555555555d1c in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a180 <T>, __n=4294967297) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x00005555555551c7 in predict (v=6) at lreg.cpp:50
#2  0x00005555555552ba in meanSquaredError () at lreg.cpp:61
#3  0x0000555555555661 in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:121
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd798
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x000x000x50
frame name: predict
symbol name: val
symbol filename: lreg.cpp
symbol line: 48
value: 2.3158417847463239e+77
value address: 0x7fffffffd798
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-22 15:06:00]
Fault Injection Successful after 2.4063820838928223s
[INFO -- 2018-11-22 15:06:03]
event type: exit
[INFO -- 2018-11-22 15:06:03]
exit code: 0
