[INFO -- 2018-10-01 14:13:26]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-01 14:13:26]
Initialization strings:
[INFO -- 2018-10-01 14:13:26]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-01 14:13:26]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-01 14:13:26]
initSignal:0
[INFO -- 2018-10-01 14:13:26]
endSignal:10
[INFO -- 2018-10-01 14:13:26]
faultModel:1
[INFO -- 2018-10-01 14:13:27]
Backtrace BEGIN:
#0  0x0000555555555332 in meanSquaredError () at lreg.cpp:63
#1  0x0000555555555661 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#2  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

58	double meanSquaredError(){
59		double error = 0;
60		for(int i = 0; i<x.size(); i++){
61			error+= ((predict(x[i]) - y[i]) * (predict(x[i]) - y[i]));	
62		}
63		error /= x.size();
64		return error;
65	
66	}
67	/**

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x400x160x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575a150 
address max offset: 8
Memory content after  bitflip:0x400x160x770x550x350x550x000x00
frame name: main
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 20, capacity -17179869152 = {11, 16, -6, -2, -6, -13, -7, 7, -6, 16, -22, 10, 8, 8, 17, -7, 0, -3, 14, 24}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-01 14:13:27]
Fault Injection Successful after 1.351332426071167s
[INFO -- 2018-10-01 14:13:28]
event type: exit
[EXCEPTION -- 2018-10-01 14:13:28]
exit code: no exit code available
