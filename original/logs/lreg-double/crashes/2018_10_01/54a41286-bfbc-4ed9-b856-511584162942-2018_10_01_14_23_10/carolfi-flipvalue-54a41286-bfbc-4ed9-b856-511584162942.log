[INFO -- 2018-10-01 14:23:06]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-01 14:23:06]
Initialization strings:
[INFO -- 2018-10-01 14:23:06]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-01 14:23:06]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-01 14:23:06]
initSignal:0
[INFO -- 2018-10-01 14:23:06]
endSignal:10
[INFO -- 2018-10-01 14:23:06]
faultModel:1
[EXCEPTION -- 2018-10-01 14:23:10]
gdbException: Cannot access memory at address 0x555555351380
[INFO -- 2018-10-01 14:23:10]
Backtrace BEGIN:
#0  0x0000555555555d56 in std::pow<double, int> (__x=-7, __y=3) at /usr/include/c++/7/cmath:419
#1  0x00005555555551e7 in predict (v=-7) at lreg.cpp:50
#2  0x00005555555553ac in partialDerivate (pos=0) at lreg.cpp:74
#3  0x00005555555554b3 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#4  0x000055555555565c in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

414	    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
415	    pow(_Tp __x, _Up __y)
416	    {
417	      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
418	      return pow(__type(__x), __type(__y));
419	    }
420	
421	  using ::sin;
422	
423	#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x900x1a0x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575a168 
address max offset: 8
Memory content after  bitflip:0x900x1a0x7d0x550x550x550x000x00
frame name: adjust
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 49188, capacity 64 = {21, 31, -13, -5, -13, -27, -15, 13, -164, -956, -2020, -356, -220, -220, -1084, -220, 4, -44, -724, -2204, -29517, -29517, -39597, 66153, -39597, 39609, -1047, 7731, 29529, -39, 58659, -66141, 83001, -66141, 83001, -14781, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, -31.573074965673371, -161.43550004558122, 0.64716345678484888, 3.7173977901911655, 0, 2.4209216646221081e-322, -31.573074965673371, -161.43550004558122, 0.64716345678484888, 3.7173977901911655, 0, 2.4209216646221081e-322, 4.6355706479211964e-310, -161.43070764206303, 0.65026898903522545, 3.7545929134350184, 0, 2.4209216646221081e-322, 0, -161.43550004558122, 0.64716345678484888, 3.7173977901911655, 0, 2.0719630989644356e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-01 14:23:10]
Fault Injection Successful after 4.24253511428833s
[INFO -- 2018-10-01 14:23:10]
event type: exit
[EXCEPTION -- 2018-10-01 14:23:10]
exit code: no exit code available
