[INFO -- 2018-09-14 22:09:08]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-14 22:09:08]
Initialization strings:
[INFO -- 2018-09-14 22:09:08]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-14 22:09:08]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-14 22:09:08]
initSignal:0
[INFO -- 2018-09-14 22:09:08]
endSignal:2
[INFO -- 2018-09-14 22:09:08]
faultModel:1
[EXCEPTION -- 2018-09-14 22:09:08]
gdbException: Attempt to dereference a generic pointer.
[EXCEPTION -- 2018-09-14 22:09:09]
gdbException: Cannot access memory at address 0x555555661360
[INFO -- 2018-09-14 22:09:09]
Backtrace BEGIN:
#0  0x0000555555555f01 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a160 <y>, __n=12) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x00005555555552d3 in meanSquaredError () at lreg.cpp:61
#2  0x00005555555556b1 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x490xd30xf00xd40xc70xd90x730x40
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd840
address max offset: 8
Memory content after  bitflip:0x490xd30xf00xd40xc70xd90xb30x40
frame name: train
symbol name: bestMSE
symbol filename: lreg.cpp
symbol line: 116
value: 5081.7805929675897
value address: 0x7fffffffd840
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-09-14 22:09:09]
Fault Injection Successful after 1.8807408809661865s
[INFO -- 2018-09-14 22:09:10]
event type: exit
[EXCEPTION -- 2018-09-14 22:09:10]
exit code: no exit code available
