[INFO -- 2018-11-23 17:31:08]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 17:31:08]
Initialization strings:
[INFO -- 2018-11-23 17:31:08]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 17:31:08]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 17:31:08]
initSignal:0
[INFO -- 2018-11-23 17:31:08]
endSignal:3
[INFO -- 2018-11-23 17:31:08]
faultModel:1
[EXCEPTION -- 2018-11-23 17:31:09]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-23 17:31:09]
Backtrace BEGIN:
#0  0x0000555555557810 in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555771360, __last=0x555555771378, __result=0x555555771490) at /usr/include/c++/7/bits/stl_algobase.h:357
#1  0x00005555555575e8 in std::__copy_move_a<false, double const*, double*> (__first=0x555555771360, __last=0x555555771378, __result=0x555555771340) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x00005555555570e7 in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.067491862140856035, __last=2.4209216646221081e-322, __result=0.067379460396303409) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x000055555555690b in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.067491862140856035, __last=2.4209216646221081e-322, __result=0.067379460396303409) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x000055555555624d in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd840, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x0000555555555641 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:119
#6  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

352	  template<bool _IsMove>
353	    struct __copy_move<_IsMove, true, random_access_iterator_tag>
354	    {
355	      template<typename _Tp>
356	        static _Tp*
357	        __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
358	        {
359	#if __cplusplus >= 201103L
360		  using __assignable = conditional<_IsMove,
361						   is_move_assignable<_Tp>,

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x555555771530
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x000x000x90
frame name: std::vector<double, std::allocator<double> >::operator=
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 12, capacity 16 = {-4, -3, -7, -2, -1, -1, -21, -3, -19, 13, 6, 23}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-23 17:31:09]
Fault Injection Successful after 1.7260761260986328s
[INFO -- 2018-11-23 17:31:10]
event type: exit
[EXCEPTION -- 2018-11-23 17:31:10]
exit code: no exit code available
