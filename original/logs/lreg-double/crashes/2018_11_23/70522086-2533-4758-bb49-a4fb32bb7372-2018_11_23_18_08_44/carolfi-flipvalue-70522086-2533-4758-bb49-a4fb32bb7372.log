[INFO -- 2018-11-23 18:08:43]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 18:08:43]
Initialization strings:
[INFO -- 2018-11-23 18:08:43]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 18:08:43]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 18:08:43]
initSignal:0
[INFO -- 2018-11-23 18:08:43]
endSignal:3
[INFO -- 2018-11-23 18:08:43]
faultModel:1
[INFO -- 2018-11-23 18:08:44]
Backtrace BEGIN:
#0  predict (v=13) at lreg.cpp:49
#1  0x00005555555553ac in partialDerivate (pos=1) at lreg.cpp:74
#2  0x00005555555554b3 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#3  0x000055555555565c in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

44	/**
45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x600x130x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575a180 
address max offset: 8
Memory content after  bitflip:0x660x130x770x550x550x550x000x00
frame name: predict
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 2, capacity 2 = {2.354856068728123e+134, -1.5616017665913129e+240, 1.6108629952106546e-317, 0, 0, 8.1105816421299033e-320, 8.1145341672966332e-320, 8.1046528543798083e-320, 2.6227059794340066e-317, 1.1945593569904353e+103, 1.0361307573072619e-317, -2.84915918507378e+154, 1.0691236048232596e-307, 2.430012472505587e-319, 8.0868664911295234e-320, -8.0863492239337791e-174, 2.4357436339973455e-319, 2.4311488234910219e-319, 2.6227059794340066e-317, 0, 1.0361307573072619e-317, 1.39067116124321e-309, 1.168212320268441e-307, 0, 0, 0, 0, 0, 1.0685098434731138e-317, -1.0511738089023396e-165, 2.354856068728123e+134, -1.5616017665913129e+240, 1.0927976165570236e-317, 1.1945593624138399e+103, 9.4230453904847682e+144, -7.8956424505655014e+238, 1.0927976165570236e-317, 0, 2.3548560687215177e+134, -1.5616017665913129e+240, 4.7192552671324402e-317, 0, 2.429221967472241e-319, 2.428826714955568e-319, 2.4298148462472505e-319, 2.428431462438895e-319, 2.427640957405549e-319, 2.427640957405549e-319, 2.4310500103618536e-319, 2.428826714955568e-319, 2.4309511972326854e-319, 8.1155222985883157e-320, 8.1066291169631733e-320, 8.1219451519842519e-320, 0, 0, 0, 0, 4.6949674940485304e-317, 0, 2.4318899219597837e-319, -2.6815615860178186e+154, 2.4332238992035551e-319, 2.430012472505587e-319, 8.0868664911295234e-320, -8.0863492239337791e-174, 2.4357436339973455e-319, -1.4536774486070969e+135, 3.1050361846354053e+231, 2.4347060961410788e-319, -1.084202172497359e-19, 2.435941260255682e-319, 0, 0, 0, 0, 1.4112424705386565e-314, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-23 18:08:44]
Fault Injection Successful after 1.199873447418213s
[INFO -- 2018-11-23 18:08:44]
event type: exit
[EXCEPTION -- 2018-11-23 18:08:44]
exit code: no exit code available
