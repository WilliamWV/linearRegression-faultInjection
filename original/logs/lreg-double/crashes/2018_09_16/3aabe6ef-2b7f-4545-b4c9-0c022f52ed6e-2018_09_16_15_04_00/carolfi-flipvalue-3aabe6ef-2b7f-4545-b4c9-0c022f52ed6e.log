[INFO -- 2018-09-16 15:03:56]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-16 15:03:56]
Initialization strings:
[INFO -- 2018-09-16 15:03:56]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-16 15:03:56]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-16 15:03:56]
initSignal:0
[INFO -- 2018-09-16 15:03:56]
endSignal:2
[INFO -- 2018-09-16 15:03:56]
faultModel:1
[EXCEPTION -- 2018-09-16 15:03:57]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-09-16 15:03:58]
Backtrace BEGIN:
#0  0x000055555555545b in partialDerivate (pos=0) at lreg.cpp:74
#1  0x0000555555555503 in adjust (alpha=0.00020000000000000001) at lreg.cpp:87
#2  0x00005555555556ac in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

69		to the adjustment variable whose position in T is passed in pos
70	*/
71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;
78	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0xb00x130x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575a160 
address max offset: 8
Memory content after  bitflip:0x340x130x770x550x550x550x000x00
frame name: train
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 23, capacity 23 = {7.0025861101853986e-313, 3.6334512723003657e+189, 2.8961926174210103e+281, 5.3049894774131808e-315, 7.0025861101853986e-313, 3.6334512723003657e+189, 2.8961926174210103e+281, 5.3049894774131808e-315, 1.0397779375729834e-312, 0, 0, 5.3114652946463512e-315, 5.3075798043064489e-315, 1.5921444249472713e-314, 1.7188165906818706e-312, 0, 5.2998088236266445e-315, 5.3114652946463512e-315, 5.3075798043064489e-315, 1.5921444249472713e-314, 1.5924034576365981e-314, 1.5929862811875834e-314, 1.5935367256524029e-314, 1.5925977321535932e-314, 1.7188165906818706e-312, 0, 6.7903865310888714e-313, -nan(0xfffff00000000), 3.1059652392358691e-310, 0, 0, 0, 0, 0, 7.0025861101853986e-313, -2.6475569312353494e+288, 1.1169338306001601e-287, 5.3049894724725243e-315, 7.0025861101853986e-313, 5.16940304422029e+103, 1.7240647100010046e-254, 5.3049894724725243e-315, 7.0025861101853986e-313, 0, 2.8961922715360152e+281, 5.3049894774131808e-315, 9.3098321337019392e-310, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-16 15:03:58]
Fault Injection Successful after 2.427934408187866s
[INFO -- 2018-09-16 15:03:59]
event type: exit
[EXCEPTION -- 2018-09-16 15:03:59]
exit code: no exit code available
