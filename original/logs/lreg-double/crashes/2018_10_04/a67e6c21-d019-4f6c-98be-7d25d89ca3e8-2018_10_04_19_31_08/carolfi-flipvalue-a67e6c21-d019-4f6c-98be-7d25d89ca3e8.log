[INFO -- 2018-10-04 19:31:03]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-04 19:31:03]
Initialization strings:
[INFO -- 2018-10-04 19:31:03]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-04 19:31:03]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-04 19:31:03]
initSignal:0
[INFO -- 2018-10-04 19:31:03]
endSignal:10
[INFO -- 2018-10-04 19:31:03]
faultModel:1
[EXCEPTION -- 2018-10-04 19:31:07]
pythonException: empty range for randrange() (0,0, 0)
[EXCEPTION -- 2018-10-04 19:31:07]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-10-04 19:31:08]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a180 <T>, __n=8589934594) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x00005555555551c7 in predict (v=5) at lreg.cpp:50
#2  0x00005555555553ac in partialDerivate (pos=1) at lreg.cpp:74
#3  0x00005555555554b3 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#4  0x000055555555565c in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa00x130x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575a188 
address max offset: 8
Memory content after  bitflip:0xa00x130x770x5f0x550x550x000x00
frame name: partialDerivate
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 20971524, capacity 4 = {8.3922572290260504, 144.85130351554901, -0.58726126080140362, -0.24851131923843561, 0, 4.001931731314097e-322, 4.6355706478057827e-310, 1.5810100666919889e-322, -11.000007629394529, 2.7810878623464837e-310, -13.00000000619192, 21, 1, 23, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 1.128651082165343e-312, 0, 0, 0, 0, 0, 1.6304166312761136e-322, 4.6355706478247548e-310, -2.2988916804144983, 0.057283401905501144, 1.6304166312761136e-322, 4.6355706478263358e-310, -2.2988840404348245, 0.057328618471117226, 1.6304166312761136e-322, 0, -2.298891689308237, 0.057283412335633312, 7.1639518646980749e-322, 0, 9, -11, -13, -13, 21, 1, 23, -15, 33, 53, 33, -7, -15, -79, -23, 0, 1.3487992131466031e-321, 0, 5, -5, -6, -6, 11, 1, 12, 4, -8, -13, -8, 2, 4, 20, 6, 7, 12, 6, -15, -25, 17, -24, -3, 27, 7, -12, -4, 14, 7, -23, 12, 0, 1.3487992131466031e-321, 4.6355706478350314e-310, 9, -11, -13, -13, 21, 1, 23, -15, 33, 53, 33, -7, -15, -79, -23, -27, -47, -23, 61, 90597, -30909, 80037, 111, -121719, -2299, 9633, 297, -17433, -2299, 70331, -11079, 0, 2.6136072665001942e-321, 15, 5, -5, -6, -6, 11, 1, 12, 4, -8, -13, -8, 2, 4, 20, 6, 7, 12, 6, -15, -25, 17, -24, -3, 27, 7, -12, -4, 14, 7, -23, 12, 5, -27, 2, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.6136072665001942e-321, 29, 9, -11, -13, -13, 21, 1, 23, -15, 33...}
value address: 0x55555575a180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-04 19:31:08]
Fault Injection Successful after 5.002080202102661s
[INFO -- 2018-10-04 19:31:08]
event type: exit
[EXCEPTION -- 2018-10-04 19:31:08]
exit code: no exit code available
