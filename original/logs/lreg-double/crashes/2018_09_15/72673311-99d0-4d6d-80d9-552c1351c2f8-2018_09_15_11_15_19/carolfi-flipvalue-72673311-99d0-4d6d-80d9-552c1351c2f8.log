[INFO -- 2018-09-15 11:15:17]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 11:15:17]
Initialization strings:
[INFO -- 2018-09-15 11:15:17]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 11:15:17]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 11:15:17]
initSignal:0
[INFO -- 2018-09-15 11:15:17]
endSignal:2
[INFO -- 2018-09-15 11:15:17]
faultModel:1
[EXCEPTION -- 2018-09-15 11:15:19]
gdbException: Cannot access memory at address 0x554d55771650
[INFO -- 2018-09-15 11:15:19]
Backtrace BEGIN:
#0  0x0000555555555241 in predict (v=-6) at lreg.cpp:50
#1  0x00005555555553fc in partialDerivate (pos=0) at lreg.cpp:74
#2  0x0000555555555503 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#3  0x00005555555556ac in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x580x130x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd858
address max offset: 8
Memory content after  bitflip:0xdc0x130x770x550x550x550x000x00
frame name: train
symbol name: prevT
symbol filename: lreg.cpp
symbol line: 114
value: std::vector of length 19, capacity 3 = {-17.82455460156778, -3.4948357303035524, 2.9494929271237771, 1.6304166312761136e-322, -17.82455460156778, -3.4948357303035524, 2.9494929271237771, 2.4209216646221081e-322, 0, 1, -17, 14, 0, 4.001931731314097e-322, 4.6355706478057827e-310, 1.5810100666919889e-322, -17.000015258789059, 14.000000006428404, 3, -14, 7, -7, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 1.1286365773317652e-312, 0, 0, 0, 0, 0, 1.6304166312761136e-322, -17.82455460156778, -3.4948357303035524, 2.9494929271237771, 1.6304166312761136e-322, 4.6355706478263358e-310, -3.4948192364779906, 2.9494083138020257, 1.6304166312761136e-322, 0, -3.4948357303035524, 2.9494929271237771, 7.1639518646980749e-322, 0, 1, -17, 14, 3, -14, 7, -7, 768, 331, 66, 1461, 883, 1461, 913, 408, 0, 1.3487992131466031e-321, -12, 2, -16, 15, 4, -13, 8, -6, 14, -9, -4, -19, 15, -19, -15, -10, -14, -8, -10, -13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.3487992131466031e-321, -13, 1, -17, 14, 3, -14, 7, -7, 768, 331, 66, 1461, 883, 1461, 913, 408, 796, 262, 408, 687, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.1336224915654232e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x7fffffffd850
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 11:15:19]
Fault Injection Successful after 2.1340835094451904s
[INFO -- 2018-09-15 11:15:19]
event type: exit
[EXCEPTION -- 2018-09-15 11:15:19]
exit code: no exit code available
