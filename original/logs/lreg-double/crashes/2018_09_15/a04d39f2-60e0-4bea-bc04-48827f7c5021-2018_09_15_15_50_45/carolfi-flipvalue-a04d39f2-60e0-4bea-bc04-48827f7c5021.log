[INFO -- 2018-09-15 15:50:43]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 15:50:43]
Initialization strings:
[INFO -- 2018-09-15 15:50:43]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 15:50:43]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 15:50:43]
initSignal:0
[INFO -- 2018-09-15 15:50:43]
endSignal:2
[INFO -- 2018-09-15 15:50:43]
faultModel:1
[INFO -- 2018-09-15 15:50:44]
Backtrace BEGIN:
#0  0x0000555555555f01 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a140 <x>, __n=2) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x00005555555553eb in partialDerivate (pos=1) at lreg.cpp:74
#2  0x0000555555555503 in adjust (alpha=0.00020000000000000001) at lreg.cpp:87
#3  0x00005555555556ac in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x020x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd750
address max offset: 8
Memory content after  bitflip:0x020x000x000x000x000x000x000x22
frame name: std::vector<double, std::allocator<double> >::operator[]
symbol name: __n
symbol filename: /usr/include/c++/7/bits/stl_vector.h
symbol line: 795
value: 2449958197289549826
value address: 0x7fffffffd750
Type: The type is an integer type.
Type sizeof: 8

[INFO -- 2018-09-15 15:50:44]
Fault Injection Successful after 1.318528413772583s
[INFO -- 2018-09-15 15:50:44]
event type: exit
[EXCEPTION -- 2018-09-15 15:50:44]
exit code: no exit code available
