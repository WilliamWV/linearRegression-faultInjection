[INFO -- 2018-09-15 16:34:21]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 16:34:21]
Initialization strings:
[INFO -- 2018-09-15 16:34:21]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 16:34:21]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 16:34:21]
initSignal:0
[INFO -- 2018-09-15 16:34:21]
endSignal:2
[INFO -- 2018-09-15 16:34:21]
faultModel:1
[EXCEPTION -- 2018-09-15 16:34:22]
gdbException: Cannot access memory at address 0x4400555555771360
[INFO -- 2018-09-15 16:34:22]
Backtrace BEGIN:
#0  0x00007ffff76b7b0f in __pow (x=17, y=0) at w_pow_compat.c:30
#1  0x0000555555555f39 in std::pow<double, int> (__x=17, __y=0) at /usr/include/c++/7/cmath:418
#2  0x0000555555555237 in predict (v=17) at lreg.cpp:50
#3  0x00005555555553fc in partialDerivate (pos=1) at lreg.cpp:74
#4  0x0000555555555503 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#5  0x00005555555556ac in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#6  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

25	in w_pow_compat.c

Backtrace END
Fliping a bit of the pointer
Memory content before bitflip:0x680xde0xff0xff0xff0x7f0x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd910
address max offset: 8
Memory content after  bitflip:0x680xde0xff0xff0xff0x6d0x000x00
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 152
value: 0x7fffffffde68
value address: 0x7fffffffd910
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-09-15 16:34:22]
Fault Injection Successful after 1.3942999839782715s
[INFO -- 2018-09-15 16:34:22]
event type: exit
[EXCEPTION -- 2018-09-15 16:34:22]
exit code: no exit code available
