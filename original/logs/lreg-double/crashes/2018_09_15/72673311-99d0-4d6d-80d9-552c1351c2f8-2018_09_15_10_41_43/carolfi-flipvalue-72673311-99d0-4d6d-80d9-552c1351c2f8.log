[INFO -- 2018-09-15 10:41:41]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 10:41:41]
Initialization strings:
[INFO -- 2018-09-15 10:41:41]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 10:41:41]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 10:41:41]
initSignal:0
[INFO -- 2018-09-15 10:41:41]
endSignal:2
[INFO -- 2018-09-15 10:41:41]
faultModel:1
[EXCEPTION -- 2018-09-15 10:41:42]
gdbException: Cannot access memory at address 0x555555631360
[EXCEPTION -- 2018-09-15 10:41:43]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-09-15 10:41:43]
Backtrace BEGIN:
#0  0x0000555555555217 in predict (v=14) at lreg.cpp:50
#1  0x00005555555552ba in meanSquaredError () at lreg.cpp:61
#2  0x00005555555556b1 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x5555557715e0
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x300x000x00
frame name: main
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 19, capacity 31 = {6.2218437760569856e-317, 2.0722615146145237e-317, 6.2228556224996685e-317, 2.0780796316599503e-317, 2.0742852074998895e-317, 6.2220967376676563e-317, 2.0763089003852552e-317, 6.2198200831716199e-317, 2.0778266700492795e-317, 6.2210848912249734e-317, 6.218808236728937e-317, 6.2232350649156746e-317, 2.0780796316599503e-317, 6.2232350649156746e-317, 6.2226026608889978e-317, 6.2213378528356442e-317, 6.222349699278327e-317, 6.2208319296143027e-317, 6.2213378528356442e-317, 6.2220967376676563e-317, 2.3715151000379834e-322, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.2629095739590599e-314, 0, 6.2220967376676563e-317, 2.070237821729158e-317, 6.2229821033050038e-317, 2.0778266700492795e-317, 2.0732733610572066e-317, 6.222349699278327e-317, 2.0758029771639138e-317, 6.2203260063929613e-317, 2.0894629041401326e-317, 2.0870202435870935e-317, 2.0824432194440202e-317, 2.091338377331746e-317, 2.0899174445343065e-317, 2.091338377331746e-317, 2.0900360202893084e-317, 2.0876289324627699e-317, 2.089573574844801e-317, 2.0864747951140847e-317, 2.0876289324627699e-317, 2.0891427496016275e-317, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.5796245403451283e-312, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 10:41:43]
Fault Injection Successful after 2.1515703201293945s
[INFO -- 2018-09-15 10:41:43]
event type: exit
[EXCEPTION -- 2018-09-15 10:41:43]
exit code: no exit code available
