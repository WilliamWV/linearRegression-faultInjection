[INFO -- 2018-09-30 19:34:04]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-30 19:34:04]
Initialization strings:
[INFO -- 2018-09-30 19:34:04]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-30 19:34:04]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-30 19:34:04]
initSignal:0
[INFO -- 2018-09-30 19:34:04]
endSignal:10
[INFO -- 2018-09-30 19:34:04]
faultModel:1
[EXCEPTION -- 2018-09-30 19:34:05]
gdbException: Cannot access memory at address 0x55c555771540
[INFO -- 2018-09-30 19:34:05]
Backtrace BEGIN:
#0  0x0000555555555474 in partialDerivate (pos=0) at lreg.cpp:76
#1  0x0000555555555503 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#2  0x00005555555556ac in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:182

71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;
78	}
79	
80	/**

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd7d8
address max offset: 8
Memory content after  bitflip:0x110x000x000x000x000x000x000x00
frame name: adjust
symbol name: PD
symbol filename: lreg.cpp
symbol line: 85
value: 8.3991159793011913e-323
value address: 0x7fffffffd7d8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-09-30 19:34:05]
Fault Injection Successful after 1.5673534870147705s
[INFO -- 2018-09-30 19:34:05]
event type: exit
[EXCEPTION -- 2018-09-30 19:34:05]
exit code: no exit code available
