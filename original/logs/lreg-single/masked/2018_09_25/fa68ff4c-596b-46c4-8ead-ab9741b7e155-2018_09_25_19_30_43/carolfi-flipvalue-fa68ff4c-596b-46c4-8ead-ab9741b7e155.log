[INFO -- 2018-09-25 19:30:34]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-25 19:30:34]
Initialization strings:
[INFO -- 2018-09-25 19:30:34]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-25 19:30:34]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-25 19:30:34]
initSignal:0
[INFO -- 2018-09-25 19:30:34]
endSignal:2
[INFO -- 2018-09-25 19:30:34]
faultModel:0
[INFO -- 2018-09-25 19:30:36]
Backtrace BEGIN:
#0  0x0000555555555f01 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a140 <x>, __n=19) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x000055555555543b in partialDerivate (pos=2) at lreg.cpp:74
#2  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#3  0x00005555555556ac in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x100x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd938
address max offset: 4
Memory content after  bitflip:0x900x000x000x00
frame name: main
symbol name: sizeOfTraining
symbol filename: lreg.cpp
symbol line: 169
value: 144
value address: 0x7fffffffd938
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-09-25 19:30:36]
Fault Injection Successful after 2.2549760341644287s
[INFO -- 2018-09-25 19:30:42]
event type: exit
[INFO -- 2018-09-25 19:30:42]
exit code: 0
