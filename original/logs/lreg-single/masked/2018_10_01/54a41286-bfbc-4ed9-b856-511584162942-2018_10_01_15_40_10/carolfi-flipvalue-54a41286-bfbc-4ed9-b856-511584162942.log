[INFO -- 2018-10-01 15:40:02]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-01 15:40:02]
Initialization strings:
[INFO -- 2018-10-01 15:40:02]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-01 15:40:02]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-01 15:40:02]
initSignal:0
[INFO -- 2018-10-01 15:40:02]
endSignal:10
[INFO -- 2018-10-01 15:40:02]
faultModel:0
[INFO -- 2018-10-01 15:40:06]
Backtrace BEGIN:
#0  predict (v=16) at lreg.cpp:49
#1  0x000055555555526a in meanSquaredError () at lreg.cpp:61
#2  0x0000555555555661 in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

44	/**
45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0xa00x130x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575a190 
address max offset: 8
Memory content after  bitflip:0xa00x130x770x540x550x550x000x00
frame name: main
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 4, capacity -2097148 = {-40.751795523345002, -205.12019553922295, 0.63439200549348995, 3.8319632776014703}
value address: 0x55555575a180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-01 15:40:06]
Fault Injection Successful after 4.5595433712005615s
[INFO -- 2018-10-01 15:40:09]
event type: exit
[INFO -- 2018-10-01 15:40:09]
exit code: 0
