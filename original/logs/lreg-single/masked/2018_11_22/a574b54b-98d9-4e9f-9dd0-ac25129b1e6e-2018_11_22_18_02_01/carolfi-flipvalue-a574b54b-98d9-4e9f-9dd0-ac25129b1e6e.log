[INFO -- 2018-11-22 18:01:54]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-22 18:01:54]
Initialization strings:
[INFO -- 2018-11-22 18:01:54]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-22 18:01:54]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-22 18:01:54]
initSignal:0
[INFO -- 2018-11-22 18:01:54]
endSignal:3
[INFO -- 2018-11-22 18:01:54]
faultModel:0
[EXCEPTION -- 2018-11-22 18:01:56]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-22 18:01:57]
Backtrace BEGIN:
#0  std::_Vector_base<double, std::allocator<double> >::_Vector_base (this=0x7fffffffd880, __n=3, __a=...) at /usr/include/c++/7/bits/stl_vector.h:138
#1  0x0000555555555f35 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd880, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/stl_vector.h:328
#2  0x00005555555556db in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:126
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

133	      : _M_impl()
134	      { _M_create_storage(__n); }
135	
136	      _Vector_base(size_t __n, const allocator_type& __a)
137	      : _M_impl(__a)
138	      { _M_create_storage(__n); }
139	
140	#if __cplusplus >= 201103L
141	      _Vector_base(_Tp_alloc_type&& __a) noexcept
142	      : _M_impl(std::move(__a)) { }

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd940
address max offset: 8
Memory content after  bitflip:0x2d0x430x1c0xeb0xe20x360x4a0x3f
frame name: main
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 160
value: 0.00080000000000000004
value address: 0x7fffffffd940
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-22 18:01:57]
Fault Injection Successful after 3.2033989429473877s
[INFO -- 2018-11-22 18:01:59]
event type: exit
[INFO -- 2018-11-22 18:01:59]
exit code: 0
