[INFO -- 2018-10-02 18:50:45]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-02 18:50:45]
Initialization strings:
[INFO -- 2018-10-02 18:50:45]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-02 18:50:45]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-02 18:50:45]
initSignal:0
[INFO -- 2018-10-02 18:50:45]
endSignal:10
[INFO -- 2018-10-02 18:50:45]
faultModel:0
[INFO -- 2018-10-02 18:50:47]
Backtrace BEGIN:
#0  0x000055555555540b in partialDerivate (pos=1) at lreg.cpp:74
#1  0x00005555555554b3 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#2  0x000055555555565c in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

69		to the adjustment variable whose position in T is passed in pos
70	*/
71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;
78	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x1d0xba0xfd0x910x060x7f0x3c0x40
Fault Model: Single bit-flip
base address to flip value: 0x555555771360
address max offset: 8
Memory content after  bitflip:0x1d0xba0xfd0x900x060x7f0x3c0x40
frame name: partialDerivate
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 3, capacity 3 = {28.496193944878645, -1.4099062374929558, -3.7954378499593111}
value address: 0x55555575a180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-02 18:50:47]
Fault Injection Successful after 2.039268970489502s
[INFO -- 2018-10-02 18:50:52]
event type: exit
[INFO -- 2018-10-02 18:50:52]
exit code: 0
