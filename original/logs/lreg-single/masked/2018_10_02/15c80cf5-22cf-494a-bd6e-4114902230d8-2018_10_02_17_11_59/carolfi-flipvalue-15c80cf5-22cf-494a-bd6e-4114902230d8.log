[INFO -- 2018-10-02 17:11:50]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-02 17:11:50]
Initialization strings:
[INFO -- 2018-10-02 17:11:50]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-02 17:11:50]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-02 17:11:50]
initSignal:0
[INFO -- 2018-10-02 17:11:50]
endSignal:10
[INFO -- 2018-10-02 17:11:50]
faultModel:0
[INFO -- 2018-10-02 17:11:50]
Backtrace BEGIN:
#0  0x00005555555550b7 in equals (a=std::vector of length 2, capacity 2 = {...}, b=<error reading variable: Cannot access memory at address 0x2>) at lreg.cpp:36
#1  0x00005555555556f4 in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#2  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

31	
32	vector<double> x; // input of training set
33	vector<double> y; // observed values of training set inputs
34	vector<double> T; // the adjustment variables
35	
36	bool equals(vector<double> a, vector<double> b){
37		if (a.size() != b.size()) return false;
38		for (int i = 0; i<a.size(); i++){
39			if(a[i] != b[i]) return false;
40		}

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd810
address max offset: 8
Memory content after  bitflip:0xad0x430x1c0xeb0xe20x360x2a0x3f
frame name: train
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 105
value: 0.00020000000000000348
value address: 0x7fffffffd810
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-02 17:11:50]
Fault Injection Successful after 0.9513452053070068s
[INFO -- 2018-10-02 17:11:58]
event type: exit
[INFO -- 2018-10-02 17:11:58]
exit code: 0
