[INFO -- 2018-09-16 00:00:18]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-16 00:00:18]
Initialization strings:
[INFO -- 2018-09-16 00:00:18]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-16 00:00:18]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-16 00:00:18]
initSignal:0
[INFO -- 2018-09-16 00:00:18]
endSignal:2
[INFO -- 2018-09-16 00:00:18]
faultModel:0
[INFO -- 2018-09-16 00:00:19]
Backtrace BEGIN:
#0  0x0000555555555237 in predict (v=19) at lreg.cpp:50
#1  0x000055555555530a in meanSquaredError () at lreg.cpp:61
#2  0x00005555555556b1 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x400x160x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575a150 
address max offset: 8
Memory content after  bitflip:0x000x160x770x550x550x550x000x00
frame name: main
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 20, capacity 24 = {-10, -4, -4, 13, 1, 10, -1, -3, -21, -8, -19, -15, 4, 19, 18, 5, 11, 19, -24, -5}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-16 00:00:19]
Fault Injection Successful after 1.7897937297821045s
[INFO -- 2018-09-16 00:00:27]
event type: exit
[INFO -- 2018-09-16 00:00:27]
exit code: 0
