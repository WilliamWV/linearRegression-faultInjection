[INFO -- 2018-11-23 19:48:15]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 19:48:15]
Initialization strings:
[INFO -- 2018-11-23 19:48:15]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 19:48:15]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 19:48:15]
initSignal:0
[INFO -- 2018-11-23 19:48:15]
endSignal:3
[INFO -- 2018-11-23 19:48:15]
faultModel:0
[INFO -- 2018-11-23 19:48:17]
Backtrace BEGIN:
#0  0x00005555555556ad in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:126
#1  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

121			MSE = meanSquaredError();
122			if (MSE < bestMSE){
123				bestMSE = MSE;
124				bestT = T; 
125			}
126			if (equals(T, prevT) && stopsWhenStable){ // implement equals
127				break;		
128			}
129		}
130		T = bestT;

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x555555771530
address max offset: 8
Memory content after  bitflip:0x020x000x000x000x000x000x000x00
frame name: main
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 16, capacity 16 = {-15, -9, -1, 29, 5, -18, 31, -16, -18, -28, 25, -14, 7, -2, -17, 21}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-23 19:48:17]
Fault Injection Successful after 2.097464084625244s
[INFO -- 2018-11-23 19:48:17]
event type: exit
[INFO -- 2018-11-23 19:48:17]
exit code: 0
