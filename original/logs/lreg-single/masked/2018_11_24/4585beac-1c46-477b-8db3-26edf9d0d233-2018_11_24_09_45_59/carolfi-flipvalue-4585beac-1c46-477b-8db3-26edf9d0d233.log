[INFO -- 2018-11-24 09:45:57]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 09:45:57]
Initialization strings:
[INFO -- 2018-11-24 09:45:57]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 09:45:57]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-24 09:45:57]
initSignal:0
[INFO -- 2018-11-24 09:45:57]
endSignal:2
[INFO -- 2018-11-24 09:45:57]
faultModel:0
[INFO -- 2018-11-24 09:45:57]
Backtrace BEGIN:
#0  0x00005555555551ec in predict (v=-19) at lreg.cpp:50
#1  0x000055555555526a in meanSquaredError () at lreg.cpp:61
#2  0x0000555555555661 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x5555557715c0
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x000x100x00
frame name: main
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 12, capacity 16 = {-44, -23, -143, -8, 1, 1, -1319, -23, -1079, -503, -104, -1583}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-24 09:45:57]
Fault Injection Successful after 0.7295651435852051s
[INFO -- 2018-11-24 09:45:58]
event type: exit
[INFO -- 2018-11-24 09:45:58]
exit code: 0
