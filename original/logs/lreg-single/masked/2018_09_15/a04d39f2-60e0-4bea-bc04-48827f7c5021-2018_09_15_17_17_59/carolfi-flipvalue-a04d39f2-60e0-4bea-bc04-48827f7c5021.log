[INFO -- 2018-09-15 17:17:51]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 17:17:51]
Initialization strings:
[INFO -- 2018-09-15 17:17:51]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 17:17:51]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 17:17:51]
initSignal:0
[INFO -- 2018-09-15 17:17:51]
endSignal:2
[INFO -- 2018-09-15 17:17:51]
faultModel:0
[INFO -- 2018-09-15 17:17:52]
Backtrace BEGIN:
#0  0x00005555555552dc in meanSquaredError () at lreg.cpp:61
#1  0x00005555555556b1 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#2  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

56		Calculates the mean squared error of T
57	*/
58	double meanSquaredError(){
59		double error = 0;
60		for(int i = 0; i<x.size(); i++){
61			error+= ((predict(x[i]) - y[i]) * (predict(x[i]) - y[i]));	
62		}
63		error /= x.size();
64		return error;
65	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x5555557715e0
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x200x000x000x00
frame name: meanSquaredError
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 20, capacity 32 = {9, -12, -4, -2, 10, -15, 3, 12, 23, -9, -16, 17, 15, -3, 6, 0, 24, 1, -1, -15}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 17:17:52]
Fault Injection Successful after 1.0324335098266602s
[INFO -- 2018-09-15 17:17:58]
event type: exit
[INFO -- 2018-09-15 17:17:58]
exit code: 0
