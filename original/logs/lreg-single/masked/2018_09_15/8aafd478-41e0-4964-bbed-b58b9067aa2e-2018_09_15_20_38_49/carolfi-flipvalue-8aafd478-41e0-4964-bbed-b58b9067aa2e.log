[INFO -- 2018-09-15 20:38:41]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 20:38:41]
Initialization strings:
[INFO -- 2018-09-15 20:38:41]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 20:38:41]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 20:38:41]
initSignal:0
[INFO -- 2018-09-15 20:38:41]
endSignal:2
[INFO -- 2018-09-15 20:38:41]
faultModel:0
[INFO -- 2018-09-15 20:38:42]
Backtrace BEGIN:
#0  0x0000555555555503 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#1  0x00005555555556ac in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#2  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

82	*/
83	void adjust(double alpha){
84		
85		double PD;
86		for(int i = 0; i<T.size(); i++){
87			PD = partialDerivate(i);
88			// alpha is different from the canonical version because this works better
89			T[i]= T[i] - ((alpha / (sqrt( fabs(PD) ))) * PD); 
90		}
91	}

Backtrace END
Memory content before bitflip:0x01
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd81c
address max offset: 1
Memory content after  bitflip:0x09
frame name: train
symbol name: stopsWhenStable
symbol filename: lreg.cpp
symbol line: 105
value: 9
value address: 0x7fffffffd81c
Type: A boolean type.
Type sizeof: 1

[INFO -- 2018-09-15 20:38:42]
Fault Injection Successful after 1.8214385509490967s
[INFO -- 2018-09-15 20:38:49]
event type: exit
[INFO -- 2018-09-15 20:38:49]
exit code: 0
