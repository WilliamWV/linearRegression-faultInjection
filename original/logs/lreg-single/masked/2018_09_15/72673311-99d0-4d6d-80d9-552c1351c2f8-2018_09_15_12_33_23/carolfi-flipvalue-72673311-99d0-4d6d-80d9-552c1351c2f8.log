[INFO -- 2018-09-15 12:33:14]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 12:33:14]
Initialization strings:
[INFO -- 2018-09-15 12:33:14]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 12:33:14]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 12:33:14]
initSignal:0
[INFO -- 2018-09-15 12:33:14]
endSignal:2
[INFO -- 2018-09-15 12:33:14]
faultModel:0
[INFO -- 2018-09-15 12:33:15]
Backtrace BEGIN:
#0  predict (v=15) at lreg.cpp:49
#1  0x00005555555552ba in meanSquaredError () at lreg.cpp:61
#2  0x00005555555556b1 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

44	/**
45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x5555557716f0
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x020x000x00
frame name: train
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 20, capacity 32 = {-13, 1, -17, 14, 3, -14, 7, -7, 768, 331, 66, 1461, 883, 1461, 913, 408, 796, 262, 408, 687}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 12:33:15]
Fault Injection Successful after 1.649280071258545s
[INFO -- 2018-09-15 12:33:22]
event type: exit
[INFO -- 2018-09-15 12:33:22]
exit code: 0
