[INFO -- 2018-09-15 23:01:06]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 23:01:06]
Initialization strings:
[INFO -- 2018-09-15 23:01:06]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 23:01:06]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 23:01:06]
initSignal:0
[INFO -- 2018-09-15 23:01:06]
endSignal:2
[INFO -- 2018-09-15 23:01:06]
faultModel:0
[INFO -- 2018-09-15 23:01:07]
Backtrace BEGIN:
#0  0x0000555555555156 in equals (a=std::vector of length 2, capacity 2 = {...}, b=std::vector of length 2, capacity 2 = {...}) at lreg.cpp:38
#1  0x0000555555555744 in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#2  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

33	vector<double> y; // observed values of training set inputs
34	vector<double> T; // the adjustment variables
35	
36	bool equals(vector<double> a, vector<double> b){
37		if (a.size() != b.size()) return false;
38		for (int i = 0; i<a.size(); i++){
39			if(a[i] != b[i]) return false;
40		}
41		return true;
42	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x5555557713f0
address max offset: 8
Memory content after  bitflip:0x040x000x000x000x000x000x000x00
frame name: main
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 8, capacity 8 = {-12, -6, -6, 11, -1, 8, -3, -5}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 23:01:07]
Fault Injection Successful after 1.0320184230804443s
[INFO -- 2018-09-15 23:01:13]
event type: exit
[INFO -- 2018-09-15 23:01:13]
exit code: 0
