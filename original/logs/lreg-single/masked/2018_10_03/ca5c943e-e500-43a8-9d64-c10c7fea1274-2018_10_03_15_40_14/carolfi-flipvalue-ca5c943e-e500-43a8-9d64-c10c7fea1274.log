[INFO -- 2018-10-03 15:40:06]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-03 15:40:06]
Initialization strings:
[INFO -- 2018-10-03 15:40:06]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-03 15:40:06]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-03 15:40:06]
initSignal:0
[INFO -- 2018-10-03 15:40:06]
endSignal:10
[INFO -- 2018-10-03 15:40:06]
faultModel:0
[INFO -- 2018-10-03 15:40:07]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a160 <y>, __n=1) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x00005555555553eb in partialDerivate (pos=1) at lreg.cpp:74
#2  0x00005555555554b3 in adjust (alpha=0.00020000000000000001) at lreg.cpp:87
#3  0x000055555555565c in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Fliping a bit of the pointer
Memory content before bitflip:0x600xa10x750x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd748
address max offset: 8
Memory content after  bitflip:0x600xa10x750x550x550x550x000x04
frame name: std::vector<double, std::allocator<double> >::operator[]
symbol name: this
symbol filename: lreg.cpp
symbol line: 0
value: 0x55555575a160 <y>
value address: 0x7fffffffd748
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-10-03 15:40:07]
Fault Injection Successful after 1.0599403381347656s
[INFO -- 2018-10-03 15:40:13]
event type: exit
[INFO -- 2018-10-03 15:40:13]
exit code: 0
