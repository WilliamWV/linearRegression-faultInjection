[INFO -- 2018-09-15 23:53:57]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 23:53:57]
Initialization strings:
[INFO -- 2018-09-15 23:53:57]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 23:53:57]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 23:53:57]
initSignal:0
[INFO -- 2018-09-15 23:53:57]
endSignal:2
[INFO -- 2018-09-15 23:53:57]
faultModel:0
[INFO -- 2018-09-15 23:53:58]
Backtrace BEGIN:
#0  0x0000555555555ef2 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a180 <T>, __n=1) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x0000555555555217 in predict (v=13) at lreg.cpp:50
#2  0x00005555555553fc in partialDerivate (pos=1) at lreg.cpp:74
#3  0x0000555555555503 in adjust (alpha=0.00020000000000000001) at lreg.cpp:87
#4  0x00005555555556ac in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x300x130x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575a148 
address max offset: 8
Memory content after  bitflip:0x300x130x770x550x550x550x000x10
frame name: std::vector<double, std::allocator<double> >::operator[]
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 144115188075855880, capacity 8 = {-10, -4, -4, 13, 1, 10, -1, -3, 0, 1.6304166312761136e-322, -1.9943817831887625, 0.9999715969130315, 0, 1.6304166312761136e-322, -1.9943605561435895, 0.9999715969130315, 0, 2.4209216646221081e-322, 0, -6, -6, 11, 0, 4.001931731314097e-322, -12, -6, -6, 11, -1, 8, -3, -5, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 6.7257156368368892e-320, 0, 0, 0, 0, 0, 1.6304166312761136e-322, -1.9943605561435895, 0.9999715969130315, 0, 1.6304166312761136e-322, 4.6355706478263358e-310, 0.99997354847494824, 0, 1.6304166312761136e-322, 0, 0.9999715969130315, 0, 2.167614207999301e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 23:53:58]
Fault Injection Successful after 1.5593395233154297s
[INFO -- 2018-09-15 23:53:58]
event type: exit
[EXCEPTION -- 2018-09-15 23:53:58]
exit code: no exit code available
