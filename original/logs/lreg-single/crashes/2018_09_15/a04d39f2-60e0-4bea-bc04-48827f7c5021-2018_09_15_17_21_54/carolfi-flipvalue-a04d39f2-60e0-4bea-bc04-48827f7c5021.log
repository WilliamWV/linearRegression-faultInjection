[INFO -- 2018-09-15 17:21:45]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 17:21:45]
Initialization strings:
[INFO -- 2018-09-15 17:21:45]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 17:21:45]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 17:21:45]
initSignal:0
[INFO -- 2018-09-15 17:21:45]
endSignal:2
[INFO -- 2018-09-15 17:21:45]
faultModel:0
[EXCEPTION -- 2018-09-15 17:21:46]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-09-15 17:21:46]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0xc008000000000000) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x00005555555551f9 in predict (v=-3) at lreg.cpp:49
#2  0x00005555555553fc in partialDerivate (pos=0) at lreg.cpp:74
#3  0x0000555555555503 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#4  0x00005555555556ac in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x500x170x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575a170 
address max offset: 8
Memory content after  bitflip:0x500x170x770x550x510x550x000x00
frame name: std::vector<double, std::allocator<double> >::size
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 19, capacity -2147483616 = {4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.7007814271078155e-305, 4.6484574246538571e-305, 4.6794693915568012e-305, 4.6851016097611476e-305, 4.6794693915568012e-305, 4.5881022962418493e-305, 4.6342725788058737e-305, 4.5480509667887196e-305, 4.7024502325016959e-305, 4.5658515576567772e-305, 4.5480509667887196e-305, 4.6752973780721002e-305, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1.131959884853339e-72, 8.3003028501329419e-322, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 17:21:46]
Fault Injection Successful after 1.761866807937622s
[INFO -- 2018-09-15 17:21:53]
event type: exit
[EXCEPTION -- 2018-09-15 17:21:53]
exit code: no exit code available
