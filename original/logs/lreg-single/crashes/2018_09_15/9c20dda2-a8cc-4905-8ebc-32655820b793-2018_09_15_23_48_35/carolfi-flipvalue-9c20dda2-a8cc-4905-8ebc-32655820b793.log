[INFO -- 2018-09-15 23:48:33]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 23:48:33]
Initialization strings:
[INFO -- 2018-09-15 23:48:33]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 23:48:33]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 23:48:33]
initSignal:0
[INFO -- 2018-09-15 23:48:33]
endSignal:2
[INFO -- 2018-09-15 23:48:33]
faultModel:0
[EXCEPTION -- 2018-09-15 23:48:34]
gdbException: Cannot access memory at address 0x455555771360
[INFO -- 2018-09-15 23:48:34]
Backtrace BEGIN:
#0  0x0000555555555382 in meanSquaredError () at lreg.cpp:63
#1  0x00005555555556b1 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#2  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

58	double meanSquaredError(){
59		double error = 0;
60		for(int i = 0; i<x.size(); i++){
61			error+= ((predict(x[i]) - y[i]) * (predict(x[i]) - y[i]));	
62		}
63		error /= x.size();
64		return error;
65	
66	}
67	/**

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x210x000x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x555555771468
address max offset: 8
Memory content after  bitflip:0x250x000x000x000x000x000x000x00
frame name: train
symbol name: bestT
symbol filename: lreg.cpp
symbol line: 115
value: std::vector of length 3, capacity 3 = {-0.8532607212907769, 0.22994213682402112, 0.95895182490966857}
value address: 0x7fffffffd870
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 23:48:34]
Fault Injection Successful after 1.7479846477508545s
[INFO -- 2018-09-15 23:48:34]
event type: exit
[EXCEPTION -- 2018-09-15 23:48:34]
exit code: no exit code available
