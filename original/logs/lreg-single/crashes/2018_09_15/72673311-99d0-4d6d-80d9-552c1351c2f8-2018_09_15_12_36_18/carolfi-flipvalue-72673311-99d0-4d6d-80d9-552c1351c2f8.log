[INFO -- 2018-09-15 12:36:15]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 12:36:15]
Initialization strings:
[INFO -- 2018-09-15 12:36:15]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 12:36:15]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 12:36:15]
initSignal:0
[INFO -- 2018-09-15 12:36:15]
endSignal:2
[INFO -- 2018-09-15 12:36:15]
faultModel:0
[EXCEPTION -- 2018-09-15 12:36:16]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[EXCEPTION -- 2018-09-15 12:36:16]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-09-15 12:36:17]
Backtrace BEGIN:
#0  0x0000555555555508 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#1  0x00005555555556ac in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#2  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

82	*/
83	void adjust(double alpha){
84		
85		double PD;
86		for(int i = 0; i<T.size(); i++){
87			PD = partialDerivate(i);
88			// alpha is different from the canonical version because this works better
89			T[i]= T[i] - ((alpha / (sqrt( fabs(PD) ))) * PD); 
90		}
91	}

Backtrace END
Memory content before bitflip:0x030x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd7e4
address max offset: 4
Memory content after  bitflip:0x030x000x000x40
frame name: adjust
symbol name: i
symbol filename: lreg.cpp
symbol line: 86
value: 1073741827
value address: 0x7fffffffd7e4
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-09-15 12:36:17]
Fault Injection Successful after 2.399782180786133s
[INFO -- 2018-09-15 12:36:17]
event type: exit
[EXCEPTION -- 2018-09-15 12:36:17]
exit code: no exit code available
