[INFO -- 2018-09-15 19:05:03]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 19:05:03]
Initialization strings:
[INFO -- 2018-09-15 19:05:03]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 19:05:03]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 19:05:03]
initSignal:0
[INFO -- 2018-09-15 19:05:03]
endSignal:2
[INFO -- 2018-09-15 19:05:03]
faultModel:0
[EXCEPTION -- 2018-09-15 19:05:03]
gdbException: Cannot access memory at address 0x555d557713b0
[INFO -- 2018-09-15 19:05:04]
Backtrace BEGIN:
#0  0x00007ffff76b4990 in *ABS*+0x2d7c0@plt () from /lib/x86_64-linux-gnu/libm.so.6
#1  0x00007ffff76b7b14 in __pow (x=-6, y=0) at w_pow_compat.c:30
#2  0x0000555555555f39 in std::pow<double, int> (__x=-6, __y=0) at /usr/include/c++/7/cmath:418
#3  0x0000555555555451 in partialDerivate (pos=0) at lreg.cpp:74
#4  0x0000555555555503 in adjust (alpha=0.00020000000000000001) at lreg.cpp:87
#5  0x00005555555556ac in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#6  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

148		4° Line : values y of the training set
149		5° Line : set z of new inputs to predict*/
150	
151	
152	int main(int argc, char* argv[]){
153		
154		if (argc != 3) {
155			cout << "Wrong number of arguments" <<endl;
156			cout <<"  Use as : " << endl; 
157			cout <<'\t'<<argv[0]<<" <input file> "<<"<output file>"<<endl;

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd754
address max offset: 4
Memory content after  bitflip:0x000x200x000x00
frame name: std::pow<double, int>
symbol name: __y
symbol filename: /usr/include/c++/7/cmath
symbol line: 415
value: 8192
value address: 0x7fffffffd754
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-09-15 19:05:04]
Fault Injection Successful after 1.0028057098388672s
[INFO -- 2018-09-15 19:05:04]
event type: exit
[EXCEPTION -- 2018-09-15 19:05:04]
exit code: no exit code available
