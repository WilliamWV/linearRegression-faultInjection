[INFO -- 2018-09-15 23:12:36]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 23:12:36]
Initialization strings:
[INFO -- 2018-09-15 23:12:36]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 23:12:36]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 23:12:36]
initSignal:0
[INFO -- 2018-09-15 23:12:36]
endSignal:2
[INFO -- 2018-09-15 23:12:36]
faultModel:0
[EXCEPTION -- 2018-09-15 23:12:37]
gdbException: Cannot access memory at address 0x5d55557712f0
[INFO -- 2018-09-15 23:12:37]
Backtrace BEGIN:
#0  0x0000555555555ecc in std::vector<double, std::allocator<double> >::size (this=0x55555575a180 <T>) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x00005555555554eb in adjust (alpha=0.00020000000000000001) at lreg.cpp:86
#2  0x00005555555556ac in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x010x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd7e4
address max offset: 4
Memory content after  bitflip:0x010x800x000x00
frame name: adjust
symbol name: i
symbol filename: lreg.cpp
symbol line: 86
value: 32769
value address: 0x7fffffffd7e4
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-09-15 23:12:37]
Fault Injection Successful after 1.6438024044036865s
[INFO -- 2018-09-15 23:12:37]
event type: exit
[EXCEPTION -- 2018-09-15 23:12:37]
exit code: no exit code available
