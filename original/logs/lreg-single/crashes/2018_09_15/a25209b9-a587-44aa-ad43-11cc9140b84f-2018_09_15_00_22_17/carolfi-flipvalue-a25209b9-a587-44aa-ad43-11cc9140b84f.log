[INFO -- 2018-09-15 00:22:14]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 00:22:14]
Initialization strings:
[INFO -- 2018-09-15 00:22:14]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 00:22:14]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 00:22:14]
initSignal:0
[INFO -- 2018-09-15 00:22:14]
endSignal:2
[INFO -- 2018-09-15 00:22:14]
faultModel:0
[EXCEPTION -- 2018-09-15 00:22:15]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-09-15 00:22:15]
Backtrace BEGIN:
#0  __pow (x=5, y=2) at w_pow_compat.c:55
#1  0x0000555555555f39 in std::pow<double, int> (__x=5, __y=2) at /usr/include/c++/7/cmath:418
#2  0x0000555555555237 in predict (v=5) at lreg.cpp:50
#3  0x00005555555553fc in partialDerivate (pos=2) at lreg.cpp:74
#4  0x0000555555555503 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#5  0x00005555555556ac in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#6  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

50	in w_pow_compat.c

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000xc00x520xc0
Fault Model: Single bit-flip
base address to flip value: 0x5555557716d0
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000xc40x520xc0
frame name: predict
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 4, capacity 16 = {-75.0625, -91, -63, -87}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 00:22:15]
Fault Injection Successful after 1.2581496238708496s
[INFO -- 2018-09-15 00:22:16]
event type: exit
[EXCEPTION -- 2018-09-15 00:22:16]
exit code: no exit code available
