[INFO -- 2018-09-15 16:27:45]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 16:27:45]
Initialization strings:
[INFO -- 2018-09-15 16:27:45]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 16:27:45]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 16:27:45]
initSignal:0
[INFO -- 2018-09-15 16:27:45]
endSignal:2
[INFO -- 2018-09-15 16:27:45]
faultModel:0
[INFO -- 2018-09-15 16:27:47]
Backtrace BEGIN:
#0  0x0000555555555ecc in std::vector<double, std::allocator<double> >::size (this=0x55555575a180 <T>) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x00005555555551f9 in predict (v=-9) at lreg.cpp:49
#2  0x00005555555552ba in meanSquaredError () at lreg.cpp:61
#3  0x00005555555556b1 in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:121
#4  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x700x190x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575a160 
address max offset: 8
Memory content after  bitflip:0x720x190x770x550x550x550x000x00
frame name: meanSquaredError
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 35, capacity 63 = {1.0426638518486962e-309, 1.0426638518486962e-309, 1.0426638518486962e-309, 1.0426638518486962e-309, 1.0426638518486962e-309, 1.0426638518486962e-309, 1.0426638518486962e-309, 1.0426638518486962e-309, 1.0457467138587579e-309, 1.0447487127133196e-309, 1.0453402190400512e-309, 1.0454476450769688e-309, 1.0453402190400512e-309, 1.0435975299967209e-309, 1.0444781582499715e-309, 1.0426638518486962e-309, 1.0457785437956224e-309, 1.0431731308385279e-309, 1.0426638518486962e-309, 1.04526064419789e-309, 3.5181525603233002e-310, 1.0426638518486962e-309, 1.0477687333929506e-309, 3.493123371297483e-310, 1.0460570557431866e-309, 3.4847414879231702e-310, 3.5211836572407268e-310, 1.0468868721440989e-309, 3.5301305945235372e-310, 3.5295681827484708e-310, 3.5244191827565702e-310, 3.5048938167004935e-310, 3.5307310322973967e-310, 3.528096669846943e-310, 1.0480962076994514e-309, 1.0482313916793573e-309, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9.4565638986556059e-308, 1.3764285392882381e-21, -11945022105.24099, -1.5131193194420028e-93, 2.6100862314444246e+54, 1.0432327396354748e-309, 9.4565638986556059e-308, 1.3764285392882381e-21, -11945022105.24099, -1.5131193194420028e-93, 2.6100862314444246e+54, 1.0432327396354748e-309, 9.4565638986556059e-308, 1.617269844780878e-173, -2.1771802622054243e+257, -2.012517094013338e+182, 1.708766326531541e+205, 1.0432430368206293e-309, 9.4565638986556059e-308, 0, -11811160064, -1.5131193194420028e-93, 2.6100862314444246e+54, 1.0432327396354748e-309, -3.6545246025164963e-136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 16:27:47]
Fault Injection Successful after 2.3585927486419678s
[INFO -- 2018-09-15 16:27:56]
event type: exit
[EXCEPTION -- 2018-09-15 16:27:56]
exit code: no exit code available
