[INFO -- 2018-09-15 14:56:13]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 14:56:13]
Initialization strings:
[INFO -- 2018-09-15 14:56:13]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 14:56:13]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 14:56:13]
initSignal:0
[INFO -- 2018-09-15 14:56:13]
endSignal:2
[INFO -- 2018-09-15 14:56:13]
faultModel:0
[INFO -- 2018-09-15 14:56:14]
Backtrace BEGIN:
#0  0x0000555555555241 in predict (v=1) at lreg.cpp:50
#1  0x00005555555553fc in partialDerivate (pos=1) at lreg.cpp:74
#2  0x0000555555555503 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#3  0x00005555555556ac in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x400x150x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575a140 
address max offset: 8
Memory content after  bitflip:0x410x150x770x550x550x550x000x00
frame name: train
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 19, capacity 31 = {1.7948349678974105e-307, 4.6014527393928925e-305, 4.574751853090806e-305, 4.5569512622227484e-305, 1.7957041373733899e-307, 4.6081279609684141e-305, 1.7835357647096786e-307, 1.7974424763253486e-307, 1.8039612473951939e-307, 4.5947775178173709e-305, 4.6103530348269213e-305, 1.8013537389672558e-307, 1.8000499847532867e-307, 4.5658515576567772e-305, 1.7904891205175136e-307, 0, 1.8043958321331836e-307, 1.7765824089018436e-307, 4.5480509667887196e-305, 4.6081279609684141e-305, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8.4425425152863546e-227, 4.9406564584124654e-324, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.7007814271078155e-305, 4.6484574246538571e-305, 4.6794693915568012e-305, 4.6851016097611476e-305, 4.6794693915568012e-305, 4.5881022962418493e-305, 4.6342725788058737e-305, 4.5480509667887196e-305, 4.7024502325016959e-305, 4.5658515576567772e-305, 4.5480509667887196e-305, 4.6752973780721002e-305, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1.131959884853339e-72, 8.3003028501329419e-322, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 14:56:14]
Fault Injection Successful after 1.5787932872772217s
[INFO -- 2018-09-15 14:56:15]
event type: exit
[EXCEPTION -- 2018-09-15 14:56:15]
exit code: no exit code available
