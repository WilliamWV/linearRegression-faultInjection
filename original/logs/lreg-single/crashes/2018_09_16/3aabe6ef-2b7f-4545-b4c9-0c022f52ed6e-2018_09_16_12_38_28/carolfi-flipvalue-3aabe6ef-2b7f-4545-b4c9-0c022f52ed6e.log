[INFO -- 2018-09-16 12:38:26]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-16 12:38:26]
Initialization strings:
[INFO -- 2018-09-16 12:38:26]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-16 12:38:26]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-16 12:38:26]
initSignal:0
[INFO -- 2018-09-16 12:38:26]
endSignal:2
[INFO -- 2018-09-16 12:38:26]
faultModel:0
[EXCEPTION -- 2018-09-16 12:38:27]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-09-16 12:38:27]
Backtrace BEGIN:
#0  0x0000555555555543 in adjust (alpha=0.00020000000000000001) at lreg.cpp:89
#1  0x00005555555556ac in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#2  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

84		
85		double PD;
86		for(int i = 0; i<T.size(); i++){
87			PD = partialDerivate(i);
88			// alpha is different from the canonical version because this works better
89			T[i]= T[i] - ((alpha / (sqrt( fabs(PD) ))) * PD); 
90		}
91	}
92	
93	/**

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd7d8
address max offset: 8
Memory content after  bitflip:0x2d0x430x0c0xeb0xe20x360x2a0x3f
frame name: adjust
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 83
value: 0.0001999999999715783
value address: 0x7fffffffd7d8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-09-16 12:38:27]
Fault Injection Successful after 1.3622448444366455s
[INFO -- 2018-09-16 12:38:27]
event type: exit
[EXCEPTION -- 2018-09-16 12:38:27]
exit code: no exit code available
