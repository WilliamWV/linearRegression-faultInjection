[INFO -- 2018-10-03 17:04:47]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-03 17:04:47]
Initialization strings:
[INFO -- 2018-10-03 17:04:47]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-03 17:04:47]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-03 17:04:47]
initSignal:0
[INFO -- 2018-10-03 17:04:47]
endSignal:10
[INFO -- 2018-10-03 17:04:47]
faultModel:0
[INFO -- 2018-10-03 17:04:50]
Backtrace BEGIN:
#0  std::pow<double, int> (__x=23, __y=2) at /usr/include/c++/7/cmath:418
#1  0x00005555555551e7 in predict (v=23) at lreg.cpp:50
#2  0x000055555555526a in meanSquaredError () at lreg.cpp:61
#3  0x0000555555555661 in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:121
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

413	    inline _GLIBCXX_CONSTEXPR
414	    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
415	    pow(_Tp __x, _Up __y)
416	    {
417	      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
418	      return pow(__type(__x), __type(__y));
419	    }
420	
421	  using ::sin;
422	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x700x190x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575a160 
address max offset: 8
Memory content after  bitflip:0x700x110x770x550x550x550x000x00
frame name: std::pow<double, int>
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 292, capacity 320 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4.001931731314097e-322, 4.6355706478192213e-310, 1.5810100666919889e-322, 3.0000019073486324, 1.0000498041218393, -10, -4, 2, 2, 0, 1.6304166312761136e-322, 4.6355706478231738e-310, -2.9433831330198497, -3.9907217789032861, 1.6304166312761136e-322, 4.6355706478097352e-310, -2.9433948396780578, -3.9908218983676815, 2.4209216646221081e-322, -25.121494298994651, -228.68592090430627, -2.4672292282702668, 5.0358575760478734, 0, 4.001931731314097e-322, 4.6355706478057827e-310, 1.5810100666919889e-322, 5.0000038146972647, 1.2136148401522155e-312, -21.00000001238384, -9, 3, 3, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 1.1286365811261893e-312, 0, 0, 0, 0, 0, 1.6304166312761136e-322, 4.6355706478247548e-310, -2.9433948396780578, -3.9908218983676815, 1.6304166312761136e-322, 4.6355706478263358e-310, -2.9433831330198497, -3.9907217789032861, 1.6304166312761136e-322, 0, -2.9433948396780578, -3.9908218983676815, 7.1639518646980749e-322, 0, -9, 5, 1, -21, -9, 3, 3, -1194, -34, -706, -556, -1264, -510, -1984, -16, 0, 1.3487992131466031e-321, 0, -4, 3, 1, -10, -4, 2, 2, 17, -3, 13, -12, -18, 11, 22, -2, 21, -5, 11, -17, 7, -26, 26, -24, -32, -24, 29, -30, -1, 27, 27, -29, 0, 1.3487992131466031e-321, 4.6355706478350314e-310, -9, 5, 1, -21, -9, 3, 3, -1194, -34, -706, -556, -1264, -510, -1984, -16, -1810, -94, -510, -1126, 1931, -85255, 90661, -66889, -159841, -66889, 125395, -131491, -5, 101411, 101411, -118669, 0, 2.6136072665001942e-321, 8, -4, 3, 1, -10, -4, 2, 2, 17, -3...}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-03 17:04:50]
Fault Injection Successful after 3.777667760848999s
[INFO -- 2018-10-03 17:04:54]
event type: exit
[EXCEPTION -- 2018-10-03 17:04:54]
exit code: no exit code available
