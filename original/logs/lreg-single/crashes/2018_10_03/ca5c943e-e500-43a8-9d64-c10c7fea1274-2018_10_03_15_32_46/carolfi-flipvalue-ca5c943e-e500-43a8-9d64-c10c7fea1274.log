[INFO -- 2018-10-03 15:32:44]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-03 15:32:44]
Initialization strings:
[INFO -- 2018-10-03 15:32:44]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-03 15:32:44]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-03 15:32:44]
initSignal:0
[INFO -- 2018-10-03 15:32:44]
endSignal:10
[INFO -- 2018-10-03 15:32:44]
faultModel:0
[INFO -- 2018-10-03 15:32:45]
Backtrace BEGIN:
#0  0x00005555555551fe in predict (v=15) at lreg.cpp:49
#1  0x000055555555526a in meanSquaredError () at lreg.cpp:61
#2  0x0000555555555661 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

44	/**
45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x400x160x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575a150 
address max offset: 8
Memory content after  bitflip:0x400x160x770x550x550x540x000x00
frame name: train
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 20, capacity -137438953440 = {9, -2, -8, -2, -12, 7, -9, 13, -2, -2, -17, 1, 13, -14, -5, 3, 13, 19, -16, 15}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-03 15:32:45]
Fault Injection Successful after 1.422771692276001s
[INFO -- 2018-10-03 15:32:45]
event type: exit
[EXCEPTION -- 2018-10-03 15:32:45]
exit code: no exit code available
