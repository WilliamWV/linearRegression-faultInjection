[INFO -- 2018-09-30 20:38:21]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-30 20:38:21]
Initialization strings:
[INFO -- 2018-09-30 20:38:21]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-30 20:38:21]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-30 20:38:21]
initSignal:0
[INFO -- 2018-09-30 20:38:21]
endSignal:10
[INFO -- 2018-09-30 20:38:21]
faultModel:0
[EXCEPTION -- 2018-09-30 20:38:24]
gdbException: Cannot access memory at address 0x555455771970
[INFO -- 2018-09-30 20:38:24]
Backtrace BEGIN:
#0  0x0000555555555217 in predict (v=-15) at lreg.cpp:50
#1  0x00005555555553fc in partialDerivate (pos=2) at lreg.cpp:74
#2  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#3  0x00005555555556ac in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:182

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x2e0xc0
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd728
address max offset: 8
Memory content after  bitflip:0x000x000x020x000x000x000x2e0xc0
frame name: predict
symbol name: v
symbol filename: lreg.cpp
symbol line: 47
value: -15.000000000232831
value address: 0x7fffffffd728
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-09-30 20:38:24]
Fault Injection Successful after 3.427861213684082s
[INFO -- 2018-09-30 20:38:24]
event type: exit
[EXCEPTION -- 2018-09-30 20:38:24]
exit code: no exit code available
