[INFO -- 2018-11-23 18:20:11]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 18:20:11]
Initialization strings:
[INFO -- 2018-11-23 18:20:11]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 18:20:11]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 18:20:11]
initSignal:0
[INFO -- 2018-11-23 18:20:11]
endSignal:3
[INFO -- 2018-11-23 18:20:11]
faultModel:0
[EXCEPTION -- 2018-11-23 18:20:12]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-23 18:20:12]
Backtrace BEGIN:
#0  0x0000555555556665 in std::vector<double, std::allocator<double> >::begin (this=0x55555575a180 <T>) at /usr/include/c++/7/bits/stl_vector.h:572
#1  0x0000555555555f72 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd880, __x=std::vector of length 1, capacity 1 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#2  0x00005555555556db in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:126
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

567	       *  Returns a read-only (constant) iterator that points to the
568	       *  first element in the %vector.  Iteration is done in ordinary
569	       *  element order.
570	       */
571	      const_iterator
572	      begin() const _GLIBCXX_NOEXCEPT
573	      { return const_iterator(this->_M_impl._M_start); }
574	
575	      /**
576	       *  Returns a read/write iterator that points one past the last

Backtrace END
Memory content before bitflip:0x200x4e0x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd920
address max offset: 4
Memory content after  bitflip:0x200x4e0x020x00
frame name: main
symbol name: iterations
symbol filename: lreg.cpp
symbol line: 161
value: 151072
value address: 0x7fffffffd920
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-23 18:20:12]
Fault Injection Successful after 1.7085936069488525s
[INFO -- 2018-11-23 18:20:12]
event type: exit
[EXCEPTION -- 2018-11-23 18:20:12]
exit code: no exit code available
