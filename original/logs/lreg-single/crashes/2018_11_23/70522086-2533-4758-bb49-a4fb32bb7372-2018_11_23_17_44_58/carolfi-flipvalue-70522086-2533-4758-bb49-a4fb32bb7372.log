[INFO -- 2018-11-23 17:44:56]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 17:44:56]
Initialization strings:
[INFO -- 2018-11-23 17:44:56]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 17:44:56]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 17:44:56]
initSignal:0
[INFO -- 2018-11-23 17:44:56]
endSignal:3
[INFO -- 2018-11-23 17:44:56]
faultModel:0
[INFO -- 2018-11-23 17:44:57]
Backtrace BEGIN:
#0  0x00005555555566de in std::vector<double, std::allocator<double> >::end (this=0x55555575a180 <T>) at /usr/include/c++/7/bits/stl_vector.h:591
#1  0x0000555555556230 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd840, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#2  0x0000555555555641 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:119
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

586	       *  the last element in the %vector.  Iteration is done in
587	       *  ordinary element order.
588	       */
589	      const_iterator
590	      end() const _GLIBCXX_NOEXCEPT
591	      { return const_iterator(this->_M_impl._M_finish); }
592	
593	      /**
594	       *  Returns a read/write reverse iterator that points to the
595	       *  last element in the %vector.  Iteration is done in reverse

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa00x130x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575a188 
address max offset: 8
Memory content after  bitflip:0xa00x130x370x550x550x550x000x00
frame name: std::vector<double, std::allocator<double> >::operator=
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length -524284, capacity 4 = {0.21124672927610608, -1.0180917277345185, -1.9460058373337179, -3.9701674160791982, 0, 4.001931731314097e-322, 4.6355706478057827e-310, 1.5810100666919889e-322, -143.00012207031247, 2.9988444211833614e-310, 1.00000000077399, 1, -1319, -23, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 1.124676287488633e-312, 0, 0, 0, 0, 0, 1.6304166312761136e-322, 4.6355706478247548e-310, -0.018636480386081677, -2.9944537928979051, 1.6304166312761136e-322, 4.6355706478263358e-310, -0.018629603636086151, -2.9945863353366149, 1.6304166312761136e-322, 0, -0.018636480386081677, -2.9944537928979051, 7.1639518646980749e-322, -15, -9, -1, 29, 5, -18, 31, -16, -18, -28, 25, -14, 7, -2, -17, 21, 0, 7.1639518646980749e-322, 13145, 2813, 13, -99407, -575, 22793, -121267, 15973, 22793, 86413, -63895, 10673, -1507, 41, 19181, -38047, 0, 2.4209216646221081e-322, 0.21096559861425151, -1.020799960716007, -1.9554353210487225, -4.044787702378053, 0, 2.4209216646221081e-322, 0.21096559861425151, -1.020799960716007, -1.9554353210487225, -4.044787702378053, 0, 2.4209216646221081e-322, 4.6355706478492604e-310, -1.020799960716007, -1.9554353210487225, -4.044787702378053, 0, 2.4209216646221081e-322, 0, -1.0180917277345185, -1.9460058373337179, -3.9701674160791982, 0, 2.1438990569989211e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-23 17:44:57]
Fault Injection Successful after 1.9234600067138672s
[INFO -- 2018-11-23 17:44:58]
event type: exit
[EXCEPTION -- 2018-11-23 17:44:58]
exit code: no exit code available
