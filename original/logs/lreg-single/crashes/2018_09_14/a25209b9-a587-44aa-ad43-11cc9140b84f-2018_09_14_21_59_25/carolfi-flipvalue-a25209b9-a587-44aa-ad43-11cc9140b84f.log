[INFO -- 2018-09-14 21:59:13]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-14 21:59:13]
Initialization strings:
[INFO -- 2018-09-14 21:59:13]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-14 21:59:13]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-14 21:59:13]
initSignal:0
[INFO -- 2018-09-14 21:59:13]
endSignal:2
[INFO -- 2018-09-14 21:59:13]
faultModel:0
[EXCEPTION -- 2018-09-14 21:59:15]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-09-14 21:59:15]
Backtrace BEGIN:
#0  0x00005555555551d2 in predict (v=4.6355705386817505e-310) at lreg.cpp:47
#1  0x00005555555553fc in partialDerivate (pos=2) at lreg.cpp:74
#2  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#3  0x00005555555556ac in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

42	}
43	
44	/**
45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x700x1b0x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575a170 
address max offset: 8
Memory content after  bitflip:0x500x1b0x770x550x550x550x000x00
frame name: adjust
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 35, capacity 59 = {1.5930510393599151e-314, 5.3159983667095704e-315, 1.5909787778453006e-314, 5.3101701311997171e-315, 5.3101701311997171e-315, 5.3127604580929853e-315, 1.5927272484982566e-314, 0, 5.3271691514367894e-315, 5.3247407199743505e-315, 5.3278167331601064e-315, 1.594273349862676e-314, 1.5940709805741395e-314, 5.3208552296344482e-315, 1.5936824315401492e-314, 5.3265215697134723e-315, 1.5941762126041785e-314, 1.5943057289488419e-314, 1.5940709805741395e-314, 1.594273349862676e-314, 5.3754724871963763e-315, 1.5992482668092337e-314, 1.5982544280712105e-314, 1.5995401924129981e-314, 1.5990251230484208e-314, 5.3730813675715114e-315, 5.3797707792646919e-315, 5.3819111506929795e-315, 5.3779757004349698e-315, 5.3388660963142034e-315, 1.5936500524539834e-314, 1.5997138031284215e-314, 1.5994618059338915e-314, 5.3718225673564112e-315, 1.5963987333155314e-314, 5.3700594249300363e-315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0397779375729834e-312, -3.6135897713696741e-238, 6.6556319269963346e+157, -9.5208184971549485e-253, 6.04052223748829e-186, 1.5919414746375352e-314, 1.0397779375729834e-312, -3.6135897713696741e-238, 6.6556319269963346e+157, -9.5208184971549485e-253, 6.04052223748829e-186, 1.5919414746375352e-314, 1.0397779375729834e-312, 5.175964796394639e+103, 1.1681751230952935e+182, 3.8154501373945738e+304, -6.3432309966999064e-304, 1.5919293453259298e-314, 1.0397779375729834e-312, 0, 6.6556306189985326e+157, -9.5208184971549485e-253, 6.04052223748829e-186, 1.5919414746375352e-314, 8.8990137485710625e-310, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-14 21:59:15]
Fault Injection Successful after 2.4712748527526855s
[INFO -- 2018-09-14 21:59:24]
event type: exit
[EXCEPTION -- 2018-09-14 21:59:24]
exit code: no exit code available
