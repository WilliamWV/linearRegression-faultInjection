[INFO -- 2018-10-04 19:42:03]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-04 19:42:03]
Initialization strings:
[INFO -- 2018-10-04 19:42:03]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-04 19:42:03]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-04 19:42:03]
initSignal:0
[INFO -- 2018-10-04 19:42:03]
endSignal:10
[INFO -- 2018-10-04 19:42:03]
faultModel:0
[EXCEPTION -- 2018-10-04 19:42:08]
gdbException: Cannot access memory at address 0x555755771760
[INFO -- 2018-10-04 19:42:08]
Backtrace BEGIN:
#0  predict (v=1) at lreg.cpp:52
#1  0x00005555555553ac in partialDerivate (pos=1) at lreg.cpp:74
#2  0x00005555555554b3 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#3  0x000055555555565c in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}
55	/**
56		Calculates the mean squared error of T

Backtrace END
Memory content before bitflip:0xf90x8c0xff0xe10x620x700x6d0x40
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd738
address max offset: 8
Memory content after  bitflip:0xf90x8c0xff0xe10x620x700x6d0x48
frame name: predict
symbol name: val
symbol filename: lreg.cpp
symbol line: 48
value: 8.0140604840929869e+40
value address: 0x7fffffffd738
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-04 19:42:08]
Fault Injection Successful after 5.161760091781616s
[INFO -- 2018-10-04 19:42:08]
event type: exit
[EXCEPTION -- 2018-10-04 19:42:08]
exit code: no exit code available
