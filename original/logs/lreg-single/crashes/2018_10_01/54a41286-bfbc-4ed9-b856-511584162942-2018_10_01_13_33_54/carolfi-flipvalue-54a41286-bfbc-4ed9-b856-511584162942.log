[INFO -- 2018-10-01 13:33:49]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-01 13:33:49]
Initialization strings:
[INFO -- 2018-10-01 13:33:49]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-01 13:33:49]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-01 13:33:49]
initSignal:0
[INFO -- 2018-10-01 13:33:49]
endSignal:10
[INFO -- 2018-10-01 13:33:49]
faultModel:0
[EXCEPTION -- 2018-10-01 13:33:53]
gdbException: Cannot access memory at address 0x555555371760
[INFO -- 2018-10-01 13:33:53]
Backtrace BEGIN:
#0  0x0000555555555d00 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a160 <y>, __n=21) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x00005555555552a9 in meanSquaredError () at lreg.cpp:61
#2  0x0000555555555661 in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Memory content before bitflip:0x150x000x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd7a0
address max offset: 8
Memory content after  bitflip:0x150x000x000x000x000x000x000x80
frame name: std::vector<double, std::allocator<double> >::operator[]
symbol name: __n
symbol filename: /usr/include/c++/7/bits/stl_vector.h
symbol line: 795
value: 9223372036854775829
value address: 0x7fffffffd7a0
Type: The type is an integer type.
Type sizeof: 8

[INFO -- 2018-10-01 13:33:53]
Fault Injection Successful after 4.315476655960083s
[INFO -- 2018-10-01 13:33:53]
event type: exit
[EXCEPTION -- 2018-10-01 13:33:53]
exit code: no exit code available
