[INFO -- 2018-11-23 21:15:00]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 21:15:00]
Initialization strings:
[INFO -- 2018-11-23 21:15:00]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 21:15:00]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 21:15:00]
initSignal:0
[INFO -- 2018-11-23 21:15:00]
endSignal:3
[INFO -- 2018-11-23 21:15:00]
faultModel:0
[INFO -- 2018-11-23 21:15:01]
Backtrace BEGIN:
#0  0x000055555555669d in std::vector<double, std::allocator<double> >::begin (this=0x55555575a180 <T>) at /usr/include/c++/7/bits/stl_vector.h:573
#1  0x000055555555623f in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd840, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#2  0x0000555555555641 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:119
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

568	       *  first element in the %vector.  Iteration is done in ordinary
569	       *  element order.
570	       */
571	      const_iterator
572	      begin() const _GLIBCXX_NOEXCEPT
573	      { return const_iterator(this->_M_impl._M_start); }
574	
575	      /**
576	       *  Returns a read/write iterator that points one past the last
577	       *  element in the %vector.  Iteration is done in ordinary

Backtrace END
Memory content before bitflip:0x010x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd930
address max offset: 4
Memory content after  bitflip:0x030x000x000x00
frame name: main
symbol name: i
symbol filename: lreg.cpp
symbol line: 159
value: 3
value address: 0x7fffffffd930
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-23 21:15:01]
Fault Injection Successful after 1.7727899551391602s
[INFO -- 2018-11-23 21:15:02]
event type: exit
[INFO -- 2018-11-23 21:15:02]
exit code: 0
