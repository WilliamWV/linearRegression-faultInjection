[INFO -- 2018-10-01 17:51:11]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-01 17:51:11]
Initialization strings:
[INFO -- 2018-10-01 17:51:11]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-01 17:51:11]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-01 17:51:11]
initSignal:0
[INFO -- 2018-10-01 17:51:11]
endSignal:10
[INFO -- 2018-10-01 17:51:11]
faultModel:2
[INFO -- 2018-10-01 17:51:18]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x55555575a140 <x>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x0000555555555429 in partialDerivate (pos=1) at lreg.cpp:76
#2  0x00005555555554b3 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#3  0x000055555555565c in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd810
address max offset: 8
Memory content after  bitflip:0x7c0x380xbe0x9f0xe20x490xb70x50
frame name: train
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 105
value: 6.9033914888895958e+80
value address: 0x7fffffffd810
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-01 17:51:18]
Fault Injection Successful after 7.211389541625977s
