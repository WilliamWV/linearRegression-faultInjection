[INFO -- 2018-09-30 20:18:33]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-30 20:18:33]
Initialization strings:
[INFO -- 2018-09-30 20:18:33]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-30 20:18:33]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-30 20:18:33]
initSignal:0
[INFO -- 2018-09-30 20:18:33]
endSignal:10
[INFO -- 2018-09-30 20:18:33]
faultModel:2
[EXCEPTION -- 2018-09-30 20:18:37]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-09-30 20:18:37]
Backtrace BEGIN:
#0  predict (v=-2) at lreg.cpp:48
#1  0x00005555555553fc in partialDerivate (pos=2) at lreg.cpp:74
#2  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#3  0x00005555555556ac in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:182

43	
44	/**
45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x555555771a90
address max offset: 8
Memory content after  bitflip:0x550x5e0xd10x9a0x800x330x1e0xd5
frame name: main
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 38, capacity 66 = {0, 1.7128536581735673e-316, 0, 8.0868664911295234e-320, 8.0868664911295234e-320, 8.0868664911295234e-320, 8.0868664911295234e-320, 8.0868664911295234e-320, 8.0868664911295234e-320, 8.0868664911295234e-320, 3.1861838222764845e-58, 1.2882297539241547e-231, 8.1550475502556155e-320, 5.0758836746867053e-116, 8.1629526005890754e-320, -1.491668146256324e-154, 8.1426959091095843e-320, 2.3158417847547761e+77, -8.150106893797203e-320, -9.1248812352777203e+192, 8.1580119441306629e-320, 8.0868664911295234e-320, -6.9835074893250338e-251, -9.7757963633058963e-150, -4.6566128730945225e-10, -1.9490628023013419e+289, 2.4355954143035931e-319, 1.2882297539335029e-231, 2.6128403532700923e-200, -1.5777218104478362e-30, 2.7397616862905563e-194, -2.0522684006716835e-289, -2.4367811718536121e-319, 8.1303442679635531e-320, -2.0522684006716357e-289, -9.7757963633057942e-150, 3.8272525864651278e+199, 2.848094538920456e-306, 1.2916457225064627e-60, 2.6955233505806729e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.5865752221267447e-317, -2.1530020312076923e-135, -1.461946978215115e-90, 4.7498770304575262e-276, 3.897614075951205e-215, 8.0962537384005071e-320, 1.5865752221267447e-317, -2.1530020312076923e-135, -1.461946978215115e-90, 4.7498770304575262e-276, 3.897614075951205e-215, 8.0962537384005071e-320, 1.5865752221267447e-317, 1.194559387444938e+103, -3.0338934899665281e-91, 6.6734803951851529e-270, 2.2956392514387219e+97, 8.0962537384005071e-320, 1.5865752221267447e-317, 0, -1.4619469782115286e-90, 4.7498770304575262e-276, 3.897614075951205e-215, 8.0962537384005071e-320, 1.3578817365373325e-314, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-30 20:18:37]
Fault Injection Successful after 4.353907346725464s
[INFO -- 2018-09-30 20:18:42]
event type: exit
[EXCEPTION -- 2018-09-30 20:18:42]
exit code: no exit code available
