[INFO -- 2018-10-01 14:15:02]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-01 14:15:02]
Initialization strings:
[INFO -- 2018-10-01 14:15:02]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-01 14:15:02]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-01 14:15:02]
initSignal:0
[INFO -- 2018-10-01 14:15:02]
endSignal:10
[INFO -- 2018-10-01 14:15:02]
faultModel:2
[INFO -- 2018-10-01 14:15:03]
Backtrace BEGIN:
#0  std::_Destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0, __last=0) at /usr/include/c++/7/bits/stl_construct.h:137
#1  0x000055555555696d in std::_Destroy<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double> (__first=0, __last=0) at /usr/include/c++/7/bits/stl_construct.h:206
#2  0x0000555555556243 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd840, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#3  0x0000555555555641 in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:119
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

132	      // A deleted destructor is trivial, this ensures we reject such types:
133	      static_assert(is_destructible<_Value_type>::value,
134			    "value type is destructible");
135	#endif
136	      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
137		__destroy(__first, __last);
138	    }
139	
140	  template<bool>
141	    struct _Destroy_n_aux

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xf00x130x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575a168 
address max offset: 8
Memory content after  bitflip:0x230x650x5e0x540x3c0x8a0x2d0x94
frame name: std::vector<double, std::allocator<double> >::operator=
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length -971186951927567825, capacity 8 = {21, 31, -13, -5, -13, -27, -15, 13, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 6.474730288749536e-320, 0, 0, 0, 0, 0, 1.6304166312761136e-322, -1.0000000005532603, 2.0000018000000002, 0, 1.6304166312761136e-322, 4.6355706478263358e-310, 2.0000018000000002, 0, 1.6304166312761136e-322, 0, 1.9999981999999998, 0, 2.167614207999301e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-01 14:15:03]
Fault Injection Successful after 1.6640832424163818s
[INFO -- 2018-10-01 14:15:03]
event type: exit
[EXCEPTION -- 2018-10-01 14:15:03]
exit code: no exit code available
