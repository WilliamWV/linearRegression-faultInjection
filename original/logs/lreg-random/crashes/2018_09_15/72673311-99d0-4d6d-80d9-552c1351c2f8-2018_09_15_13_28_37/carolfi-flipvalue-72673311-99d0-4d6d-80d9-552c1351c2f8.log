[INFO -- 2018-09-15 13:28:35]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 13:28:35]
Initialization strings:
[INFO -- 2018-09-15 13:28:35]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 13:28:35]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 13:28:35]
initSignal:0
[INFO -- 2018-09-15 13:28:35]
endSignal:2
[INFO -- 2018-09-15 13:28:35]
faultModel:2
[EXCEPTION -- 2018-09-15 13:28:36]
gdbException: Cannot access memory at address 0x8ca6a24932a7d844
[EXCEPTION -- 2018-09-15 13:28:36]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-09-15 13:28:36]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd850, __x=std::vector of length 1038983931499243361, capacity 1038983931499243361 = {...}) at /usr/include/c++/7/bits/vector.tcc:182
#1  0x0000555555555691 in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:119
#2  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

177	  template<typename _Tp, typename _Alloc>
178	    vector<_Tp, _Alloc>&
179	    vector<_Tp, _Alloc>::
180	    operator=(const vector<_Tp, _Alloc>& __x)
181	    {
182	      if (&__x != this)
183		{
184	#if __cplusplus >= 201103L
185		  if (_Alloc_traits::_S_propagate_on_copy_assign())
186		    {

Backtrace END
Memory content before bitflip:0x490x4b0x5c0xb20xf60xe00x6b0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd848
address max offset: 8
Memory content after  bitflip:0xd70x8b0x960x700x5a0x590x640x3b
frame name: train
symbol name: MSE
symbol filename: lreg.cpp
symbol line: 117
value: 1.346586261729396e-22
value address: 0x7fffffffd848
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-09-15 13:28:36]
Fault Injection Successful after 1.9218165874481201s
[INFO -- 2018-09-15 13:28:37]
event type: exit
[EXCEPTION -- 2018-09-15 13:28:37]
exit code: no exit code available
