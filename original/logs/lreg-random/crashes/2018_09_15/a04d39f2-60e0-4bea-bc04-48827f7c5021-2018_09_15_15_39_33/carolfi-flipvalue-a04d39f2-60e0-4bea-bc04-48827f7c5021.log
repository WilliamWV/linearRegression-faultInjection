[INFO -- 2018-09-15 15:39:30]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 15:39:30]
Initialization strings:
[INFO -- 2018-09-15 15:39:30]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 15:39:30]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 15:39:30]
initSignal:0
[INFO -- 2018-09-15 15:39:30]
endSignal:2
[INFO -- 2018-09-15 15:39:30]
faultModel:2
[INFO -- 2018-09-15 15:39:33]
Backtrace BEGIN:
#0  0x0000555555555ef2 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a180 <T>, __n=1) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x0000555555555217 in predict (v=-3) at lreg.cpp:50
#2  0x00005555555553fc in partialDerivate (pos=1) at lreg.cpp:74
#3  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#4  0x00005555555556ac in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa00x130x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575a188 
address max offset: 8
Memory content after  bitflip:0x3b0x400xfc0x710x2e0x6e0x750xb2
frame name: adjust
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length -698441555239721576, capacity 4 = {-10.415858052728211, 89.020917408146872, 11.88075740841807, -3.5095634164085796, 0, 4.001931731314097e-322, 4.6355706478057827e-310, 1.5810100666919889e-322, -1.0000009536743162, 3.2870804310107042e+178, -1.00000000077399, -1, -1, -1, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 1.1286365760718978e-312, 0, 0, 0, 0, 0, 1.6304166312761136e-322, 4.6355706478247548e-310, -2.3549437901674111, -0.9048217525889849, 1.6304166312761136e-322, 4.6355706478263358e-310, -2.3549659412652946, -0.90494291066134303, 1.6304166312761136e-322, 0, -2.3549437901674111, -0.9048217525889849, 7.1639518646980749e-322, 0, -1, -1, -1, -1, -1, -1, -1, -553, -73, -241, -307, -241, -7, -43, -1, 0, 1.3487992131466031e-321, 0, -12, -4, -2, 10, -15, 3, 12, 23, -9, -16, 17, 15, -3, 6, 0, 24, 1, -1, -15, -14, 1, 20, -3, 6, -2, -17, 11, -31, -30, -21, -6, 0, 1.3487992131466031e-321, 4.6355706478350314e-310, -1, -1, -1, -1, -1, -1, -1, -553, -73, -241, -307, -241, -7, -43, -1, -601, -3, -1, -211, 9959, -1, -33935, 59, -1021, 11, 18161, -5891, 114271, 103415, 34781, 671, 0, 2.6136072665001942e-321, 9, -12, -4, -2, 10, -15, 3, 12, 23, -9, -16, 17, 15, -3, 6, 0, 24, 1, -1, -15, -14, 1, 20, -3, 6, -2, -17, 11, -31, -30, -21, -6, -32, -27, 25, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.6136072665001942e-321, -1, -1, -1, -1, -1, -1, -1, -1, -553, -73...}
value address: 0x55555575a180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 15:39:33]
Fault Injection Successful after 3.186711549758911s
[INFO -- 2018-09-15 15:39:33]
event type: exit
[EXCEPTION -- 2018-09-15 15:39:33]
exit code: no exit code available
