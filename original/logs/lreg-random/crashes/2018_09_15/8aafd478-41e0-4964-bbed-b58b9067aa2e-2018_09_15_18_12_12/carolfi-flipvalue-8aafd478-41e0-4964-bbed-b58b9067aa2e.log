[INFO -- 2018-09-15 18:12:10]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 18:12:10]
Initialization strings:
[INFO -- 2018-09-15 18:12:10]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 18:12:10]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 18:12:10]
initSignal:0
[INFO -- 2018-09-15 18:12:10]
endSignal:2
[INFO -- 2018-09-15 18:12:10]
faultModel:2
[INFO -- 2018-09-15 18:12:10]
Backtrace BEGIN:
#0  0x00005555555579fe in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555771360, __last=0x555555771378, __result=0x555555771450) at /usr/include/c++/7/bits/stl_algobase.h:366
#1  0x00005555555577c0 in std::__copy_move_a<false, double const*, double*> (__first=0x555555771360, __last=0x555555771378, __result=0x555555771450) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x00005555555572bf in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=-3.0068340267929883, __last=2.4209216646221081e-322, __result=-3.006332144193864) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x0000555555556ae5 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=-3.0068340267929883, __last=2.4209216646221081e-322, __result=-3.006332144193864) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555556427 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd870, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x00005555555556f2 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:124
#6  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

361						   is_move_assignable<_Tp>,
362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x400x160x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575a150 
address max offset: 8
Memory content after  bitflip:0x610xe20x9f0x8f0x810x0f0x940xb6
frame name: std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 20, capacity -661335054764140123 = {-5, 9, -6, -6, 9, -8, 13, 6, 0, 2, 12, -13, 1, -23, 15, -7, -6, 8, 11, 10}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 18:12:10]
Fault Injection Successful after 0.9797136783599854s
[INFO -- 2018-09-15 18:12:11]
event type: exit
[EXCEPTION -- 2018-09-15 18:12:11]
exit code: no exit code available
