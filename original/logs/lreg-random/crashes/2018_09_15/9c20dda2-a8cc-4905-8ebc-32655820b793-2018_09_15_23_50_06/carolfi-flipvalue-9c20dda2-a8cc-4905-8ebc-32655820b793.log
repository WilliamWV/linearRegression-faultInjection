[INFO -- 2018-09-15 23:50:04]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 23:50:04]
Initialization strings:
[INFO -- 2018-09-15 23:50:04]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 23:50:04]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 23:50:04]
initSignal:0
[INFO -- 2018-09-15 23:50:04]
endSignal:2
[INFO -- 2018-09-15 23:50:04]
faultModel:2
[EXCEPTION -- 2018-09-15 23:50:05]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-09-15 23:50:05]
Backtrace BEGIN:
#0  0x0000555555555770 in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#1  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

121			MSE = meanSquaredError();
122			if (MSE < bestMSE){
123				bestMSE = MSE;
124				bestT = T; 
125			}
126			if (equals(T, prevT) && stopsWhenStable){ // implement equals
127				break;		
128			}
129		}
130		T = bestT;

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0xf00x130x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575a170 
address max offset: 8
Memory content after  bitflip:0xe50x670x800xb10x9b0xc20xa30x7e
frame name: train
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 8, capacity 1140657177367751302 = {-12, -6, -6, 11, -1, 8, -3, -5}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 23:50:05]
Fault Injection Successful after 1.4925580024719238s
[INFO -- 2018-09-15 23:50:05]
event type: exit
[EXCEPTION -- 2018-09-15 23:50:05]
exit code: no exit code available
