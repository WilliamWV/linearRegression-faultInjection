[INFO -- 2018-09-15 15:07:11]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 15:07:11]
Initialization strings:
[INFO -- 2018-09-15 15:07:11]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 15:07:11]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 15:07:11]
initSignal:0
[INFO -- 2018-09-15 15:07:11]
endSignal:2
[INFO -- 2018-09-15 15:07:11]
faultModel:2
[EXCEPTION -- 2018-09-15 15:07:12]
pythonException: empty range for randrange() (0,0, 0)
[EXCEPTION -- 2018-09-15 15:07:12]
gdbException: Cannot access memory at address 0xa97152bcf55e4877
[INFO -- 2018-09-15 15:07:12]
Backtrace BEGIN:
#0  0x0000555555555415 in partialDerivate (pos=1) at lreg.cpp:74
#1  0x0000555555555503 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#2  0x00005555555556ac in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

69		to the adjustment variable whose position in T is passed in pos
70	*/
71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;
78	}

Backtrace END
Memory content before bitflip:0x740x8d0x270xd20x4d0xb00x3f0xc0
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7e8
address max offset: 8
Memory content after  bitflip:0x730xec0x240x9f0x320x000xc50x43
frame name: adjust
symbol name: PD
symbol filename: lreg.cpp
symbol line: 85
value: 3.0265302677943025e+18
value address: 0x7fffffffd7e8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-09-15 15:07:12]
Fault Injection Successful after 1.431380033493042s
[INFO -- 2018-09-15 15:07:12]
event type: exit
[EXCEPTION -- 2018-09-15 15:07:12]
exit code: no exit code available
