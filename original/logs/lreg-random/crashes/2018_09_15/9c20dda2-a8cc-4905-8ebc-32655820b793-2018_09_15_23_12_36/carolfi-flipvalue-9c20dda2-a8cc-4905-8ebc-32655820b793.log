[INFO -- 2018-09-15 23:12:34]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 23:12:34]
Initialization strings:
[INFO -- 2018-09-15 23:12:34]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 23:12:34]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 23:12:34]
initSignal:0
[INFO -- 2018-09-15 23:12:34]
endSignal:2
[INFO -- 2018-09-15 23:12:34]
faultModel:2
[EXCEPTION -- 2018-09-15 23:12:35]
gdbException: Cannot access memory at address 0x1ada61bfdd77e847
[INFO -- 2018-09-15 23:12:35]
Backtrace BEGIN:
#0  0x00005555555579fb in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555771340, __last=0x555555771350, __result=0x555555771490) at /usr/include/c++/7/bits/stl_algobase.h:366
#1  0x00005555555577c0 in std::__copy_move_a<false, double const*, double*> (__first=0x555555771340, __last=0x555555771350, __result=0x555555771490) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x0000555555557b2e in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-1.9999999175569314, __last=0, __result=0x555555771490) at /usr/include/c++/7/bits/stl_algobase.h:424
#3  0x0000555555557985 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-1.9999999175569314, __last=0, __result=0x555555771490) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555557708 in std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-1.9999999175569314, __last=0, __result=0x555555771490) at /usr/include/c++/7/bits/stl_uninitialized.h:101
#5  0x000055555555717e in std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-1.9999999175569314, __last=0, __result=0x555555771490) at /usr/include/c++/7/bits/stl_uninitialized.h:134
#6  0x00005555555568d7 in std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double> (__first=-1.9999999175569314, __last=0, __result=0x555555771490) at /usr/include/c++/7/bits/stl_uninitialized.h:289
#7  0x000055555555615d in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd890, __x=std::vector of length -241859080199608990, capacity -241859080199608990 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#8  0x000055555555572b in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#9  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

361						   is_move_assignable<_Tp>,
362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}

Backtrace END
Memory content before bitflip:0x030x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd92c
address max offset: 4
Memory content after  bitflip:0x560x010x0b0xbb
frame name: main
symbol name: testCases
symbol filename: lreg.cpp
symbol line: 164
value: -1156906666
value address: 0x7fffffffd92c
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-09-15 23:12:35]
Fault Injection Successful after 1.402108907699585s
[INFO -- 2018-09-15 23:12:35]
event type: exit
[EXCEPTION -- 2018-09-15 23:12:35]
exit code: no exit code available
