[INFO -- 2018-11-24 09:29:42]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 09:29:42]
Initialization strings:
[INFO -- 2018-11-24 09:29:43]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 09:29:43]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-24 09:29:43]
initSignal:0
[INFO -- 2018-11-24 09:29:43]
endSignal:2
[INFO -- 2018-11-24 09:29:43]
faultModel:2
[INFO -- 2018-11-24 09:29:44]
Backtrace BEGIN:
#0  0x000055555555542c in partialDerivate (pos=0) at lreg.cpp:76
#1  0x00005555555554b3 in adjust (alpha=0.00020000000000000001) at lreg.cpp:87
#2  0x000055555555565c in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;
78	}
79	
80	/**

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x300x130x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575a150 
address max offset: 8
Memory content after  bitflip:0x190x280xf40x9a0x670x680x400x8d
frame name: adjust
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 8, capacity -1033573493332008282 = {12, -6, -10, -3, 7, -12, 6, -10}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-24 09:29:44]
Fault Injection Successful after 1.9607458114624023s
[INFO -- 2018-11-24 09:29:45]
event type: exit
[EXCEPTION -- 2018-11-24 09:29:45]
exit code: no exit code available
