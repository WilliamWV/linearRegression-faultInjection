[INFO -- 2018-11-24 12:55:38]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 12:55:38]
Initialization strings:
[INFO -- 2018-11-24 12:55:38]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 12:55:38]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-24 12:55:38]
initSignal:0
[INFO -- 2018-11-24 12:55:38]
endSignal:2
[INFO -- 2018-11-24 12:55:38]
faultModel:2
[EXCEPTION -- 2018-11-24 12:55:40]
gdbException: Attempt to dereference a generic pointer.
[EXCEPTION -- 2018-11-24 12:55:41]
gdbException: Cannot access memory at address 0xa189a0be49c22669
[EXCEPTION -- 2018-11-24 12:55:41]
gdbException: Cannot access memory at address 0xa189a0be49c22669
[INFO -- 2018-11-24 12:55:42]
Backtrace BEGIN:
#0  0x0000555555555283 in meanSquaredError () at lreg.cpp:61
#1  0x0000555555555661 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#2  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

56		Calculates the mean squared error of T
57	*/
58	double meanSquaredError(){
59		double error = 0;
60		for(int i = 0; i<x.size(); i++){
61			error+= ((predict(x[i]) - y[i]) * (predict(x[i]) - y[i]));	
62		}
63		error /= x.size();
64		return error;
65	

Backtrace END
Fliping a bit of the value pointed by a pointer
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x2f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffe1fd 
address max offset: 1
Memory content after  bitflip:0x61
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 144
value: 0x7fffffffde58
value address: 0x7fffffffd900
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-24 12:55:42]
Fault Injection Successful after 4.131319999694824s
[INFO -- 2018-11-24 12:55:42]
event type: exit
[EXCEPTION -- 2018-11-24 12:55:42]
exit code: no exit code available
