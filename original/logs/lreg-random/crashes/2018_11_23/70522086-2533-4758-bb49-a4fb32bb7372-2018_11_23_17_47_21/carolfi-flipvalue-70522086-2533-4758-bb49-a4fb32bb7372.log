[INFO -- 2018-11-23 17:47:15]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 17:47:15]
Initialization strings:
[INFO -- 2018-11-23 17:47:15]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 17:47:15]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 17:47:15]
initSignal:0
[INFO -- 2018-11-23 17:47:15]
endSignal:3
[INFO -- 2018-11-23 17:47:15]
faultModel:2
[EXCEPTION -- 2018-11-23 17:47:16]
gdbException: Attempt to dereference a generic pointer.
[EXCEPTION -- 2018-11-23 17:47:19]
gdbException: Cannot access memory at address 0x86b0f860d58711f7
[EXCEPTION -- 2018-11-23 17:47:19]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-23 17:47:20]
Backtrace BEGIN:
#0  0x000055555555539b in partialDerivate (pos=0) at lreg.cpp:74
#1  0x00005555555554b3 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#2  0x000055555555565c in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

69		to the adjustment variable whose position in T is passed in pos
70	*/
71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;
78	}

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7d8
address max offset: 8
Memory content after  bitflip:0x380xf80xc20xf30xfc0x180xfe0x6e
frame name: adjust
symbol name: PD
symbol filename: lreg.cpp
symbol line: 85
value: 4.4562419569803133e+226
value address: 0x7fffffffd7d8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-23 17:47:20]
Fault Injection Successful after 5.08040452003479s
[INFO -- 2018-11-23 17:47:20]
event type: exit
[EXCEPTION -- 2018-11-23 17:47:20]
exit code: no exit code available
