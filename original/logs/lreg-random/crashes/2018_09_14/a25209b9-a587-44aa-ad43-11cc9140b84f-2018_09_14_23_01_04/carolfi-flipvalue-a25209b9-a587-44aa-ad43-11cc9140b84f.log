[INFO -- 2018-09-14 23:01:01]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-14 23:01:01]
Initialization strings:
[INFO -- 2018-09-14 23:01:01]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-14 23:01:01]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-14 23:01:01]
initSignal:0
[INFO -- 2018-09-14 23:01:01]
endSignal:2
[INFO -- 2018-09-14 23:01:01]
faultModel:2
[EXCEPTION -- 2018-09-14 23:01:02]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-09-14 23:01:02]
Backtrace BEGIN:
#0  0x00005555555553cf in partialDerivate (pos=0) at lreg.cpp:73
#1  0x0000555555555503 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#2  0x00005555555556ac in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

68		Calculates the partial derivate of the meanSquaredError function 
69		to the adjustment variable whose position in T is passed in pos
70	*/
71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;

Backtrace END
Memory content before bitflip:0x000x000x000x000x000xc00x550xc0
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd958
address max offset: 8
Memory content after  bitflip:0xa10x8c0x440xcb0x580xa60x5c0x21
frame name: main
symbol name: temp
symbol filename: lreg.cpp
symbol line: 168
value: 5.6014907248832236e-148
value address: 0x7fffffffd958
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-09-14 23:01:02]
Fault Injection Successful after 1.2076594829559326s
[INFO -- 2018-09-14 23:01:03]
event type: exit
[EXCEPTION -- 2018-09-14 23:01:03]
exit code: no exit code available
