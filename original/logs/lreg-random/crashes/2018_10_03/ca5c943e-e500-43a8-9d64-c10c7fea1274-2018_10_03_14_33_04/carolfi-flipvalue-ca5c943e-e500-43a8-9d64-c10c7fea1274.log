[INFO -- 2018-10-03 14:32:57]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-03 14:32:57]
Initialization strings:
[INFO -- 2018-10-03 14:32:57]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-03 14:32:57]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-03 14:32:57]
initSignal:0
[INFO -- 2018-10-03 14:32:57]
endSignal:10
[INFO -- 2018-10-03 14:32:57]
faultModel:2
[EXCEPTION -- 2018-10-03 14:33:03]
gdbException: Cannot access memory at address 0x764c894d8f50a4c5
[INFO -- 2018-10-03 14:33:03]
Backtrace BEGIN:
#0  0x0000555555555d29 in std::pow<double, int> (__x=-17, __y=0) at /usr/include/c++/7/cmath:415
#1  0x0000555555555401 in partialDerivate (pos=1) at lreg.cpp:74
#2  0x00005555555554b3 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#3  0x000055555555565c in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

410	#endif
411	
412	  template<typename _Tp, typename _Up>
413	    inline _GLIBCXX_CONSTEXPR
414	    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
415	    pow(_Tp __x, _Up __y)
416	    {
417	      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
418	      return pow(__type(__x), __type(__y));
419	    }

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd940
address max offset: 8
Memory content after  bitflip:0xad0x870xa00x4f0x460x400x910xf9
frame name: main
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 160
value: -3.8225407949463605e+277
value address: 0x7fffffffd940
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-03 14:33:03]
Fault Injection Successful after 6.638227939605713s
[INFO -- 2018-10-03 14:33:03]
event type: exit
[EXCEPTION -- 2018-10-03 14:33:03]
exit code: no exit code available
