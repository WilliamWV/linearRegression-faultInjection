[INFO -- 2018-10-03 16:21:56]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-03 16:21:56]
Initialization strings:
[INFO -- 2018-10-03 16:21:56]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-03 16:21:56]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-03 16:21:56]
initSignal:0
[INFO -- 2018-10-03 16:21:56]
endSignal:10
[INFO -- 2018-10-03 16:21:56]
faultModel:2
[EXCEPTION -- 2018-10-03 16:21:57]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-10-03 16:21:57]
Backtrace BEGIN:
#0  0x0000555555555d39 in std::pow<double, int> (__x=-2, __y=1) at /usr/include/c++/7/cmath:418
#1  0x00005555555551e7 in predict (v=-2) at lreg.cpp:50
#2  0x00005555555552ba in meanSquaredError () at lreg.cpp:61
#3  0x0000555555555661 in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:121
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

413	    inline _GLIBCXX_CONSTEXPR
414	    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
415	    pow(_Tp __x, _Up __y)
416	    {
417	      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
418	      return pow(__type(__x), __type(__y));
419	    }
420	
421	  using ::sin;
422	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x555555771330
address max offset: 8
Memory content after  bitflip:0xcf0xeb0x1f0x110xec0xc70xd90xbd
frame name: predict
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 8, capacity 8 = {6.406665904585923e-145, 3.1620201333839779e-322, 1.4916681462401049e-154, 9.4860604001519336e-322, 5.0758836746315148e-116, 8.0863492239047346e-174, 6.406665904586014e-145, 2.1800754380842661e-106, -3.1627741977383603e+124, 4.2672449831308464e-320, -4.4766764019536606e+109, -6.9207440369156959e+230, 9.436653835567809e-322, 4.1738665760668508e-320, -3.6806887271804849e+109, -6.9177184994881533e+230, 9.436653835567809e-322, 6.1975594614325967e-320, 0, -3.1050361846014179e+231, 8.0863492239045029e-174, -3.105036184601462e+231, 3.1126135687998532e-322, 1.0244945232164088e-319, 2.7516420536594796e-135, -3.1050361846015502e+231, 8.0863492239045029e-174, -3.105036184601462e+231, 1.1818212630765907e-125, 1.4916681462400625e-154, 1.4916681462401049e-154, 9.3633527093845297e-97, 9.4860604001519336e-322, 1.0244945232164088e-319, 0, 4.0473857707314917e-320, 5.4323092236062891e-312, 4.3262266189818777e-315, 0, 0, 0, 0, 0, 4.1738665760668508e-320, -3.6806887271804849e+109, -6.9177184994881533e+230, 9.436653835567809e-322, 4.1738665760668508e-320, 4.7468246790505826e-307, -6.9146924302739076e+230, 9.436653835567809e-322, 4.1738665760668508e-320, 0, -6.9177184994879887e+230, 9.436653835567809e-322, 5.5490923724782105e-317, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-03 16:21:57]
Fault Injection Successful after 1.2357938289642334s
[INFO -- 2018-10-03 16:21:57]
event type: exit
[EXCEPTION -- 2018-10-03 16:21:57]
exit code: no exit code available
