[INFO -- 2018-10-03 18:31:29]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-03 18:31:29]
Initialization strings:
[INFO -- 2018-10-03 18:31:29]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-03 18:31:29]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-03 18:31:29]
initSignal:0
[INFO -- 2018-10-03 18:31:29]
endSignal:10
[INFO -- 2018-10-03 18:31:29]
faultModel:2
[INFO -- 2018-10-03 18:31:31]
Backtrace BEGIN:
#0  0x0000555555555433 in partialDerivate (pos=1) at lreg.cpp:76
#1  0x00005555555554b3 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#2  0x000055555555565c in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;
78	}
79	
80	/**

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x400x160x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575a150 
address max offset: 8
Memory content after  bitflip:0xf60x000x520x3b0x980x4e0xd60x58
frame name: partialDerivate
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 20, capacity 800162063887064438 = {8, -4, 3, 1, -10, -4, 2, 2, 17, -3, 13, -12, -18, 11, 22, -2, 21, -5, 11, -17}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-03 18:31:31]
Fault Injection Successful after 2.237334966659546s
[INFO -- 2018-10-03 18:31:31]
event type: exit
[EXCEPTION -- 2018-10-03 18:31:31]
exit code: no exit code available
