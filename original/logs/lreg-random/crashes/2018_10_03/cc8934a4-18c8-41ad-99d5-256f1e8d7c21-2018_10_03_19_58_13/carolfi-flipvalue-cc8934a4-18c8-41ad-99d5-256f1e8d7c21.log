[INFO -- 2018-10-03 19:58:11]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-03 19:58:11]
Initialization strings:
[INFO -- 2018-10-03 19:58:11]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-03 19:58:11]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-03 19:58:11]
initSignal:0
[INFO -- 2018-10-03 19:58:11]
endSignal:10
[INFO -- 2018-10-03 19:58:11]
faultModel:2
[EXCEPTION -- 2018-10-03 19:58:12]
pythonException: empty range for randrange() (0,0, 0)
[EXCEPTION -- 2018-10-03 19:58:12]
gdbException: Cannot access memory at address 0x9974aee517af7518
[INFO -- 2018-10-03 19:58:12]
Backtrace BEGIN:
#0  0x00005555555553eb in partialDerivate (pos=2) at lreg.cpp:74
#1  0x00005555555554b3 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#2  0x000055555555565c in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

69		to the adjustment variable whose position in T is passed in pos
70	*/
71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;
78	}

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd810
address max offset: 8
Memory content after  bitflip:0xb00x6b0xa80xcb0x610xae0x540x74
frame name: train
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 105
value: 2.3691452781495951e+252
value address: 0x7fffffffd810
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-03 19:58:12]
Fault Injection Successful after 1.5516536235809326s
[INFO -- 2018-10-03 19:58:12]
event type: exit
[EXCEPTION -- 2018-10-03 19:58:12]
exit code: no exit code available
