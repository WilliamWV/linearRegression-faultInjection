[INFO -- 2018-10-04 20:28:02]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-04 20:28:02]
Initialization strings:
[INFO -- 2018-10-04 20:28:02]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-04 20:28:02]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-04 20:28:02]
initSignal:0
[INFO -- 2018-10-04 20:28:02]
endSignal:10
[INFO -- 2018-10-04 20:28:02]
faultModel:2
[EXCEPTION -- 2018-10-04 20:28:03]
gdbException: Cannot access memory at address 0x62a66743dd7098db
[EXCEPTION -- 2018-10-04 20:28:03]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-10-04 20:28:04]
Backtrace BEGIN:
#0  std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator (this=0x7fffffffd880) at /usr/include/c++/7/bits/stl_vector.h:115
#1  0x0000555555555e12 in std::vector<double, std::allocator<double> >::~vector (this=0x7fffffffd880, __in_chrg=<optimized out>) at /usr/include/c++/7/bits/stl_vector.h:435
#2  0x0000555555555720 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:126
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

110	
111	    public:
112	      typedef _Alloc allocator_type;
113	
114	      _Tp_alloc_type&
115	      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
116	      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
117	
118	      const _Tp_alloc_type&
119	      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd940
address max offset: 8
Memory content after  bitflip:0xbb0xdf0x190x190x6c0xc10x920x9b
frame name: main
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 160
value: -7.4054674434112673e-176
value address: 0x7fffffffd940
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-04 20:28:04]
Fault Injection Successful after 2.2188639640808105s
[INFO -- 2018-10-04 20:28:04]
event type: exit
[EXCEPTION -- 2018-10-04 20:28:04]
exit code: no exit code available
