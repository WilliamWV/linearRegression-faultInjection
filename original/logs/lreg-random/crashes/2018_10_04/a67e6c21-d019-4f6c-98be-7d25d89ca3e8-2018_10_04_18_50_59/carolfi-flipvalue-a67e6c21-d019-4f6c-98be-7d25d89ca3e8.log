[INFO -- 2018-10-04 18:50:57]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-04 18:50:57]
Initialization strings:
[INFO -- 2018-10-04 18:50:57]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-04 18:50:57]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-04 18:50:57]
initSignal:0
[INFO -- 2018-10-04 18:50:57]
endSignal:10
[INFO -- 2018-10-04 18:50:57]
faultModel:2
[EXCEPTION -- 2018-10-04 18:50:57]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-10-04 18:50:57]
Backtrace BEGIN:
#0  0x000055555555520a in predict (v=11) at lreg.cpp:54
#1  0x000055555555526a in meanSquaredError () at lreg.cpp:61
#2  0x0000555555555661 in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}
55	/**
56		Calculates the mean squared error of T
57	*/
58	double meanSquaredError(){

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x300x130x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575a150 
address max offset: 8
Memory content after  bitflip:0x030xa20xde0x780x410xd70xda0x62
frame name: main
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 8, capacity 890393576480764386 = {15, 5, -5, -6, -6, 11, 1, 12}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-04 18:50:57]
Fault Injection Successful after 0.9707963466644287s
[INFO -- 2018-10-04 18:50:58]
event type: exit
[EXCEPTION -- 2018-10-04 18:50:58]
exit code: no exit code available
