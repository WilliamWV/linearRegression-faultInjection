[INFO -- 2018-09-16 00:56:03]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-16 00:56:03]
Initialization strings:
[INFO -- 2018-09-16 00:56:03]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-16 00:56:03]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-16 00:56:03]
initSignal:0
[INFO -- 2018-09-16 00:56:03]
endSignal:2
[INFO -- 2018-09-16 00:56:03]
faultModel:2
[INFO -- 2018-09-16 00:56:04]
Backtrace BEGIN:
#0  0x00007ffff76b4990 in *ABS*+0x2d7c0@plt () from /lib/x86_64-linux-gnu/libm.so.6
#1  0x00007ffff76b7b14 in __pow (x=11, y=1) at w_pow_compat.c:30
#2  0x0000555555555f39 in std::pow<double, int> (__x=11, __y=1) at /usr/include/c++/7/cmath:418
#3  0x0000555555555237 in predict (v=11) at lreg.cpp:50
#4  0x00005555555553fc in partialDerivate (pos=0) at lreg.cpp:74
#5  0x0000555555555503 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#6  0x00005555555556ac in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#7  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

138		out<<endl;
139		out<<"Mean Squared Error: " << meanSquaredError()<<endl;
140	}
141	/*
142	It must receive an input file formated as follows:
143		1° Line : one integer T -> number of test cases
144		2° to 5° repeat to all test case	
145		2° Line : method parameters -> alpha, iterations, N, size of 
146			      training set, predictions
147		3° Line : inputs x of the training set

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x780x130x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575a188 
address max offset: 8
Memory content after  bitflip:0xfe0xbe0x990x3c0xa30x080x5c0xef
frame name: train
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length -149895966074055308, capacity 3 = {-1.921737153264014, 0.23575113360055225, 0.9621051461515262, 2.4209216646221081e-322, 0, -6, -6, 11, 0, 4.001931731314097e-322, 4.6355706478057827e-310, 1.5810100666919889e-322, -6.0000038146972647, 11.000000000023281, -1, 8, -3, -5, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 1.1246736984265478e-312, 0, 0, 0, 0, 0, 1.6304166312761136e-322, -1.921737153264014, 0.23575113360055225, 0.9621051461515262, 1.6304166312761136e-322, 4.6355706478263358e-310, 0.23573575479932032, 0.96224706475012622, 1.6304166312761136e-322, 0, 0.23575113360055225, 0.9621051461515262, 7.1639518646980749e-322, 0, -6, -6, 11, -1, 8, -3, -5, 423, 59, 345, 213, 23, 383, 345, 33, 0, 1.3487992131466031e-321, -10, -4, -4, 13, 1, 10, -1, -3, -21, -8, -19, -15, 4, 19, 18, 5, 11, 19, -24, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.3487992131466031e-321, -12, -6, -6, 11, -1, 8, -3, -5, 423, 59, 345, 213, 23, 383, 345, 33, 135, 383, 555, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.1336224915654232e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-16 00:56:04]
Fault Injection Successful after 1.257739782333374s
[INFO -- 2018-09-16 00:56:04]
event type: exit
[EXCEPTION -- 2018-09-16 00:56:04]
exit code: no exit code available
