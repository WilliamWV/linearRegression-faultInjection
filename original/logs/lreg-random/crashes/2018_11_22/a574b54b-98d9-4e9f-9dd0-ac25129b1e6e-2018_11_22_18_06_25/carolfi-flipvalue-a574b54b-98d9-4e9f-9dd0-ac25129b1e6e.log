[INFO -- 2018-11-22 18:06:21]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-22 18:06:21]
Initialization strings:
[INFO -- 2018-11-22 18:06:21]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-22 18:06:21]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-22 18:06:21]
initSignal:0
[INFO -- 2018-11-22 18:06:21]
endSignal:3
[INFO -- 2018-11-22 18:06:21]
faultModel:2
[EXCEPTION -- 2018-11-22 18:06:22]
gdbException: Attempt to dereference a generic pointer.
[EXCEPTION -- 2018-11-22 18:06:23]
gdbException: Cannot access memory at address 0x793f7f2d70f1e8c8
[EXCEPTION -- 2018-11-22 18:06:23]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-22 18:06:24]
Backtrace BEGIN:
#0  0x00005555555551c7 in predict (v=-3) at lreg.cpp:50
#1  0x00005555555552ba in meanSquaredError () at lreg.cpp:61
#2  0x0000555555555661 in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Memory content before bitflip:0x630x940x0a0xbd0x550x590x0a0x40
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7d8
address max offset: 8
Memory content after  bitflip:0xe90xb00xe50xdd0x640x8c0x5d0xde
frame name: meanSquaredError
symbol name: error
symbol filename: lreg.cpp
symbol line: 59
value: -3.6897087558582958e+146
value address: 0x7fffffffd7d8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-22 18:06:24]
Fault Injection Successful after 3.201711416244507s
[INFO -- 2018-11-22 18:06:24]
event type: exit
[EXCEPTION -- 2018-11-22 18:06:24]
exit code: no exit code available
