[INFO -- 2018-10-03 17:06:43]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-03 17:06:43]
Initialization strings:
[INFO -- 2018-10-03 17:06:43]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-03 17:06:43]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-03 17:06:43]
initSignal:0
[INFO -- 2018-10-03 17:06:43]
endSignal:10
[INFO -- 2018-10-03 17:06:43]
faultModel:2
[INFO -- 2018-10-03 17:06:47]
Backtrace BEGIN:
#0  0x0000555555555d04 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a180 <T>, __n=4294967297) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x00005555555551c7 in predict (v=-4) at lreg.cpp:50
#2  0x00005555555553ac in partialDerivate (pos=2) at lreg.cpp:74
#3  0x00005555555554b3 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#4  0x000055555555565c in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Memory content before bitflip:0x000x1f0x2a0xcc0xd20x630x920x40
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd738
address max offset: 8
Memory content after  bitflip:0xe20x810xdc0x630x460x670x3f0xeb
frame name: predict
symbol name: val
symbol filename: lreg.cpp
symbol line: 48
value: -4.0328673216019071e+208
value address: 0x7fffffffd738
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-03 17:06:47]
Fault Injection Successful after 4.971601486206055s
[INFO -- 2018-10-03 17:06:50]
event type: exit
[INFO -- 2018-10-03 17:06:50]
exit code: 0
