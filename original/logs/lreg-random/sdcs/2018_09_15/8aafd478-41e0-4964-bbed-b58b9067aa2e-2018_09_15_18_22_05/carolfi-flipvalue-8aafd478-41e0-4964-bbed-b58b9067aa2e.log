[INFO -- 2018-09-15 18:21:57]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 18:21:57]
Initialization strings:
[INFO -- 2018-09-15 18:21:57]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 18:21:57]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 18:21:57]
initSignal:0
[INFO -- 2018-09-15 18:21:57]
endSignal:2
[INFO -- 2018-09-15 18:21:57]
faultModel:2
[INFO -- 2018-09-15 18:21:57]
Backtrace BEGIN:
#0  0x0000555555555409 in partialDerivate (pos=0) at lreg.cpp:74
#1  0x0000555555555503 in adjust (alpha=0.00020000000000000001) at lreg.cpp:87
#2  0x00005555555556ac in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

69		to the adjustment variable whose position in T is passed in pos
70	*/
71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;
78	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x140xc0
Fault Model: Random bit-flip
base address to flip value: 0x5555557712f0
address max offset: 8
Memory content after  bitflip:0xdf0x750xf10xe80x800x5c0x6a0x55
frame name: partialDerivate
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 8, capacity 8 = {2.9521338581260862e+103, 9, -6, -6, 9, -8, 13, 6}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-15 18:21:57]
Fault Injection Successful after 0.9409730434417725s
[INFO -- 2018-09-15 18:22:04]
event type: exit
[INFO -- 2018-09-15 18:22:04]
exit code: 0
