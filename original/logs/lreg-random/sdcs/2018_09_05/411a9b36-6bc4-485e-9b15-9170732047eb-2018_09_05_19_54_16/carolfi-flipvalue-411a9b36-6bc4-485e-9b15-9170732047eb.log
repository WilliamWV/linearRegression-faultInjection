[INFO -- 2018-09-05 19:54:09]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-05 19:54:09]
Initialization strings:
[INFO -- 2018-09-05 19:54:09]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-05 19:54:09]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-05 19:54:09]
initSignal:0
[INFO -- 2018-09-05 19:54:09]
endSignal:2
[INFO -- 2018-09-05 19:54:09]
faultModel:2
[INFO -- 2018-09-05 19:54:10]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x0) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x00005555555551f9 in predict (v=-12) at lreg.cpp:49
#2  0x00005555555553fc in partialDerivate (pos=0) at lreg.cpp:74
#3  0x0000555555555503 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#4  0x00005555555556ac in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde78) at lreg.cpp:182

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x600xea0x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd83c
address max offset: 4
Memory content after  bitflip:0x380x4b0x5b0xe1
frame name: train
symbol name: iterations
symbol filename: lreg.cpp
symbol line: 105
value: -514110664
value address: 0x7fffffffd83c
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-09-05 19:54:10]
Fault Injection Successful after 1.2262251377105713s
[INFO -- 2018-09-05 19:54:16]
event type: exit
[INFO -- 2018-09-05 19:54:16]
exit code: 0
