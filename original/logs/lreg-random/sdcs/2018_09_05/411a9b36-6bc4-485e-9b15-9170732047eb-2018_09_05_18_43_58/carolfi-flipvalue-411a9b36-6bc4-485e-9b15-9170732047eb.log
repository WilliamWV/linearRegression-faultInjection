[INFO -- 2018-09-05 18:43:49]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-05 18:43:49]
Initialization strings:
[INFO -- 2018-09-05 18:43:49]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-05 18:43:49]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-05 18:43:49]
initSignal:0
[INFO -- 2018-09-05 18:43:49]
endSignal:2
[INFO -- 2018-09-05 18:43:49]
faultModel:2
[EXCEPTION -- 2018-09-05 18:43:49]
gdbException: Attempt to dereference a generic pointer.
[EXCEPTION -- 2018-09-05 18:43:49]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-09-05 18:43:50]
Backtrace BEGIN:
#0  0x0000555555557a0b in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555771340, __last=0x555555771350, __result=0x555555771450) at /usr/include/c++/7/bits/stl_algobase.h:367
#1  0x00005555555577c0 in std::__copy_move_a<false, double const*, double*> (__first=0x555555771340, __last=0x555555771350, __result=0x555555771450) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x00005555555572bf in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=-0.79079784460795022, __last=0, __result=-0.79067242050547615) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x0000555555556ae5 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=-0.79079784460795022, __last=0, __result=-0.79067242050547615) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555556427 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd880, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x00005555555556f2 in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:124
#6  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde78) at lreg.cpp:182

362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}
371	    };

Backtrace END
Memory content before bitflip:0x940x6b0xb00xe70xa40x0c0xa50x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd850
address max offset: 8
Memory content after  bitflip:0xdd0x750xd50x1d0x7f0x770xf30x21
frame name: train
symbol name: bestMSE
symbol filename: lreg.cpp
symbol line: 116
value: 3.8974117951610957e-145
value address: 0x7fffffffd850
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-09-05 18:43:50]
Fault Injection Successful after 1.1700222492218018s
[INFO -- 2018-09-05 18:43:56]
event type: exit
[INFO -- 2018-09-05 18:43:56]
exit code: 0
