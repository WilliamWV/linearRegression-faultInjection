[INFO -- 2018-09-05 18:52:59]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-05 18:52:59]
Initialization strings:
[INFO -- 2018-09-05 18:52:59]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-05 18:52:59]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-05 18:52:59]
initSignal:0
[INFO -- 2018-09-05 18:52:59]
endSignal:2
[INFO -- 2018-09-05 18:52:59]
faultModel:2
[INFO -- 2018-09-05 18:52:59]
Backtrace BEGIN:
#0  0x0000555555555241 in predict (v=-21) at lreg.cpp:50
#1  0x00005555555553fc in partialDerivate (pos=2) at lreg.cpp:74
#2  0x0000555555555503 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#3  0x00005555555556ac in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde78) at lreg.cpp:182

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0xdf0x090xae0x060x230xc50xf10x3f
Fault Model: Random bit-flip
base address to flip value: 0x555555771360
address max offset: 8
Memory content after  bitflip:0x6b0xf60x9d0x3c0xa30x5a0xf50x45
frame name: train
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 3, capacity 3 = {1.0574015030299709e+29, 1.4066214953184342, -0.074042845659507417}
value address: 0x55555575a180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-05 18:52:59]
Fault Injection Successful after 0.977729320526123s
[INFO -- 2018-09-05 18:53:06]
event type: exit
[INFO -- 2018-09-05 18:53:06]
exit code: 0
