[INFO -- 2018-11-22 20:10:34]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-22 20:10:34]
Initialization strings:
[INFO -- 2018-11-22 20:10:34]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-22 20:10:34]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-22 20:10:34]
initSignal:0
[INFO -- 2018-11-22 20:10:34]
endSignal:3
[INFO -- 2018-11-22 20:10:34]
faultModel:2
[INFO -- 2018-11-22 20:10:35]
Backtrace BEGIN:
#0  0x000055555555536a in partialDerivate (pos=0) at lreg.cpp:73
#1  0x00005555555554b3 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#2  0x000055555555565c in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

68		Calculates the partial derivate of the meanSquaredError function 
69		to the adjustment variable whose position in T is passed in pos
70	*/
71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd810
address max offset: 8
Memory content after  bitflip:0xc90x280xb60x500xd30x390x840xa0
frame name: train
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 105
value: -4.8272483068871369e-152
value address: 0x7fffffffd810
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-22 20:10:35]
Fault Injection Successful after 1.542717695236206s
[INFO -- 2018-11-22 20:10:37]
event type: exit
[INFO -- 2018-11-22 20:10:37]
exit code: 0
