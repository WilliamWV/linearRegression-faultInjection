[INFO -- 2018-11-24 09:23:26]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 09:23:26]
Initialization strings:
[INFO -- 2018-11-24 09:23:27]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 09:23:27]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-24 09:23:27]
initSignal:0
[INFO -- 2018-11-24 09:23:27]
endSignal:2
[INFO -- 2018-11-24 09:23:27]
faultModel:2
[INFO -- 2018-11-24 09:23:28]
Backtrace BEGIN:
#0  partialDerivate (pos=2) at lreg.cpp:73
#1  0x00005555555554b3 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#2  0x000055555555565c in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

68		Calculates the partial derivate of the meanSquaredError function 
69		to the adjustment variable whose position in T is passed in pos
70	*/
71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7c8
address max offset: 8
Memory content after  bitflip:0xec0xf80xc20x5a0xe90xc10x990x21
frame name: adjust
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 83
value: 8.0575920579185397e-147
value address: 0x7fffffffd7c8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-24 09:23:28]
Fault Injection Successful after 1.293083667755127s
[INFO -- 2018-11-24 09:23:30]
event type: exit
[INFO -- 2018-11-24 09:23:30]
exit code: 0
