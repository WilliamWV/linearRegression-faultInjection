[INFO -- 2018-11-22 15:10:33]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-22 15:10:33]
Initialization strings:
[INFO -- 2018-11-22 15:10:33]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-22 15:10:33]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-22 15:10:33]
initSignal:0
[INFO -- 2018-11-22 15:10:33]
endSignal:3
[INFO -- 2018-11-22 15:10:33]
faultModel:2
[EXCEPTION -- 2018-11-22 15:10:35]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-22 15:10:35]
Backtrace BEGIN:
#0  0x0000555555555d18 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a160 <y>, __n=8) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x00005555555552a9 in meanSquaredError () at lreg.cpp:61
#2  0x0000555555555661 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Memory content before bitflip:0x080x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7a0
address max offset: 8
Memory content after  bitflip:0x230x1b0x6c0x900xcf0x660x200x0c
frame name: std::vector<double, std::allocator<double> >::operator[]
symbol name: __n
symbol filename: /usr/include/c++/7/bits/stl_vector.h
symbol line: 795
value: 873811369377143587
value address: 0x7fffffffd7a0
Type: The type is an integer type.
Type sizeof: 8

[INFO -- 2018-11-22 15:10:35]
Fault Injection Successful after 2.981200695037842s
[INFO -- 2018-11-22 15:10:38]
event type: exit
[INFO -- 2018-11-22 15:10:38]
exit code: 0
