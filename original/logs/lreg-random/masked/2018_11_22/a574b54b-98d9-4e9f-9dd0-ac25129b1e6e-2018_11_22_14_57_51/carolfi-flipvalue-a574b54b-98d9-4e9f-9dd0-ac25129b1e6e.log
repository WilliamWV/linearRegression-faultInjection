[INFO -- 2018-11-22 14:57:46]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-22 14:57:46]
Initialization strings:
[INFO -- 2018-11-22 14:57:46]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-22 14:57:46]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-22 14:57:46]
initSignal:0
[INFO -- 2018-11-22 14:57:46]
endSignal:3
[INFO -- 2018-11-22 14:57:46]
faultModel:2
[INFO -- 2018-11-22 14:57:48]
Backtrace BEGIN:
#0  0x0000555555555d01 in std::vector<double, std::allocator<double> >::size (this=0x55555575a140 <x>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x0000555555555237 in meanSquaredError () at lreg.cpp:60
#2  0x0000555555555661 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Fliping a bit of the value pointed by a pointer
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x2f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffe1fd 
address max offset: 1
Memory content after  bitflip:0xcd
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 144
value: 0x7fffffffde58
value address: 0x7fffffffd900
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-22 14:57:48]
Fault Injection Successful after 2.48513126373291s
[INFO -- 2018-11-22 14:57:50]
event type: exit
[INFO -- 2018-11-22 14:57:50]
exit code: 0
