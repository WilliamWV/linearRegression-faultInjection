[INFO -- 2018-09-15 19:21:30]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-15 19:21:30]
Initialization strings:
[INFO -- 2018-09-15 19:21:30]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-15 19:21:30]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-15 19:21:30]
initSignal:0
[INFO -- 2018-09-15 19:21:30]
endSignal:2
[INFO -- 2018-09-15 19:21:30]
faultModel:2
[INFO -- 2018-09-15 19:21:30]
Backtrace BEGIN:
#0  0x00005555555562e3 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd850, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/vector.tcc:204
#1  0x0000555555555691 in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:119
#2  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

199		      std::__alloc_on_copy(_M_get_Tp_allocator(),
200					   __x._M_get_Tp_allocator());
201		    }
202	#endif
203		  const size_type __xlen = __x.size();
204		  if (__xlen > capacity())
205		    {
206		      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
207							   __x.end());
208		      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,

Backtrace END
Fliping a bit of the pointer
Memory content before bitflip:0x680xde0xff0xff0xff0x7f0x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd910
address max offset: 8
Memory content after  bitflip:0x710x950x0e0x5b0xa10xd20x430x7f
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 152
value: 0x7fffffffde68
value address: 0x7fffffffd910
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-09-15 19:21:30]
Fault Injection Successful after 0.8166728019714355s
[INFO -- 2018-09-15 19:21:37]
event type: exit
[INFO -- 2018-09-15 19:21:37]
exit code: 0
