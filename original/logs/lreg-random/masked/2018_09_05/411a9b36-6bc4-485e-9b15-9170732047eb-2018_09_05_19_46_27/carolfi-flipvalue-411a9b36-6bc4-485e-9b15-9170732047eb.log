[INFO -- 2018-09-05 19:46:19]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-05 19:46:19]
Initialization strings:
[INFO -- 2018-09-05 19:46:19]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-05 19:46:19]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-05 19:46:19]
initSignal:0
[INFO -- 2018-09-05 19:46:19]
endSignal:2
[INFO -- 2018-09-05 19:46:19]
faultModel:2
[EXCEPTION -- 2018-09-05 19:46:19]
gdbException: Attempt to dereference a generic pointer.
[EXCEPTION -- 2018-09-05 19:46:19]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-09-05 19:46:19]
Backtrace BEGIN:
#0  0x0000555555555555 in adjust (alpha=0.00020000000000000001) at lreg.cpp:89
#1  0x00005555555556ac in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#2  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde78) at lreg.cpp:182

84		
85		double PD;
86		for(int i = 0; i<T.size(); i++){
87			PD = partialDerivate(i);
88			// alpha is different from the canonical version because this works better
89			T[i]= T[i] - ((alpha / (sqrt( fabs(PD) ))) * PD); 
90		}
91	}
92	
93	/**

Backtrace END
Memory content before bitflip:0x000xb00x600xa10x830x830x500xbf
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7f8
address max offset: 8
Memory content after  bitflip:0x7c0x640x130x850x5e0x7e0x340xbd
frame name: adjust
symbol name: PD
symbol filename: lreg.cpp
symbol line: 85
value: -7.2807998769891932e-14
value address: 0x7fffffffd7f8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-09-05 19:46:19]
Fault Injection Successful after 0.8064498901367188s
[INFO -- 2018-09-05 19:46:26]
event type: exit
[INFO -- 2018-09-05 19:46:26]
exit code: 0
