[INFO -- 2018-09-05 20:20:37]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-05 20:20:37]
Initialization strings:
[INFO -- 2018-09-05 20:20:37]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-05 20:20:37]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-05 20:20:37]
initSignal:0
[INFO -- 2018-09-05 20:20:37]
endSignal:2
[INFO -- 2018-09-05 20:20:37]
faultModel:2
[INFO -- 2018-09-05 20:20:38]
Backtrace BEGIN:
#0  std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator (this=0x7fffffffd8c0) at /usr/include/c++/7/bits/stl_vector.h:116
#1  0x0000555555556127 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd8c0, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/stl_vector.h:333
#2  0x0000555555555713 in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#3  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde78) at lreg.cpp:182

111	    public:
112	      typedef _Alloc allocator_type;
113	
114	      _Tp_alloc_type&
115	      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
116	      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
117	
118	      const _Tp_alloc_type&
119	      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
120	      { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }

Backtrace END
Fliping a bit of the value pointed by a pointer
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x2f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffe216 
address max offset: 1
Memory content after  bitflip:0x88
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 152
value: 0x7fffffffde78
value address: 0x7fffffffd920
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-09-05 20:20:38]
Fault Injection Successful after 1.22361159324646s
[INFO -- 2018-09-05 20:20:44]
event type: exit
[INFO -- 2018-09-05 20:20:44]
exit code: 0
