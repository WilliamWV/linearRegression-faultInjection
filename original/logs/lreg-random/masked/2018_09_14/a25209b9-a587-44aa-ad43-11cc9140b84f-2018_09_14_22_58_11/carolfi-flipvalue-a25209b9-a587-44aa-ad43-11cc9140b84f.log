[INFO -- 2018-09-14 22:58:03]
Starting flip_value script
version: 1.1
[INFO -- 2018-09-14 22:58:03]
Initialization strings:
[INFO -- 2018-09-14 22:58:03]
(1) file /tmp/lreg/lreg
[INFO -- 2018-09-14 22:58:03]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-09-14 22:58:03]
initSignal:0
[INFO -- 2018-09-14 22:58:03]
endSignal:2
[INFO -- 2018-09-14 22:58:03]
faultModel:2
[INFO -- 2018-09-14 22:58:03]
Backtrace BEGIN:
#0  0x0000555555555212 in predict (v=5) at lreg.cpp:50
#1  0x00005555555553fc in partialDerivate (pos=1) at lreg.cpp:74
#2  0x0000555555555503 in adjust (alpha=0.00020000000000000001) at lreg.cpp:87
#3  0x00005555555556ac in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555c26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:182

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x555555771350
address max offset: 8
Memory content after  bitflip:0xdc0x9a0x510x0d0x900x460xa50xeb
frame name: partialDerivate
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 2, capacity 2 = {-0.99999989030523295, 0.99999868812712689}
value address: 0x55555575a180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-09-14 22:58:03]
Fault Injection Successful after 0.9396085739135742s
[INFO -- 2018-09-14 22:58:10]
event type: exit
[INFO -- 2018-09-14 22:58:10]
exit code: 0
