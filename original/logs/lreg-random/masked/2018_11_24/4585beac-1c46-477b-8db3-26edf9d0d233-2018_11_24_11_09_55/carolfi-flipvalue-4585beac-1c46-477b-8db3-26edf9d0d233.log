[INFO -- 2018-11-24 11:09:50]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 11:09:50]
Initialization strings:
[INFO -- 2018-11-24 11:09:50]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 11:09:50]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-24 11:09:50]
initSignal:0
[INFO -- 2018-11-24 11:09:50]
endSignal:2
[INFO -- 2018-11-24 11:09:50]
faultModel:2
[INFO -- 2018-11-24 11:09:52]
Backtrace BEGIN:
#0  0x00005555555554b3 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#1  0x000055555555565c in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#2  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

82	*/
83	void adjust(double alpha){
84		
85		double PD;
86		for(int i = 0; i<T.size(); i++){
87			PD = partialDerivate(i);
88			// alpha is different from the canonical version because this works better
89			T[i]= T[i] - ((alpha / (sqrt( fabs(PD) ))) * PD); 
90		}
91	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x555555771530
address max offset: 8
Memory content after  bitflip:0x690xea0x830x9e0xf60x600x4f0x92
frame name: train
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 16, capacity 16 = {-15, -9, -1, 29, 5, -18, 31, -16, -18, -28, 25, -14, 7, -2, -17, 21}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-24 11:09:52]
Fault Injection Successful after 2.713686227798462s
[INFO -- 2018-11-24 11:09:54]
event type: exit
[INFO -- 2018-11-24 11:09:54]
exit code: 0
