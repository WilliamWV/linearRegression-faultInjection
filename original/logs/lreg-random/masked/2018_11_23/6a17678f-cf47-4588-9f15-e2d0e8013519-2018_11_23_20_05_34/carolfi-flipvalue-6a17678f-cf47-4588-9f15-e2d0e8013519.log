[INFO -- 2018-11-23 20:05:31]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 20:05:31]
Initialization strings:
[INFO -- 2018-11-23 20:05:31]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 20:05:31]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 20:05:31]
initSignal:0
[INFO -- 2018-11-23 20:05:31]
endSignal:3
[INFO -- 2018-11-23 20:05:31]
faultModel:2
[INFO -- 2018-11-23 20:05:33]
Backtrace BEGIN:
#0  0x00005555555552dc in meanSquaredError () at lreg.cpp:61
#1  0x0000555555555661 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:121
#2  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

56		Calculates the mean squared error of T
57	*/
58	double meanSquaredError(){
59		double error = 0;
60		for(int i = 0; i<x.size(); i++){
61			error+= ((predict(x[i]) - y[i]) * (predict(x[i]) - y[i]));	
62		}
63		error /= x.size();
64		return error;
65	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x555555771530
address max offset: 8
Memory content after  bitflip:0x180x120x3a0xff0x6c0xe60x600xfb
frame name: train
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 16, capacity 16 = {-15, -9, -1, 29, 5, -18, 31, -16, -18, -28, 25, -14, 7, -2, -17, 21}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-23 20:05:33]
Fault Injection Successful after 2.263929605484009s
[INFO -- 2018-11-23 20:05:33]
event type: exit
[INFO -- 2018-11-23 20:05:33]
exit code: 0
