[INFO -- 2018-11-23 21:26:11]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 21:26:11]
Initialization strings:
[INFO -- 2018-11-23 21:26:11]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 21:26:11]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 21:26:11]
initSignal:0
[INFO -- 2018-11-23 21:26:11]
endSignal:3
[INFO -- 2018-11-23 21:26:11]
faultModel:2
[INFO -- 2018-11-23 21:26:11]
Backtrace BEGIN:
#0  0x0000555555555cf2 in std::vector<double, std::allocator<double> >::size (this=0x55555575a180 <T>) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x00005555555551a9 in predict (v=-3) at lreg.cpp:49
#2  0x00005555555552ba in meanSquaredError () at lreg.cpp:61
#3  0x0000555555555661 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x080xc0
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd788
address max offset: 8
Memory content after  bitflip:0x230xd70xee0x390x690x310xfb0xc1
frame name: predict
symbol name: v
symbol filename: lreg.cpp
symbol line: 47
value: -7299568542.9275236
value address: 0x7fffffffd788
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-23 21:26:11]
Fault Injection Successful after 0.834791898727417s
[INFO -- 2018-11-23 21:26:12]
event type: exit
[INFO -- 2018-11-23 21:26:12]
exit code: 0
