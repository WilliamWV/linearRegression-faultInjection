[INFO -- 2018-11-23 18:17:12]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 18:17:12]
Initialization strings:
[INFO -- 2018-11-23 18:17:12]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 18:17:12]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 18:17:12]
initSignal:0
[INFO -- 2018-11-23 18:17:12]
endSignal:3
[INFO -- 2018-11-23 18:17:12]
faultModel:2
[EXCEPTION -- 2018-11-23 18:17:13]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-23 18:17:13]
Backtrace BEGIN:
#0  0x00005555555554b3 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#1  0x000055555555565c in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#2  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

82	*/
83	void adjust(double alpha){
84		
85		double PD;
86		for(int i = 0; i<T.size(); i++){
87			PD = partialDerivate(i);
88			// alpha is different from the canonical version because this works better
89			T[i]= T[i] - ((alpha / (sqrt( fabs(PD) ))) * PD); 
90		}
91	}

Backtrace END
Memory content before bitflip:0x7a0xcf0x2a0x3c0xc80x050x0a0x41
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd838
address max offset: 8
Memory content after  bitflip:0x010xf60xf30x810xf50xfa0x320x47
frame name: train
symbol name: MSE
symbol filename: lreg.cpp
symbol line: 117
value: 9.8551396972852771e+34
value address: 0x7fffffffd838
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-23 18:17:13]
Fault Injection Successful after 1.845696210861206s
[INFO -- 2018-11-23 18:17:14]
event type: exit
[INFO -- 2018-11-23 18:17:14]
exit code: 0
