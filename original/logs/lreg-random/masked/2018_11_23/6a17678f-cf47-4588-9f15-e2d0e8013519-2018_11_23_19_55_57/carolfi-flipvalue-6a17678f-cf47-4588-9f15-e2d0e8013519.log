[INFO -- 2018-11-23 19:55:55]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 19:55:55]
Initialization strings:
[INFO -- 2018-11-23 19:55:55]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 19:55:55]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 19:55:55]
initSignal:0
[INFO -- 2018-11-23 19:55:55]
endSignal:3
[INFO -- 2018-11-23 19:55:55]
faultModel:2
[INFO -- 2018-11-23 19:55:56]
Backtrace BEGIN:
#0  0x0000555555557833 in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555771380, __last=0x5555557713a0, __result=0x5555557715d0) at /usr/include/c++/7/bits/stl_algobase.h:367
#1  0x00005555555575e8 in std::__copy_move_a<false, double const*, double*> (__first=0x555555771380, __last=0x5555557713a0, __result=0x5555557715d0) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x00005555555570e7 in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.044869654113342095, __last=0, __result=0.045118378671527133) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x000055555555690b in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.044869654113342095, __last=0, __result=0.045118378671527133) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x000055555555624d in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd840, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x0000555555555641 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:119
#6  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}
371	    };

Backtrace END
Memory content before bitflip:0x5c0x450xdf0x2f0x290x060x0a0x41
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd838
address max offset: 8
Memory content after  bitflip:0x220x5d0x610xc50xf80x9a0x970x43
frame name: train
symbol name: MSE
symbol filename: lreg.cpp
symbol line: 117
value: 4.252363339778807e+17
value address: 0x7fffffffd838
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-23 19:55:56]
Fault Injection Successful after 1.5019707679748535s
[INFO -- 2018-11-23 19:55:57]
event type: exit
[INFO -- 2018-11-23 19:55:57]
exit code: 0
