[INFO -- 2018-11-23 21:17:03]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 21:17:03]
Initialization strings:
[INFO -- 2018-11-23 21:17:03]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 21:17:03]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 21:17:03]
initSignal:0
[INFO -- 2018-11-23 21:17:03]
endSignal:3
[INFO -- 2018-11-23 21:17:03]
faultModel:2
[INFO -- 2018-11-23 21:17:03]
Backtrace BEGIN:
#0  0x00005555555551d0 in predict (v=-10) at lreg.cpp:50
#1  0x00005555555553ac in partialDerivate (pos=0) at lreg.cpp:74
#2  0x00005555555554b3 in adjust (alpha=0.00020000000000000001) at lreg.cpp:87
#3  0x000055555555565c in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x500x130x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575a190 
address max offset: 8
Memory content after  bitflip:0xfe0x4d0xc60x480xf40x6e0xe30x8a
frame name: train
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 2, capacity -1054859138285574312 = {1.067787010939989, -1.0241357519268182}
value address: 0x55555575a180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-23 21:17:03]
Fault Injection Successful after 0.6735813617706299s
[INFO -- 2018-11-23 21:17:04]
event type: exit
[INFO -- 2018-11-23 21:17:04]
exit code: 0
