[INFO -- 2018-11-23 19:35:53]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 19:35:53]
Initialization strings:
[INFO -- 2018-11-23 19:35:53]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 19:35:53]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 19:35:53]
initSignal:0
[INFO -- 2018-11-23 19:35:53]
endSignal:3
[INFO -- 2018-11-23 19:35:53]
faultModel:2
[EXCEPTION -- 2018-11-23 19:35:53]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-23 19:35:54]
Backtrace BEGIN:
#0  predict (v=25) at lreg.cpp:49
#1  0x00005555555553ac in partialDerivate (pos=1) at lreg.cpp:74
#2  0x00005555555554b3 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#3  0x000055555555565c in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

44	/**
45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7c8
address max offset: 8
Memory content after  bitflip:0x020xef0x8d0xd60xa10xe90xaa0xae
frame name: adjust
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 83
value: -6.9267145346229232e-84
value address: 0x7fffffffd7c8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-23 19:35:54]
Fault Injection Successful after 1.740044116973877s
[INFO -- 2018-11-23 19:35:55]
event type: exit
[INFO -- 2018-11-23 19:35:55]
exit code: 0
