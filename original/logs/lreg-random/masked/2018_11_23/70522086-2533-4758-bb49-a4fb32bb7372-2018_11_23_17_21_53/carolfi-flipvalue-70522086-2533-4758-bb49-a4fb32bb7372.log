[INFO -- 2018-11-23 17:21:50]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-23 17:21:50]
Initialization strings:
[INFO -- 2018-11-23 17:21:50]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-23 17:21:50]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-11-23 17:21:50]
initSignal:0
[INFO -- 2018-11-23 17:21:50]
endSignal:3
[INFO -- 2018-11-23 17:21:50]
faultModel:2
[INFO -- 2018-11-23 17:21:51]
Backtrace BEGIN:
#0  0x0000555555555149 in equals (a=std::vector of length 4, capacity 4 = {...}, b=std::vector of length 4, capacity 4 = {...}) at lreg.cpp:39
#1  0x00005555555556f4 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:126
#2  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

34	vector<double> T; // the adjustment variables
35	
36	bool equals(vector<double> a, vector<double> b){
37		if (a.size() != b.size()) return false;
38		for (int i = 0; i<a.size(); i++){
39			if(a[i] != b[i]) return false;
40		}
41		return true;
42	}
43	

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd940
address max offset: 8
Memory content after  bitflip:0x8a0x730x6b0xc80x7f0xf70xfd0x4f
frame name: main
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 160
value: 2.1686985214410092e+77
value address: 0x7fffffffd940
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-23 17:21:51]
Fault Injection Successful after 1.6956894397735596s
[INFO -- 2018-11-23 17:21:52]
event type: exit
[INFO -- 2018-11-23 17:21:52]
exit code: 0
