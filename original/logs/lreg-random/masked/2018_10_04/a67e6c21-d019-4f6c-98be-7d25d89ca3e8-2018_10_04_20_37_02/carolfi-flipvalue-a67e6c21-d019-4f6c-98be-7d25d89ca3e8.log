[INFO -- 2018-10-04 20:36:54]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-04 20:36:54]
Initialization strings:
[INFO -- 2018-10-04 20:36:54]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-04 20:36:54]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-04 20:36:54]
initSignal:0
[INFO -- 2018-10-04 20:36:54]
endSignal:10
[INFO -- 2018-10-04 20:36:54]
faultModel:2
[INFO -- 2018-10-04 20:36:59]
Backtrace BEGIN:
#0  0x00005555555560f1 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd840, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/vector.tcc:204
#1  0x0000555555555641 in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:119
#2  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

199		      std::__alloc_on_copy(_M_get_Tp_allocator(),
200					   __x._M_get_Tp_allocator());
201		    }
202	#endif
203		  const size_type __xlen = __x.size();
204		  if (__xlen > capacity())
205		    {
206		      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
207							   __x.end());
208		      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x480x830x40
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd948
address max offset: 8
Memory content after  bitflip:0xb50xb30x010xcf0xac0x140x860x57
frame name: main
symbol name: temp
symbol filename: lreg.cpp
symbol line: 160
value: 4.2481753674106697e+113
value address: 0x7fffffffd948
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-04 20:36:59]
Fault Injection Successful after 5.934311389923096s
[INFO -- 2018-10-04 20:37:01]
event type: exit
[INFO -- 2018-10-04 20:37:01]
exit code: 0
