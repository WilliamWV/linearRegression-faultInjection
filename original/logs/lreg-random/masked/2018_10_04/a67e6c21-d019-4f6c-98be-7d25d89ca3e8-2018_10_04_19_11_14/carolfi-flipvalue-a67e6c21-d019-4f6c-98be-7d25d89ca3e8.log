[INFO -- 2018-10-04 19:11:05]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-04 19:11:05]
Initialization strings:
[INFO -- 2018-10-04 19:11:05]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-04 19:11:05]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-04 19:11:05]
initSignal:0
[INFO -- 2018-10-04 19:11:05]
endSignal:10
[INFO -- 2018-10-04 19:11:05]
faultModel:2
[INFO -- 2018-10-04 19:11:06]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x55555575a140 <x>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x000055555555530c in meanSquaredError () at lreg.cpp:63
#2  0x0000555555555661 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555ab7 in main (argc=3, argv=0x7fffffffde58) at lreg.cpp:174

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Memory content before bitflip:0x470x290xb90xa40x640x730xca0x40
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7d8
address max offset: 8
Memory content after  bitflip:0x640x940xde0xba0x260x1b0x940x53
frame name: meanSquaredError
symbol name: error
symbol filename: lreg.cpp
symbol line: 59
value: 4.1939729404515482e+94
value address: 0x7fffffffd7d8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-04 19:11:06]
Fault Injection Successful after 1.98736572265625s
[INFO -- 2018-10-04 19:11:13]
event type: exit
[INFO -- 2018-10-04 19:11:13]
exit code: 0
