[INFO -- 2018-10-09 17:39:53]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-09 17:39:53]
Initialization strings:
[INFO -- 2018-10-09 17:39:53]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-09 17:39:53]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-09 17:39:53]
initSignal:0
[INFO -- 2018-10-09 17:39:53]
endSignal:10
[INFO -- 2018-10-09 17:39:53]
faultModel:2
[EXCEPTION -- 2018-10-09 17:39:58]
gdbException: Cannot access memory at address 0x6d266a1fbedd1ed1
[INFO -- 2018-10-09 17:39:58]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x55555575a140 <x>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x0000555555555339 in meanSquaredError () at lreg.cpp:88
#2  0x0000555555555886 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:160
#3  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Memory content before bitflip:0x900x5f0x010x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd910
address max offset: 4
Memory content after  bitflip:0x320x2f0x5b0x81
frame name: main
symbol name: iterations
symbol filename: lreg.cpp
symbol line: 203
value: 2170236722
value address: 0x7fffffffd910
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-10-09 17:39:58]
Fault Injection Successful after 5.965998649597168s
[INFO -- 2018-10-09 17:39:59]
event type: exit
[EXCEPTION -- 2018-10-09 17:39:59]
exit code: no exit code available
