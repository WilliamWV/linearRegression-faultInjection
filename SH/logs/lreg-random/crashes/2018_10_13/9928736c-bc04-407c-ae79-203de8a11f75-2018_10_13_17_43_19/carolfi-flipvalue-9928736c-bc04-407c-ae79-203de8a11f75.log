[INFO -- 2018-10-13 17:43:13]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-13 17:43:13]
Initialization strings:
[INFO -- 2018-10-13 17:43:13]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-13 17:43:13]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-13 17:43:13]
initSignal:0
[INFO -- 2018-10-13 17:43:13]
endSignal:10
[INFO -- 2018-10-13 17:43:13]
faultModel:2
[INFO -- 2018-10-13 17:43:18]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a180 <T>, __n=0) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x0000555555555291 in predict (v=24) at lreg.cpp:77
#2  0x000055555555551d in partialDerivate (pos=2) at lreg.cpp:107
#3  0x0000555555555670 in adjust () at lreg.cpp:123
#4  0x0000555555555881 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:159
#5  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa00x130x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575a188 
address max offset: 8
Memory content after  bitflip:0x260x260x000x750x880xe50xeb0xee
frame name: predict
symbol name: T
symbol filename: lreg.cpp
symbol line: 43
value: std::vector of length -153841440488611243, capacity 4 = {26.138041343824096, 103.10099197269665, -11.271407119390469, -1.9523877551160591, 0, 4.001931731314097e-322, 4.6355706478057827e-310, 1.5810100666919889e-322, -10.000007629394529, 3.2419611224676904e+178, -7.0000000030959599, -16, -14, 1, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 1.1286365773367058e-312, 0, 0, 0, 0, 0, 1.6304166312761136e-322, 4.6355706478247548e-310, 5.8312833074602786, -1.9786790702419219, 1.6304166312761136e-322, 4.6355706478263358e-310, 5.8313026928414908, -1.9784810757574391, 1.6304166312761136e-322, 0, 5.8312833074602786, -1.9786790702419219, 7.1639518646980749e-322, 0, -4, -10, 1, -7, -16, -14, 1, -1057, -881, -1249, -337, -97, -511, -577, -391, 0, 1.3487992131466031e-321, 0, 3, 9, -2, 6, 15, 13, -2, 24, -20, -24, -12, -6, -15, 18, 15, -17, 23, 9, 16, 26, -2, -12, -1, 28, -20, 15, -5, 9, 19, -4, -5, 0, 1.3487992131466031e-321, 4.6355706478350314e-310, -4, -10, 1, -7, -16, -14, 1, -1057, -881, -1249, -337, -97, -511, -577, -391, -647, -967, -127, -449, -51916, 24, 5274, 5, -64926, 24306, -9819, 381, -2055, -20115, 194, 381, 0, 2.6136072665001942e-321, -8, 3, 9, -2, 6, 15, 13, -2, 24, -20, -24, -12, -6, -15, 18, 15, -17, 23, 9, 16, 26, -2, -12, -1, 28, -20, 15, -5, 9, 19, -4, -5, 24, -21, 27, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.6136072665001942e-321, 7, -4, -10, 1, -7, -16, -14, 1, -1057, -881...}
value address: 0x55555575a180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-13 17:43:18]
Fault Injection Successful after 5.843966484069824s
[INFO -- 2018-10-13 17:43:19]
event type: exit
[EXCEPTION -- 2018-10-13 17:43:19]
exit code: no exit code available
