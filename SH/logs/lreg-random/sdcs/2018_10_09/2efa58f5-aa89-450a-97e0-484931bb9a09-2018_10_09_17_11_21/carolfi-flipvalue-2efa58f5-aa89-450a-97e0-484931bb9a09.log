[INFO -- 2018-10-09 17:11:11]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-09 17:11:11]
Initialization strings:
[INFO -- 2018-10-09 17:11:11]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-09 17:11:11]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-09 17:11:11]
initSignal:0
[INFO -- 2018-10-09 17:11:11]
endSignal:10
[INFO -- 2018-10-09 17:11:11]
faultModel:2
[INFO -- 2018-10-09 17:11:11]
Backtrace BEGIN:
#0  selectTriUInt (a=1, b=1, c=1) at lreg.cpp:49
#1  0x0000555555555256 in predict (v=13) at lreg.cpp:74
#2  0x00005555555553e9 in meanSquaredError () at lreg.cpp:91
#3  0x0000555555555886 in train (iterations=30000, N=2, stopsWhenStable=true) at lreg.cpp:160
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

44	
45	double a1, a2, a3; // triplication of alpha
46	
47	UINT selectTriUInt(UINT a, UINT b, UINT c){
48		return (a == b)? a : c;
49	}
50	double selectTriDouble(double a, double b, double c){
51		return (a == b)? a : c;
52	}
53	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x2e0xc0
Fault Model: Random bit-flip
base address to flip value: 0x5555557713b0
address max offset: 8
Memory content after  bitflip:0x890xeb0x570x1c0x8a0x120xe50x08
frame name: main
symbol name: y
symbol filename: lreg.cpp
symbol line: 42
value: std::vector of length 8, capacity 8 = {8.1689878309207452e-266, -15, 13, 13, 12, 14, -11, -2}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-09 17:11:11]
Fault Injection Successful after 0.8082313537597656s
[INFO -- 2018-10-09 17:11:20]
event type: exit
[INFO -- 2018-10-09 17:11:20]
exit code: 0
