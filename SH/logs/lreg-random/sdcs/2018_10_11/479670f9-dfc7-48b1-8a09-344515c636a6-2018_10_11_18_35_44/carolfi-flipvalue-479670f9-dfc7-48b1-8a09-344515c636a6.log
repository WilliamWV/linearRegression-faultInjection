[INFO -- 2018-10-11 18:35:31]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-11 18:35:31]
Initialization strings:
[INFO -- 2018-10-11 18:35:31]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-11 18:35:31]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-11 18:35:31]
initSignal:0
[INFO -- 2018-10-11 18:35:31]
endSignal:10
[INFO -- 2018-10-11 18:35:31]
faultModel:2
[EXCEPTION -- 2018-10-11 18:35:32]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-10-11 18:35:32]
Backtrace BEGIN:
#0  0x000055555555533c in meanSquaredError () at lreg.cpp:88
#1  0x0000555555555886 in train (iterations=30000, N=2, stopsWhenStable=true) at lreg.cpp:160
#2  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

83		Calculates the mean squared error of T
84	*/
85	double meanSquaredError(){
86		double error = 0;
87		for(UINT i1 = 0, i2 = 0, i3 = 0; 
88			selectTriUInt(i1, i2, i3)<x.size(); 
89			i1++, i2++, i3++)
90		{
91			error+= ((predict(x[selectTriUInt(i1, i2, i3)]) - y[selectTriUInt(i1, i2, i3)]) * (predict(x[selectTriUInt(i1, i2, i3)]) - y[selectTriUInt(i1, i2, i3)]));	
92		}

Backtrace END
Memory content before bitflip:0x850x670x270x1b0x0e0x620xeb0x3d
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7d8
address max offset: 8
Memory content after  bitflip:0x1f0xeb0xb00xe70xd60xbd0x4b0x21
frame name: meanSquaredError
symbol name: error
symbol filename: lreg.cpp
symbol line: 86
value: 2.7119584566589102e-148
value address: 0x7fffffffd7d8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-11 18:35:32]
Fault Injection Successful after 1.8592946529388428s
[INFO -- 2018-10-11 18:35:43]
event type: exit
[INFO -- 2018-10-11 18:35:43]
exit code: 0
