[INFO -- 2018-10-12 21:00:18]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-12 21:00:18]
Initialization strings:
[INFO -- 2018-10-12 21:00:18]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-12 21:00:18]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-12 21:00:18]
initSignal:0
[INFO -- 2018-10-12 21:00:18]
endSignal:10
[INFO -- 2018-10-12 21:00:18]
faultModel:2
[INFO -- 2018-10-12 21:00:20]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x55555575a140 <x>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x00005555555554db in partialDerivate (pos=0) at lreg.cpp:104
#2  0x0000555555555670 in adjust () at lreg.cpp:123
#3  0x0000555555555881 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:159
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Memory content before bitflip:0x320x2e0x1e0xb60xa50x660xd80x40
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd820
address max offset: 8
Memory content after  bitflip:0xeb0xb60x840x710xd60x450x250x96
frame name: train
symbol name: bestMSE
symbol filename: lreg.cpp
symbol line: 152
value: -5.4279725725467967e-202
value address: 0x7fffffffd820
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-12 21:00:20]
Fault Injection Successful after 2.7224557399749756s
[INFO -- 2018-10-12 21:00:31]
event type: exit
[INFO -- 2018-10-12 21:00:31]
exit code: 0
