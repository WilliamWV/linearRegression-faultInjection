[INFO -- 2018-10-13 18:52:06]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-13 18:52:06]
Initialization strings:
[INFO -- 2018-10-13 18:52:06]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-13 18:52:06]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-13 18:52:06]
initSignal:0
[INFO -- 2018-10-13 18:52:06]
endSignal:10
[INFO -- 2018-10-13 18:52:06]
faultModel:2
[INFO -- 2018-10-13 18:52:10]
Backtrace BEGIN:
#0  0x0000555555556063 in std::vector<double, std::allocator<double> >::operator[] (this=0x7fffffffd890, __n=0) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x00005555555551d4 in equals (a=std::vector of length 4, capacity 4 = {...}, b=std::vector of length 4, capacity 4 = {...}) at lreg.cpp:62
#2  0x0000555555555919 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:165
#3  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Random bit-flip
base address to flip value: 0x55555575a198 
address max offset: 8
Memory content after  bitflip:0x000xeb0x090x580xf80x5c0x8f0x26
frame name: equals
symbol name: a1
symbol filename: lreg.cpp
symbol line: 45
value: 5.9305047355901155e-123
value address: 0x55555575a198 <a1>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-13 18:52:10]
Fault Injection Successful after 4.142636775970459s
[INFO -- 2018-10-13 18:52:16]
event type: exit
[INFO -- 2018-10-13 18:52:16]
exit code: 0
