[INFO -- 2018-10-13 11:53:42]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-13 11:53:42]
Initialization strings:
[INFO -- 2018-10-13 11:53:42]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-13 11:53:42]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-13 11:53:42]
initSignal:0
[INFO -- 2018-10-13 11:53:42]
endSignal:10
[INFO -- 2018-10-13 11:53:42]
faultModel:2
[EXCEPTION -- 2018-10-13 11:53:42]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-10-13 11:53:43]
Backtrace BEGIN:
#0  adjust () at lreg.cpp:120
#1  0x0000555555555881 in train (iterations=30000, N=2, stopsWhenStable=true) at lreg.cpp:159
#2  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

115	*/
116	void adjust(){
117		
118		double PD;
119		for(UINT i1 = 0, i2 = 0, i3 = 0; 
120			selectTriUInt(i1, i2, i3)<T.size(); 
121			i1++, i2++, i3++)
122		{
123			PD = partialDerivate(selectTriUInt(i1, i2, i3));
124			// alpha is different from the canonical version because this works better

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd950
address max offset: 8
Memory content after  bitflip:0x670x1a0x770xc00x980xf60xf30xf5
frame name: main
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 202
value: -1.5347156252513577e+260
value address: 0x7fffffffd950
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-13 11:53:43]
Fault Injection Successful after 1.057387351989746s
[INFO -- 2018-10-13 11:53:52]
event type: exit
[INFO -- 2018-10-13 11:53:52]
exit code: 0
