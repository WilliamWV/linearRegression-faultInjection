[INFO -- 2018-10-08 19:22:37]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-08 19:22:37]
Initialization strings:
[INFO -- 2018-10-08 19:22:37]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-08 19:22:37]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-08 19:22:37]
initSignal:0
[INFO -- 2018-10-08 19:22:37]
endSignal:10
[INFO -- 2018-10-08 19:22:37]
faultModel:2
[INFO -- 2018-10-08 19:22:38]
Backtrace BEGIN:
#0  0x000055555555602e in std::vector<double, std::allocator<double> >::size (this=0x400000004) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x00005555555554db in partialDerivate (pos=1) at lreg.cpp:104
#2  0x0000555555555670 in adjust () at lreg.cpp:123
#3  0x0000555555555881 in train (iterations=30000, N=2, stopsWhenStable=true) at lreg.cpp:159
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x55555575a198 
address max offset: 8
Memory content after  bitflip:0xd00x2d0x760x9a0x360xd00x3a0xb0
frame name: main
symbol name: a1
symbol filename: lreg.cpp
symbol line: 45
value: -2.3156446487709842e-76
value address: 0x55555575a198 <a1>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-08 19:22:38]
Fault Injection Successful after 1.0734939575195312s
[INFO -- 2018-10-08 19:22:47]
event type: exit
[INFO -- 2018-10-08 19:22:47]
exit code: 0
