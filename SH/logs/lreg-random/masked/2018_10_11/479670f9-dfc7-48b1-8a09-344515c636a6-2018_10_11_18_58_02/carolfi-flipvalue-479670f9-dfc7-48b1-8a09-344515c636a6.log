[INFO -- 2018-10-11 18:57:51]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-11 18:57:51]
Initialization strings:
[INFO -- 2018-10-11 18:57:51]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-11 18:57:51]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-11 18:57:51]
initSignal:0
[INFO -- 2018-10-11 18:57:51]
endSignal:10
[INFO -- 2018-10-11 18:57:51]
faultModel:2
[INFO -- 2018-10-11 18:57:52]
Backtrace BEGIN:
#0  0x000055555555521c in predict (v=2) at lreg.cpp:71
#1  0x000055555555551d in partialDerivate (pos=2) at lreg.cpp:107
#2  0x0000555555555670 in adjust () at lreg.cpp:123
#3  0x0000555555555881 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:159
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

66	}
67	
68	/**
69		Predicts the value related to v using the Ts variables
70	*/
71	double predict(double v){
72		double val = 0;
73		for(UINT i1 = 0, i2 = 0, i3 = 0; 
74			selectTriUInt(i1, i2, i3)<T.size(); 
75			i1++, i2++, i3++)

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x555555771750
address max offset: 8
Memory content after  bitflip:0x280x310x5a0x460x130x2a0x510xc3
frame name: partialDerivate
symbol name: y
symbol filename: lreg.cpp
symbol line: 42
value: std::vector of length 20, capacity 32 = {6, 3, 4, 12, -3, 8, -9, 13, 839, 287, 1519, 727, 47, 119, 2207, 1519, 959, 959, 1847, 167}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-11 18:57:52]
Fault Injection Successful after 1.887321949005127s
[INFO -- 2018-10-11 18:58:01]
event type: exit
[INFO -- 2018-10-11 18:58:01]
exit code: 0
