[INFO -- 2018-10-09 19:17:25]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-09 19:17:25]
Initialization strings:
[INFO -- 2018-10-09 19:17:25]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-09 19:17:25]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-09 19:17:25]
initSignal:0
[INFO -- 2018-10-09 19:17:25]
endSignal:10
[INFO -- 2018-10-09 19:17:25]
faultModel:2
[INFO -- 2018-10-09 19:17:32]
Backtrace BEGIN:
#0  0x0000555555555221 in predict (v=2) at lreg.cpp:71
#1  0x000055555555551d in partialDerivate (pos=2) at lreg.cpp:107
#2  0x0000555555555670 in adjust () at lreg.cpp:123
#3  0x0000555555555881 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:159
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

66	}
67	
68	/**
69		Predicts the value related to v using the Ts variables
70	*/
71	double predict(double v){
72		double val = 0;
73		for(UINT i1 = 0, i2 = 0, i3 = 0; 
74			selectTriUInt(i1, i2, i3)<T.size(); 
75			i1++, i2++, i3++)

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x5555557713a0
address max offset: 8
Memory content after  bitflip:0xb40x4e0xfb0x890xcc0x650xf20x04
frame name: adjust
symbol name: T
symbol filename: lreg.cpp
symbol line: 43
value: std::vector of length 4, capacity 4 = {-8.9792939382060002, 242.1511248880808, -5.0361181080144535, -1.9255799904275561}
value address: 0x55555575a180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-09 19:17:32]
Fault Injection Successful after 7.5532073974609375s
[INFO -- 2018-10-09 19:17:36]
event type: exit
[INFO -- 2018-10-09 19:17:36]
exit code: 0
