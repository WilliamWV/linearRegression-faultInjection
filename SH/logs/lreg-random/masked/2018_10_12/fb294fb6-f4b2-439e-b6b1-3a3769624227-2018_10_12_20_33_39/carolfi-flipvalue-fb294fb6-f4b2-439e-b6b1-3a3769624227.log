[INFO -- 2018-10-12 20:33:21]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-12 20:33:21]
Initialization strings:
[INFO -- 2018-10-12 20:33:21]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-12 20:33:21]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-12 20:33:21]
initSignal:0
[INFO -- 2018-10-12 20:33:21]
endSignal:10
[INFO -- 2018-10-12 20:33:21]
faultModel:2
[INFO -- 2018-10-12 20:33:24]
Backtrace BEGIN:
#0  0x000055555555634b in std::vector<double, std::allocator<double> >::operator= (this=0x555555556767 <std::_Vector_base<double, std::allocator<double> >::~_Vector_base()+77>, __x=std::vector of length -5864062013128, capacity -12908524206846 = {...}) at /usr/include/c++/7/bits/vector.tcc:179
#1  0x000055555555587c in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:158
#2  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

174	      return __first;
175	    }
176	
177	  template<typename _Tp, typename _Alloc>
178	    vector<_Tp, _Alloc>&
179	    vector<_Tp, _Alloc>::
180	    operator=(const vector<_Tp, _Alloc>& __x)
181	    {
182	      if (&__x != this)
183		{

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x55555575a198 
address max offset: 8
Memory content after  bitflip:0xf20x100xdf0x240x270xed0xf00x64
frame name: std::vector<double, std::allocator<double> >::operator=
symbol name: a1
symbol filename: lreg.cpp
symbol line: 45
value: 1.7147527167598553e+178
value address: 0x55555575a198 <a1>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-12 20:33:24]
Fault Injection Successful after 3.9278955459594727s
[INFO -- 2018-10-12 20:33:36]
event type: exit
[INFO -- 2018-10-12 20:33:36]
exit code: 0
