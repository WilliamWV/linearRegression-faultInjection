[INFO -- 2018-10-06 19:43:34]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-06 19:43:34]
Initialization strings:
[INFO -- 2018-10-06 19:43:34]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-06 19:43:34]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-06 19:43:34]
initSignal:0
[INFO -- 2018-10-06 19:43:34]
endSignal:10
[INFO -- 2018-10-06 19:43:34]
faultModel:2
[INFO -- 2018-10-06 19:43:37]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x1c0000001c) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x00005555555554db in partialDerivate (pos=0) at lreg.cpp:104
#2  0x0000555555555670 in adjust () at lreg.cpp:123
#3  0x0000555555555881 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:159
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7d8
address max offset: 8
Memory content after  bitflip:0x460xc50x1a0x6e0xe10x250x650x97
frame name: adjust
symbol name: PD
symbol filename: lreg.cpp
symbol line: 118
value: -5.6582422654603577e-196
value address: 0x7fffffffd7d8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-06 19:43:37]
Fault Injection Successful after 3.643517017364502s
[INFO -- 2018-10-06 19:43:44]
event type: exit
[INFO -- 2018-10-06 19:43:44]
exit code: 0
