[INFO -- 2018-10-06 16:00:37]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-06 16:00:37]
Initialization strings:
[INFO -- 2018-10-06 16:00:37]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-06 16:00:37]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-06 16:00:37]
initSignal:0
[INFO -- 2018-10-06 16:00:37]
endSignal:10
[INFO -- 2018-10-06 16:00:37]
faultModel:2
[INFO -- 2018-10-06 16:00:39]
Backtrace BEGIN:
#0  0x0000555555555291 in predict (v=14) at lreg.cpp:77
#1  0x000055555555537b in meanSquaredError () at lreg.cpp:91
#2  0x0000555555555886 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:160
#3  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

72		double val = 0;
73		for(UINT i1 = 0, i2 = 0, i3 = 0; 
74			selectTriUInt(i1, i2, i3)<T.size(); 
75			i1++, i2++, i3++)
76		{
77			val+= (T[selectTriUInt(i1, i2, i3)] * pow(v, selectTriUInt(i1, i2, i3)));
78		}
79		return val;
80		
81	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x555555771880
address max offset: 8
Memory content after  bitflip:0xba0x8b0xda0x1f0xfd0xba0xf90x13
frame name: main
symbol name: x
symbol filename: lreg.cpp
symbol line: 41
value: std::vector of length 36, capacity 64 = {-7, -9, -3, -12, 0, -13, -12, -3, -22, 10, -7, 22, -20, 15, -2, 19, -6, -11, -18, 24, 20, 26, 14, 11, 6, -17, -5, 17, 12, 12, -22, 15, 17, -1, -5, -27}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-06 16:00:39]
Fault Injection Successful after 2.717949390411377s
[INFO -- 2018-10-06 16:00:47]
event type: exit
[INFO -- 2018-10-06 16:00:47]
exit code: 0
