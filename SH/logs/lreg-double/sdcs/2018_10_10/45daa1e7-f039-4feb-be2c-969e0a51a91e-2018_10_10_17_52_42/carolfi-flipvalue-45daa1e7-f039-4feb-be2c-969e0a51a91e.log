[INFO -- 2018-10-10 17:52:31]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-10 17:52:31]
Initialization strings:
[INFO -- 2018-10-10 17:52:31]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-10 17:52:31]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-10 17:52:31]
initSignal:0
[INFO -- 2018-10-10 17:52:31]
endSignal:10
[INFO -- 2018-10-10 17:52:31]
faultModel:1
[INFO -- 2018-10-10 17:52:32]
Backtrace BEGIN:
#0  0x0000555555555291 in predict (v=-11) at lreg.cpp:77
#1  0x000055555555551d in partialDerivate (pos=1) at lreg.cpp:107
#2  0x0000555555555670 in adjust () at lreg.cpp:123
#3  0x0000555555555881 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:159
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

72		double val = 0;
73		for(UINT i1 = 0, i2 = 0, i3 = 0; 
74			selectTriUInt(i1, i2, i3)<T.size(); 
75			i1++, i2++, i3++)
76		{
77			val+= (T[selectTriUInt(i1, i2, i3)] * pow(v, selectTriUInt(i1, i2, i3)));
78		}
79		return val;
80		
81	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000xf00xbf
Fault Model: Double bit-flip
base address to flip value: 0x555555771650
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x000xfc0xbf
frame name: adjust
symbol name: y
symbol filename: lreg.cpp
symbol line: 42
value: std::vector of length 20, capacity 32 = {-1.75, -1, -1, -1, -1, -1, -1, -1, 263, 1199, 479, 143, 111, 311, 23, 683, -1, 263, -1, 1103}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-10 17:52:32]
Fault Injection Successful after 1.1660759449005127s
[INFO -- 2018-10-10 17:52:40]
event type: exit
[INFO -- 2018-10-10 17:52:40]
exit code: 0
