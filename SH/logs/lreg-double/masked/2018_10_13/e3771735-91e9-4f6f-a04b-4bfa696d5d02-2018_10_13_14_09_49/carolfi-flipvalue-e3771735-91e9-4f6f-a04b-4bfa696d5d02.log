[INFO -- 2018-10-13 14:09:38]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-13 14:09:38]
Initialization strings:
[INFO -- 2018-10-13 14:09:38]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-13 14:09:38]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-13 14:09:38]
initSignal:0
[INFO -- 2018-10-13 14:09:38]
endSignal:10
[INFO -- 2018-10-13 14:09:38]
faultModel:1
[INFO -- 2018-10-13 14:09:39]
Backtrace BEGIN:
#0  0x0000555555557b8b in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555771360, __last=0x555555771370, __result=0x555555771470) at /usr/include/c++/7/bits/stl_algobase.h:367
#1  0x0000555555557940 in std::__copy_move_a<false, double const*, double*> (__first=0x555555771360, __last=0x555555771370, __result=0x555555771470) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x0000555555557cae in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-1.0000001224288089, __last=0, __result=0x555555771470) at /usr/include/c++/7/bits/stl_algobase.h:424
#3  0x0000555555557b05 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-1.0000001224288089, __last=0, __result=0x555555771470) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555557888 in std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-1.0000001224288089, __last=0, __result=0x555555771470) at /usr/include/c++/7/bits/stl_uninitialized.h:101
#5  0x00005555555572fe in std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-1.0000001224288089, __last=0, __result=0x555555771470) at /usr/include/c++/7/bits/stl_uninitialized.h:134
#6  0x0000555555556a57 in std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double> (__first=-1.0000001224288089, __last=0, __result=0x555555771470) at /usr/include/c++/7/bits/stl_uninitialized.h:289
#7  0x00005555555562dd in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd890, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#8  0x00005555555558e8 in train (iterations=30000, N=2, stopsWhenStable=true) at lreg.cpp:165
#9  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}
371	    };

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Double bit-flip
base address to flip value: 0x55555575a198 
address max offset: 8
Memory content after  bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x77
frame name: std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>
symbol name: a1
symbol filename: lreg.cpp
symbol line: 45
value: 1.0565890622713305e+266
value address: 0x55555575a198 <a1>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-13 14:09:39]
Fault Injection Successful after 1.3864197731018066s
[INFO -- 2018-10-13 14:09:48]
event type: exit
[INFO -- 2018-10-13 14:09:48]
exit code: 0
