[INFO -- 2018-10-06 17:41:24]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-06 17:41:24]
Initialization strings:
[INFO -- 2018-10-06 17:41:24]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-06 17:41:24]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-06 17:41:24]
initSignal:0
[INFO -- 2018-10-06 17:41:24]
endSignal:10
[INFO -- 2018-10-06 17:41:24]
faultModel:1
[INFO -- 2018-10-06 17:41:26]
Backtrace BEGIN:
#0  0x0000555555556063 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a140 <x>, __n=18) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x00005555555553d8 in meanSquaredError () at lreg.cpp:91
#2  0x0000555555555886 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:160
#3  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Double bit-flip
base address to flip value: 0x55555575a198 
address max offset: 8
Memory content after  bitflip:0x2d0x430x1c0xeb0x820x360x0a0x3f
frame name: std::vector<double, std::allocator<double> >::operator[]
symbol name: a1
symbol filename: lreg.cpp
symbol line: 45
value: 4.9997206032276156e-05
value address: 0x55555575a198 <a1>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-06 17:41:26]
Fault Injection Successful after 2.0256993770599365s
[INFO -- 2018-10-06 17:41:34]
event type: exit
[INFO -- 2018-10-06 17:41:34]
exit code: 0
