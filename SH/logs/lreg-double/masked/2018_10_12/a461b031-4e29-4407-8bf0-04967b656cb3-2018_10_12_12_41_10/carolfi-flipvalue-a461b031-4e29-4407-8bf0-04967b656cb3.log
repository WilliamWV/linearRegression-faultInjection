[INFO -- 2018-10-12 12:40:59]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-12 12:40:59]
Initialization strings:
[INFO -- 2018-10-12 12:40:59]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-12 12:40:59]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-12 12:40:59]
initSignal:0
[INFO -- 2018-10-12 12:40:59]
endSignal:10
[INFO -- 2018-10-12 12:40:59]
faultModel:1
[INFO -- 2018-10-12 12:41:07]
Backtrace BEGIN:
#0  0x0000555555556067 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a140 <x>, __n=35) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x000055555555550c in partialDerivate (pos=1) at lreg.cpp:107
#2  0x0000555555555670 in adjust () at lreg.cpp:123
#3  0x0000555555555881 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:159
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0xe10x010xa90xbb0x500xc90x9a0x41
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd828
address max offset: 8
Memory content after  bitflip:0xf30x010xa90xbb0x500xc90x9a0x41
frame name: train
symbol name: MSE
symbol filename: lreg.cpp
symbol line: 153
value: 112350254.9150465
value address: 0x7fffffffd828
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-12 12:41:07]
Fault Injection Successful after 8.729968309402466s
[INFO -- 2018-10-12 12:41:10]
event type: exit
[INFO -- 2018-10-12 12:41:10]
exit code: 0
