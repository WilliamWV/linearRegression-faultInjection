[INFO -- 2018-10-13 17:43:44]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-13 17:43:44]
Initialization strings:
[INFO -- 2018-10-13 17:43:44]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-13 17:43:44]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-13 17:43:44]
initSignal:0
[INFO -- 2018-10-13 17:43:44]
endSignal:10
[INFO -- 2018-10-13 17:43:44]
faultModel:1
[EXCEPTION -- 2018-10-13 17:43:51]
gdbException: Cannot access memory at address 0x555555f61bb0
[INFO -- 2018-10-13 17:43:51]
Backtrace BEGIN:
#0  0x00005555555555ab in partialDerivate (pos=0) at lreg.cpp:103
#1  0x0000555555555670 in adjust () at lreg.cpp:123
#2  0x0000555555555881 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:159
#3  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

98		Calculates the partial derivate of the meanSquaredError function 
99		to the adjustment variable whose position in T is passed in pos
100	*/
101	double partialDerivate(UINT pos){
102		double pD = 0;
103		for(UINT i1 = 0, i2 = 0, i3 = 0; 
104			selectTriUInt(i1, i2, i3)<x.size(); 
105			i1++, i2++, i3++)
106		{
107			pD += ((predict(x[selectTriUInt(i1, i2, i3)]) - y[selectTriUInt(i1, i2, i3)])*pow(x[selectTriUInt(i1, i2, i3)], pos));	

Backtrace END
Memory content before bitflip:0x900x5f0x010x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd910
address max offset: 4
Memory content after  bitflip:0x930x5f0x010x00
frame name: main
symbol name: iterations
symbol filename: lreg.cpp
symbol line: 203
value: 90003
value address: 0x7fffffffd910
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-10-13 17:43:51]
Fault Injection Successful after 7.407396078109741s
[INFO -- 2018-10-13 17:43:52]
event type: exit
[EXCEPTION -- 2018-10-13 17:43:52]
exit code: no exit code available
