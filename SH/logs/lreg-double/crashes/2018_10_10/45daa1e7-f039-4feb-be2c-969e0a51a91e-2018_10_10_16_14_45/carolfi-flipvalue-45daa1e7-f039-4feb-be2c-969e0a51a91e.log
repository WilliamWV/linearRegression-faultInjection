[INFO -- 2018-10-10 16:14:42]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-10 16:14:42]
Initialization strings:
[INFO -- 2018-10-10 16:14:42]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-10 16:14:42]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-10 16:14:42]
initSignal:0
[INFO -- 2018-10-10 16:14:42]
endSignal:10
[INFO -- 2018-10-10 16:14:42]
faultModel:1
[EXCEPTION -- 2018-10-10 16:14:43]
gdbException: Cannot access memory at address 0x554455771360
[INFO -- 2018-10-10 16:14:44]
Backtrace BEGIN:
#0  0x000055555555602e in std::vector<double, std::allocator<double> >::size (this=0x0) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x0000555555555264 in predict (v=1) at lreg.cpp:74
#2  0x00005555555553e9 in meanSquaredError () at lreg.cpp:91
#3  0x0000555555555886 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:160
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Double bit-flip
base address to flip value: 0x55555575a198 
address max offset: 8
Memory content after  bitflip:0x2d0x430x1c0xeb0xe20x350x0a0x3f
frame name: main
symbol name: a1
symbol filename: lreg.cpp
symbol line: 45
value: 4.9992549419403079e-05
value address: 0x55555575a198 <a1>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-10 16:14:44]
Fault Injection Successful after 2.1264915466308594s
[INFO -- 2018-10-10 16:14:44]
event type: exit
[EXCEPTION -- 2018-10-10 16:14:44]
exit code: no exit code available
