[INFO -- 2018-10-12 20:00:20]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-12 20:00:20]
Initialization strings:
[INFO -- 2018-10-12 20:00:20]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-12 20:00:20]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-12 20:00:20]
initSignal:0
[INFO -- 2018-10-12 20:00:20]
endSignal:10
[INFO -- 2018-10-12 20:00:20]
faultModel:1
[INFO -- 2018-10-12 20:00:22]
Backtrace BEGIN:
#0  partialDerivate (pos=1) at lreg.cpp:103
#1  0x0000555555555670 in adjust () at lreg.cpp:123
#2  0x0000555555555881 in train (iterations=30000, N=2, stopsWhenStable=true) at lreg.cpp:159
#3  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

98		Calculates the partial derivate of the meanSquaredError function 
99		to the adjustment variable whose position in T is passed in pos
100	*/
101	double partialDerivate(UINT pos){
102		double pD = 0;
103		for(UINT i1 = 0, i2 = 0, i3 = 0; 
104			selectTriUInt(i1, i2, i3)<x.size(); 
105			i1++, i2++, i3++)
106		{
107			pD += ((predict(x[selectTriUInt(i1, i2, i3)]) - y[selectTriUInt(i1, i2, i3)])*pow(x[selectTriUInt(i1, i2, i3)], pos));	

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x2a0x3f
Fault Model: Double bit-flip
base address to flip value: 0x55555575a1a8 
address max offset: 8
Memory content after  bitflip:0x2d0xcb0x1c0xeb0xe20x360x2a0x3f
frame name: adjust
symbol name: a3
symbol filename: lreg.cpp
symbol line: 45
value: 0.0002000000000009437
value address: 0x55555575a1a8 <a3>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-12 20:00:22]
Fault Injection Successful after 2.704636812210083s
