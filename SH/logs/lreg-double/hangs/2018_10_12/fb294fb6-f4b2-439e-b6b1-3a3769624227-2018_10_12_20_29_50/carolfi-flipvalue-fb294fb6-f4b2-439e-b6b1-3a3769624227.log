[INFO -- 2018-10-12 20:29:25]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-12 20:29:25]
Initialization strings:
[INFO -- 2018-10-12 20:29:25]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-12 20:29:25]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-12 20:29:25]
initSignal:0
[INFO -- 2018-10-12 20:29:25]
endSignal:10
[INFO -- 2018-10-12 20:29:25]
faultModel:1
[INFO -- 2018-10-12 20:29:27]
Backtrace BEGIN:
#0  predict (v=-10) at lreg.cpp:72
#1  0x000055555555551d in partialDerivate (pos=1) at lreg.cpp:107
#2  0x0000555555555670 in adjust () at lreg.cpp:123
#3  0x0000555555555881 in train (iterations=30000, N=2, stopsWhenStable=true) at lreg.cpp:159
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

67	
68	/**
69		Predicts the value related to v using the Ts variables
70	*/
71	double predict(double v){
72		double val = 0;
73		for(UINT i1 = 0, i2 = 0, i3 = 0; 
74			selectTriUInt(i1, i2, i3)<T.size(); 
75			i1++, i2++, i3++)
76		{

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x555555771330
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x000x000x18
frame name: predict
symbol name: x
symbol filename: lreg.cpp
symbol line: 41
value: std::vector of length 8, capacity 8 = {-11, 4, -10, -11, 10, 16, 13, -10}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-12 20:29:27]
Fault Injection Successful after 2.258517265319824s
