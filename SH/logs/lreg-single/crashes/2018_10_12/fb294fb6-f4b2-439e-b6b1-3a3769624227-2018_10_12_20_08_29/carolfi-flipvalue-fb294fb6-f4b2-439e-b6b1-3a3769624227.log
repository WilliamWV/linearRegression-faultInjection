[INFO -- 2018-10-12 20:08:12]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-12 20:08:12]
Initialization strings:
[INFO -- 2018-10-12 20:08:12]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-12 20:08:12]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-12 20:08:12]
initSignal:0
[INFO -- 2018-10-12 20:08:12]
endSignal:10
[INFO -- 2018-10-12 20:08:12]
faultModel:0
[INFO -- 2018-10-12 20:08:21]
Backtrace BEGIN:
#0  0x000055555555603d in std::vector<double, std::allocator<double> >::size (this=0x55555575a180 <T>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x0000555555555264 in predict (v=-25) at lreg.cpp:74
#2  0x000055555555551d in partialDerivate (pos=2) at lreg.cpp:107
#3  0x0000555555555670 in adjust () at lreg.cpp:123
#4  0x0000555555555881 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:159
#5  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x600x170x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575a140 
address max offset: 8
Memory content after  bitflip:0x620x170x770x550x550x550x000x00
frame name: partialDerivate
symbol name: x
symbol filename: lreg.cpp
symbol line: 41
value: std::vector of length 35, capacity 63 = {1.0438097295758175e-309, 3.4800730971830466e-310, 1.0437672896599981e-309, 1.0438097295758175e-309, 3.4843170887649771e-310, 3.4868634837141355e-310, 3.4855902862395563e-310, 1.0437672896599981e-309, 3.4868634837141355e-310, 1.0438097295758175e-309, 3.4885610803469077e-310, 3.4883488807678112e-310, 3.483468290448591e-310, 1.0441068089865526e-309, 1.0440643690707333e-309, 1.0441704688602815e-309, 3.4783755005502744e-310, 1.0426638518486962e-309, 1.044021929154914e-309, 1.0440643690707333e-309, 1.0442129087761009e-309, 1.0440855890286429e-309, 1.0443190085656491e-309, 1.0440643690707333e-309, 3.4900464774005834e-310, 1.0440431491128236e-309, 3.4783755005502744e-310, 1.0442977886077395e-309, 1.0430033711752506e-309, 1.0431731308385279e-309, 3.4783755005502744e-310, 3.4783755005502744e-310, 1.0431731308385279e-309, 1.0436824098283595e-309, 1.0438097295758175e-309, 3.4855902862395563e-310, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0153908169315021e-298, 0, 1.0441916888181912e-309, 3.4817706938158188e-310, 1.0441492489023719e-309, 1.0441916888181912e-309, 3.4872878828723285e-310, 3.4898342778214868e-310, 3.4885610803469077e-310, 1.0441492489023719e-309, 3.5038593437523979e-310, 3.5001524823550555e-310, 3.5076689893208653e-310, 3.5073573211890673e-310, 3.49712863835293e-310, 3.5057691399642667e-310, 3.5047611919635582e-310, 3.5073573211890673e-310, 3.4879244816096181e-310, 3.4809218954994327e-310, 3.5038593437523979e-310, 3.5047611919635582e-310, 1.0481513972042394e-309, 1.0477608277152724e-309, 1.0484387007212793e-309, 1.047660944710268e-309, 3.5315373492527332e-310, 1.0475679416134921e-309, 3.4978448119323808e-310, 1.0483750149442814e-309, 1.0441492489023719e-309, 1.0448919474292097e-309, 3.4978448119323808e-310, 3.4978448119323808e-310, 1.0448919474292097e-309, 1.0464486302789882e-309, 1.0469181218477392e-309, 3.5187779688484108e-310, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9.4565638986556059e-308, 1.5378636851831057e+76, -4.3498367124759494e-42, 6.2531374486479004e+176, -8.8752496791068882, 3.4806501622024397e-310, 9.4565638986556059e-308, 1.5378636851831057e+76, -4.3498367124759494e-42, 6.2531374486479004e+176, -8.8752496791068882, 3.4806501622024397e-310, 9.4565638986556059e-308, 1.617269844780878e-173, 9.6516725257082129e-86, -3.8868578978389645e-199, -2.9831484328629294e+304, 3.4806123410296271e-310, 9.4565638986556059e-308, 0, -4.304788882405838e-42, 6.2531374486479004e+176, -8.8752496791068882, 3.4806501622024397e-310, -3.6545246025164963e-136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-12 20:08:21]
Fault Injection Successful after 9.548834323883057s
[INFO -- 2018-10-12 20:08:28]
event type: exit
[EXCEPTION -- 2018-10-12 20:08:28]
exit code: no exit code available
