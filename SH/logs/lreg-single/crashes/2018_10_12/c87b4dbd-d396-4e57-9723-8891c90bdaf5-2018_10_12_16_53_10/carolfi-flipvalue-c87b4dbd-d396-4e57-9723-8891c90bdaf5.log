[INFO -- 2018-10-12 16:52:47]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-12 16:52:47]
Initialization strings:
[INFO -- 2018-10-12 16:52:47]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-12 16:52:47]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-12 16:52:47]
initSignal:0
[INFO -- 2018-10-12 16:52:47]
endSignal:10
[INFO -- 2018-10-12 16:52:47]
faultModel:0
[EXCEPTION -- 2018-10-12 16:52:50]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-10-12 16:52:50]
Backtrace BEGIN:
#0  0x000055555555559a in partialDerivate (pos=1) at lreg.cpp:107
#1  0x0000555555555670 in adjust () at lreg.cpp:123
#2  0x0000555555555881 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:159
#3  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

102		double pD = 0;
103		for(UINT i1 = 0, i2 = 0, i3 = 0; 
104			selectTriUInt(i1, i2, i3)<x.size(); 
105			i1++, i2++, i3++)
106		{
107			pD += ((predict(x[selectTriUInt(i1, i2, i3)]) - y[selectTriUInt(i1, i2, i3)])*pow(x[selectTriUInt(i1, i2, i3)], pos));	
108		}
109		pD *= (2.0/x.size());
110		return pD;
111	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000xf00xbf0x00
Fault Model: Single bit-flip
base address to flip value: 0x555555771761
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000xd00xbf0x00
frame name: train
symbol name: x
symbol filename: lreg.cpp
symbol line: 41
value: std::vector of length 35, capacity 63 = {4.530250375920662e-305, 4.6036778132513997e-305, 4.5658515576567772e-305, 4.6103530348269213e-305, 4.5947775178173709e-305, 1.7991808152773074e-307, 1.7922274594694724e-307, 1.7939657984214311e-307, 4.5480509667887196e-305, 4.6159157194731893e-305, 4.6036778132513997e-305, 1.8030920779192146e-307, 4.5970025916758781e-305, 1.7965733068493692e-307, 4.6192533302609501e-305, 4.5947775178173709e-305, 4.6114655717561749e-305, 1.8017883237052455e-307, 1.7870124426135961e-307, 1.8043958321331836e-307, 1.8009191542292661e-307, 1.7957041373733899e-307, 1.7870124426135961e-307, 1.798311645801328e-307, 4.6148031825439357e-305, 1.8078725100371011e-307, 1.8065687558231321e-307, 4.6181407933316965e-305, 1.7948349678974105e-307, 1.8026574931812249e-307, 4.6281536256949789e-305, 1.7835357647096786e-307, 1.8017883237052455e-307, 1.7939657984214311e-307, 4.5658515576567772e-305, 4.574751853090806e-305, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8.4425425152863546e-227, 9.8813129168249309e-324, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5480509667887196e-305, 4.5569512622227484e-305, 1.8325895170102646e-307, 1.8225397449442531e-307, 1.8348710868847105e-307, 1.8164555586123975e-307, 1.8225397449442531e-307, 1.8358896448643738e-307, 1.8143912811069464e-307, 1.8286239312761087e-307, 1.8315302167114148e-307, 1.8039612473951939e-307, 1.8371933990783429e-307, 4.7873963383128502e-305, 4.7505761463866739e-305, 4.680025660021428e-305, 4.7712428236017735e-305, 1.8774287734704145e-307, 4.8412405725033888e-305, 4.83223326057763e-305, 1.8810230099411515e-307, 4.7414498668888905e-305, 4.8045483114594582e-305, 1.8914279510526758e-307, 4.6579139885525127e-305, 4.7952829648455181e-305, 4.7333752824570421e-305, 1.8220508371140147e-307, 1.8299005239439534e-307, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.131959884853339e-72, 6.9244620785013915e+274, 5.6820954933746921e+191, 1.1455412798502446e-13, -5.2249655161607974e+297, 4.5687541767619882e-305, 1.131959884853339e-72, 6.9244620785013915e+274, 5.6820954933746921e+191, 1.1455412798502446e-13, -5.2249655161607974e+297, 4.5687541767619882e-305, 1.131959884853339e-72, 1.2882297539194267e-231, 1.8349482091117251e+106, 9.3130362433130441e-274, -6.6510232563359235e-257, 4.5682993413573391e-305, 1.131959884853339e-72, 0, 1.3923463798895859e+188, 1.1455412798502446e-13, -5.2249655161607974e+297, 4.5687541767619882e-305, -1.5177100720513508e+82, 8.0532700272123187e-322, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-12 16:52:50]
Fault Injection Successful after 3.756944179534912s
[INFO -- 2018-10-12 16:53:09]
event type: exit
[EXCEPTION -- 2018-10-12 16:53:09]
exit code: no exit code available
