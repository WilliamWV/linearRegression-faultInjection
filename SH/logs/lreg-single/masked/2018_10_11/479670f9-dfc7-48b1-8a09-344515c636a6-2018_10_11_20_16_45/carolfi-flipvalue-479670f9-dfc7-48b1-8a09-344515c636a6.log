[INFO -- 2018-10-11 20:16:34]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-11 20:16:34]
Initialization strings:
[INFO -- 2018-10-11 20:16:34]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-11 20:16:34]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-11 20:16:34]
initSignal:0
[INFO -- 2018-10-11 20:16:34]
endSignal:10
[INFO -- 2018-10-11 20:16:34]
faultModel:0
[INFO -- 2018-10-11 20:16:35]
Backtrace BEGIN:
#0  0x0000555555557b8b in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555771360, __last=0x555555771378, __result=0x555555771450) at /usr/include/c++/7/bits/stl_algobase.h:367
#1  0x0000555555557940 in std::__copy_move_a<false, double const*, double*> (__first=0x555555771360, __last=0x555555771378, __result=0x555555771450) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x000055555555743f in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=-3.5616536555300109, __last=2.4209216646221081e-322, __result=-3.5611549155636597) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x0000555555556c65 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=-3.5616536555300109, __last=2.4209216646221081e-322, __result=-3.5611549155636597) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x00005555555565a7 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd850, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x00005555555558c7 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:163
#6  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}
371	    };

Backtrace END
Memory content before bitflip:0xbe0xd60x690x2e0x3f0xce0xe90x40
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd828
address max offset: 8
Memory content after  bitflip:0xbe0xd60x690x2e0xbf0xce0xe90x40
frame name: train
symbol name: MSE
symbol filename: lreg.cpp
symbol line: 153
value: 52853.974415702265
value address: 0x7fffffffd828
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-11 20:16:35]
Fault Injection Successful after 1.6933457851409912s
[INFO -- 2018-10-11 20:16:44]
event type: exit
[INFO -- 2018-10-11 20:16:44]
exit code: 0
