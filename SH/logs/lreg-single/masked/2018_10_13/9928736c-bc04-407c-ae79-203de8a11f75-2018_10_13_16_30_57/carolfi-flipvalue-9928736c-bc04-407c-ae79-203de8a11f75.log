[INFO -- 2018-10-13 16:30:46]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-13 16:30:46]
Initialization strings:
[INFO -- 2018-10-13 16:30:46]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-13 16:30:46]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-13 16:30:46]
initSignal:0
[INFO -- 2018-10-13 16:30:46]
endSignal:10
[INFO -- 2018-10-13 16:30:46]
faultModel:0
[INFO -- 2018-10-13 16:30:47]
Backtrace BEGIN:
#0  predict (v=-8) at lreg.cpp:72
#1  0x000055555555537b in meanSquaredError () at lreg.cpp:91
#2  0x0000555555555886 in train (iterations=30000, N=2, stopsWhenStable=true) at lreg.cpp:160
#3  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

67	
68	/**
69		Predicts the value related to v using the Ts variables
70	*/
71	double predict(double v){
72		double val = 0;
73		for(UINT i1 = 0, i2 = 0, i3 = 0; 
74			selectTriUInt(i1, i2, i3)<T.size(); 
75			i1++, i2++, i3++)
76		{

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x500x130x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575a190 
address max offset: 8
Memory content after  bitflip:0x500x130x770x550x550x550x800x00
frame name: train
symbol name: T
symbol filename: lreg.cpp
symbol line: 43
value: std::vector of length 2, capacity 4503599627370498 = {-0.99999963771344447, -0.9999985411080452}
value address: 0x55555575a180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-13 16:30:47]
Fault Injection Successful after 1.343505859375s
[INFO -- 2018-10-13 16:30:56]
event type: exit
[INFO -- 2018-10-13 16:30:56]
exit code: 0
