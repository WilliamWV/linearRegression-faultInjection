[INFO -- 2018-10-13 17:37:18]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-13 17:37:18]
Initialization strings:
[INFO -- 2018-10-13 17:37:18]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-13 17:37:18]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-13 17:37:18]
initSignal:0
[INFO -- 2018-10-13 17:37:18]
endSignal:10
[INFO -- 2018-10-13 17:37:18]
faultModel:0
[EXCEPTION -- 2018-10-13 17:37:19]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-10-13 17:37:20]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::~vector (this=0x1, __in_chrg=<optimized out>) at /usr/include/c++/7/bits/stl_vector.h:433
#1  0x0000555555555945 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:165
#2  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

428	       *  The dtor only erases the elements, and note that if the
429	       *  elements themselves are pointers, the pointed-to memory is
430	       *  not touched in any way.  Managing the pointer is the user's
431	       *  responsibility.
432	       */
433	      ~vector() _GLIBCXX_NOEXCEPT
434	      { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
435			      _M_get_Tp_allocator()); }
436	
437	      /**

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Single bit-flip
base address to flip value: 0x55555575a198 
address max offset: 8
Memory content after  bitflip:0x2d0x430x1c0xeb0xc20x360x0a0x3f
frame name: std::vector<double, std::allocator<double> >::~vector
symbol name: a1
symbol filename: lreg.cpp
symbol line: 45
value: 4.9999068677425387e-05
value address: 0x55555575a198 <a1>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-13 17:37:20]
Fault Injection Successful after 2.204742193222046s
[INFO -- 2018-10-13 17:37:29]
event type: exit
[INFO -- 2018-10-13 17:37:29]
exit code: 0
