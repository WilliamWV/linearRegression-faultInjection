[INFO -- 2018-10-13 11:41:03]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-13 11:41:03]
Initialization strings:
[INFO -- 2018-10-13 11:41:03]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-13 11:41:03]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-13 11:41:03]
initSignal:0
[INFO -- 2018-10-13 11:41:03]
endSignal:10
[INFO -- 2018-10-13 11:41:03]
faultModel:0
[INFO -- 2018-10-13 11:41:09]
Backtrace BEGIN:
#0  0x0000555555556058 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a180 <T>, __n=12884901890) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x0000555555555291 in predict (v=6) at lreg.cpp:77
#2  0x000055555555537b in meanSquaredError () at lreg.cpp:91
#3  0x0000555555555886 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:160
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Single bit-flip
base address to flip value: 0x55555575a1a0 
address max offset: 8
Memory content after  bitflip:0x460x5a0xb70xf40x3d0x4d0xf70x3e
frame name: std::vector<double, std::allocator<double> >::operator[]
symbol name: a2
symbol filename: lreg.cpp
symbol line: 45
value: 2.2222258207660912e-05
value address: 0x55555575a1a0 <a2>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-13 11:41:09]
Fault Injection Successful after 6.441438913345337s
[INFO -- 2018-10-13 11:41:13]
event type: exit
[INFO -- 2018-10-13 11:41:13]
exit code: 0
