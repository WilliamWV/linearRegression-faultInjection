[INFO -- 2018-10-05 17:58:57]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-05 17:58:57]
Initialization strings:
[INFO -- 2018-10-05 17:58:57]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-05 17:58:57]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-05 17:58:57]
initSignal:0
[INFO -- 2018-10-05 17:58:57]
endSignal:30
[INFO -- 2018-10-05 17:58:57]
faultModel:0
[INFO -- 2018-10-05 17:59:03]
Backtrace BEGIN:
#0  0x000055555555548d in partialDerivate (pos=0) at lreg.cpp:91
#1  0x00005555555555bb in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:105
#2  0x0000555555555760 in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:138
#3  0x0000555555555acb in lreg (input=0x7fffffffe210 "/tmp/lreg/randInput") at lreg.cpp:173
#4  0x0000555555555e26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:220

86		Calculates the partial derivate of the meanSquaredError function 
87		to the adjustment variable whose position in T is passed in pos
88	*/
89	double partialDerivate(int pos){
90		double pD = 0;
91		for(unsigned int i = 0; i<x.size(); i++){
92			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
93		}
94		pD *= (2.0/x.size());
95		return pD;

Backtrace END
Fliping a bit of the pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffdb18
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x080x000x000x00
frame name: main
symbol name: a1
symbol filename: lreg.cpp
symbol line: 220
value: 0x0
value address: 0x7fffffffdb18
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-10-05 17:59:03]
Fault Injection Successful after 6.094513416290283s
[INFO -- 2018-10-05 17:59:40]
event type: exit
[INFO -- 2018-10-05 17:59:40]
exit code: 0
