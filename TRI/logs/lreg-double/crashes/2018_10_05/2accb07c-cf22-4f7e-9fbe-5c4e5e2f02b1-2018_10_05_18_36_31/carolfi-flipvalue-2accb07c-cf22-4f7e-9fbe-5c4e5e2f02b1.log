[INFO -- 2018-10-05 18:36:07]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-05 18:36:07]
Initialization strings:
[INFO -- 2018-10-05 18:36:07]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-05 18:36:07]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-05 18:36:07]
initSignal:0
[INFO -- 2018-10-05 18:36:07]
endSignal:30
[INFO -- 2018-10-05 18:36:07]
faultModel:1
[EXCEPTION -- 2018-10-05 18:36:29]
pythonException: empty range for randrange() (0,0, 0)
[EXCEPTION -- 2018-10-05 18:36:29]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-10-05 18:36:29]
Backtrace BEGIN:
#0  0x000055555555530b in predict (v=5.3221503930810823e-315) at lreg.cpp:68
#1  0x00005555555554bb in partialDerivate (pos=1) at lreg.cpp:92
#2  0x00005555555555bb in adjust (alpha=0.00020000000000000001) at lreg.cpp:105
#3  0x0000555555555760 in train (iterations=30000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:138
#4  0x0000555555555acb in lreg (input=0x7fffffffe210 "/tmp/lreg/randInput") at lreg.cpp:173
#5  0x0000555555555e60 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:222

63		Predicts the value related to v using the Ts variables
64	*/
65	double predict(double v){
66		double val = 0;
67		for(unsigned int i = 0; i<T.size(); i++){
68			val+= (T[i] * pow(v, i));
69		}
70		return val;
71		
72	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa00x740x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x555555761168 
address max offset: 8
Memory content after  bitflip:0xa00x740x770x550x550x550x000x0a
frame name: main
symbol name: y
symbol filename: lreg.cpp
symbol line: 51
value: std::vector of length 90071992547410000, capacity 128 = {33, 1, -17, 15, 33, -9, -21, 5, -494, -1, -1033, -818, -19, -664, -376, -251, -901, -433, -433, -944, 69117, -628, 46302, 24562, 98412, -5003, -40003, 98412, -13723, -163843, 24562, -109763, -1083, -2563, -29163, 98412, 33, 1, -17, 15, 33, -9, -21, 5, -494, -1, -1033, -818, -19, -664, -376, -251, -901, -433, -433, -944, 69117, -628, 46302, 24562, 98412, -5003, -40003, 98412, -13723, -163843, 24562, -109763, -1083, -2563, -29163, 98412, 33, 1, -17, 15, 33, -9, -21, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, 0, -657.6321221668868, 3.5781038908522569, 5.3251154726368881, 0, 5.5829417980060859e-322, 4.6355706488010285e-310, 4.6355706488026095e-310, 4.6355706488026095e-310, 4.635570648950434e-310, 4.6355706489528055e-310, 4.6355706489528055e-310, 4.6355706488073525e-310, 4.6355706488105146e-310, 4.6355706488105146e-310, 0, 0, 0, 0, 8.7449619313900638e-322, 4.6355706487978665e-310, 0, 4.6355706487978665e-310, 1.9762625833649862e-323, 4.6355706487982617e-310, 4.6355706489441099e-310, 0, 4.6355706489441099e-310, 2.9643938750474793e-323, 4.6355706489445052e-310, 4.6355706489472719e-310, 0, 4.6355706489472719e-310, 3.9525251667299724e-323, 4.6355706489476672e-310, 0, 0, 0, 0, 0, 0, 1.6304166312761136e-322, 0, 1924.4955700401158, 0, 2.3328297599686138e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x555555761160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-05 18:36:29]
Fault Injection Successful after 22.58958339691162s
[INFO -- 2018-10-05 18:36:30]
event type: exit
[EXCEPTION -- 2018-10-05 18:36:30]
exit code: no exit code available
