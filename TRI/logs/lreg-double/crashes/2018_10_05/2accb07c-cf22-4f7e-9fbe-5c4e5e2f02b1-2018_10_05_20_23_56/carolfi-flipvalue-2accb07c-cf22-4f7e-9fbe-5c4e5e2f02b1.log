[INFO -- 2018-10-05 20:23:29]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-05 20:23:29]
Initialization strings:
[INFO -- 2018-10-05 20:23:29]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-05 20:23:29]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-05 20:23:29]
initSignal:0
[INFO -- 2018-10-05 20:23:29]
endSignal:30
[INFO -- 2018-10-05 20:23:29]
faultModel:1
[EXCEPTION -- 2018-10-05 20:23:47]
pythonException: empty range for randrange() (0,0, 0)
[EXCEPTION -- 2018-10-05 20:23:47]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-10-05 20:23:53]
Backtrace BEGIN:
#0  std::pow<double, int> (__x=4.6355706445465304e-310, __y=0) at /usr/include/c++/7/cmath:415
#1  0x000055555555550c in partialDerivate (pos=1) at lreg.cpp:92
#2  0x00005555555555bb in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:105
#3  0x0000555555555760 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:138
#4  0x0000555555555acb in lreg (input=0x7fffffffe210 "/tmp/lreg/randInput") at lreg.cpp:173
#5  0x0000555555555e60 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:222

410	#endif
411	
412	  template<typename _Tp, typename _Up>
413	    inline _GLIBCXX_CONSTEXPR
414	    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
415	    pow(_Tp __x, _Up __y)
416	    {
417	      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
418	      return pow(__type(__x), __type(__y));
419	    }

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x680x6d0x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x555555761188 
address max offset: 8
Memory content after  bitflip:0x680x6d0x770x550xdd0x550x000x00
frame name: adjust
symbol name: T
symbol filename: lreg.cpp
symbol line: 52
value: std::vector of length 73014444035, capacity 3 = {6.4787971319979274, 105.64443426215193, 0.32712411621322701, 3.2114266979681025e-322, 3028.6639955170558, -18980.576259033092, -7115.6599027898556, 25383.386504662572, -4194.6647019968395, 28096.305819423731, 0, 4.7924367646600915e-322, 4.6355706490777053e-310, 4.635570649078891e-310, 4.635570649078891e-310, 4.6355706489251378e-310, 4.6355706489271141e-310, 4.6355706489271141e-310, 4.6355706488579449e-310, 0, 4.6355706488579449e-310, 4.9406564584124654e-324, 4.6355706488583401e-310, 5.1432233732073765e-321, -16, 0, 9, -7, -16, 5, 11, -2, 15, -2, 22, -21, -4, -19, 13, -12, -22, 14, 14, 21, 24, -5, 21, 17, 27, -10, -20, 27, -14, -32, 17, -28, -6, -8, -18, 27, -16, 0, 9, -7, -16, 5, 11, -2, 15, -2, 22, -21, -4, -19, 13, -12, -22, 14, 14, 21, 24, -5, 21, 17, 27, -10, -20, 27, -14, -32, 17, -28, -6, -8, -18, 27, -16, 0, 9, -7, -16, 5, 11, -2, 15, -2, 22, -21, -4, -19, 13, -12, -22, 14, 14, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5.1432233732073765e-321, 33, 1, -17, 15, 33, -9, -21, 5, -494, -1, -1033, -818, -19, -664, -376, -251, -901, -433, -433, -944, 69117, -628, 46302, 24562, 98412, -5003, -40003, 98412, -13723, -163843, 24562, -109763, -1083, -2563, -29163, 98412, 33, 1, -17, 15, 33, -9, -21, 5, -494, -1...}
value address: 0x555555761180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-05 20:23:53]
Fault Injection Successful after 24.292917490005493s
[INFO -- 2018-10-05 20:23:53]
event type: exit
[EXCEPTION -- 2018-10-05 20:23:53]
exit code: no exit code available
