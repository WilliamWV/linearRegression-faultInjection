[INFO -- 2018-10-05 18:33:56]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-05 18:33:56]
Initialization strings:
[INFO -- 2018-10-05 18:33:56]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-05 18:33:56]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-05 18:33:56]
initSignal:0
[INFO -- 2018-10-05 18:33:56]
endSignal:30
[INFO -- 2018-10-05 18:33:56]
faultModel:1
[INFO -- 2018-10-05 18:34:06]
Backtrace BEGIN:
#0  0x00005555555552e6 in predict (v=-12) at lreg.cpp:68
#1  0x00005555555554bb in partialDerivate (pos=0) at lreg.cpp:92
#2  0x00005555555555bb in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:105
#3  0x0000555555555760 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:138
#4  0x0000555555555acb in lreg (input=0x7fffffffe210 "/tmp/lreg/randInput") at lreg.cpp:173
#5  0x0000555555555e43 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:221

63		Predicts the value related to v using the Ts variables
64	*/
65	double predict(double v){
66		double val = 0;
67		for(unsigned int i = 0; i<T.size(); i++){
68			val+= (T[i] * pow(v, i));
69		}
70		return val;
71		
72	}

Backtrace END
Memory content before bitflip:0xff0xfb0x0f0xd70x1d0x6c0xf60xc0
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd668
address max offset: 8
Memory content after  bitflip:0xff0xfb0x0f0xd70x1d0x6c0xf60x44
frame name: partialDerivate
symbol name: pD
symbol filename: lreg.cpp
symbol line: 90
value: 1.6941833790082385e+24
value address: 0x7fffffffd668
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-05 18:34:06]
Fault Injection Successful after 10.467865943908691s
[INFO -- 2018-10-05 18:34:39]
event type: exit
[INFO -- 2018-10-05 18:34:39]
exit code: 0
