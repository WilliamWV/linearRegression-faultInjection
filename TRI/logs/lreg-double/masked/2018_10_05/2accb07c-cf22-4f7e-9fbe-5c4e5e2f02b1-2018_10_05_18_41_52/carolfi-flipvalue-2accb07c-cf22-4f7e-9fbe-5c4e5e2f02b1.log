[INFO -- 2018-10-05 18:41:07]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-05 18:41:07]
Initialization strings:
[INFO -- 2018-10-05 18:41:07]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-05 18:41:07]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-05 18:41:07]
initSignal:0
[INFO -- 2018-10-05 18:41:07]
endSignal:30
[INFO -- 2018-10-05 18:41:07]
faultModel:1
[INFO -- 2018-10-05 18:41:08]
Backtrace BEGIN:
#0  0x00005555555576e4 in std::vector<double, std::allocator<double> >::size (this=0x555555761180 <T>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x00005555555552ca in predict (v=-19) at lreg.cpp:67
#2  0x00005555555553d0 in meanSquaredError () at lreg.cpp:79
#3  0x0000555555555765 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:139
#4  0x0000555555555acb in lreg (input=0x7fffffffe210 "/tmp/lreg/randInput") at lreg.cpp:173
#5  0x0000555555555e26 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:220

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x800x8d0xc0
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd818
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x140x800x8d0xc0
frame name: lreg
symbol name: temp
symbol filename: lreg.cpp
symbol line: 158
value: -944.009765625
value address: 0x7fffffffd818
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-05 18:41:08]
Fault Injection Successful after 1.7205939292907715s
[INFO -- 2018-10-05 18:41:50]
event type: exit
[INFO -- 2018-10-05 18:41:50]
exit code: 0
