[INFO -- 2018-10-05 18:39:21]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-05 18:39:21]
Initialization strings:
[INFO -- 2018-10-05 18:39:21]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-05 18:39:21]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-05 18:39:21]
initSignal:0
[INFO -- 2018-10-05 18:39:21]
endSignal:30
[INFO -- 2018-10-05 18:39:21]
faultModel:2
[INFO -- 2018-10-05 18:39:30]
Backtrace BEGIN:
#0  0x00005555555576c8 in std::vector<double, std::allocator<double> >::size (this=0x555555761160 <y>) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x0000555555555353 in meanSquaredError () at lreg.cpp:78
#2  0x0000555555555765 in train (iterations=60000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:139
#3  0x0000555555555acb in lreg (input=0x7fffffffe210 "/tmp/lreg/randInput") at lreg.cpp:173
#4  0x0000555555555e43 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:221

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x030x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7f4
address max offset: 4
Memory content after  bitflip:0xb20x9d0x030xec
frame name: lreg
symbol name: N
symbol filename: lreg.cpp
symbol line: 159
value: -335307342
value address: 0x7fffffffd7f4
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-10-05 18:39:30]
Fault Injection Successful after 9.590378284454346s
[INFO -- 2018-10-05 18:40:05]
event type: exit
[INFO -- 2018-10-05 18:40:05]
exit code: 0
