[INFO -- 2018-10-05 17:51:41]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-05 17:51:41]
Initialization strings:
[INFO -- 2018-10-05 17:51:41]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-05 17:51:41]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-05 17:51:41]
initSignal:0
[INFO -- 2018-10-05 17:51:41]
endSignal:30
[INFO -- 2018-10-05 17:51:41]
faultModel:2
[INFO -- 2018-10-05 17:51:57]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0xc034000000000000) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x00005555555552ca in predict (v=-20) at lreg.cpp:67
#2  0x00005555555554bb in partialDerivate (pos=0) at lreg.cpp:92
#3  0x00005555555555bb in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:105
#4  0x0000555555555760 in train (iterations=90000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:138
#5  0x0000555555555acb in lreg (input=0x7fffffffe210 "/tmp/lreg/randInput") at lreg.cpp:173
#6  0x0000555555555e43 in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:221

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x01
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd6ec
address max offset: 1
Memory content after  bitflip:0x18
frame name: train
symbol name: stopsWhenStable
symbol filename: lreg.cpp
symbol line: 123
value: 24
value address: 0x7fffffffd6ec
Type: A boolean type.
Type sizeof: 1

[INFO -- 2018-10-05 17:51:57]
Fault Injection Successful after 16.122060537338257s
[INFO -- 2018-10-05 17:52:24]
event type: exit
[INFO -- 2018-10-05 17:52:24]
exit code: 0
