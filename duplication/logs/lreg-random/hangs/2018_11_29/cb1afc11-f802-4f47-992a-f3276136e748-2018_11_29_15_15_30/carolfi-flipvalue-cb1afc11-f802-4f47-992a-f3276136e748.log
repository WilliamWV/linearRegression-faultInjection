[INFO -- 2018-11-29 15:15:07]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-29 15:15:07]
Initialization strings:
[INFO -- 2018-11-29 15:15:07]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-29 15:15:07]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-29 15:15:07]
initSignal:0
[INFO -- 2018-11-29 15:15:07]
endSignal:6
[INFO -- 2018-11-29 15:15:07]
faultModel:2
[INFO -- 2018-11-29 15:15:10]
Backtrace BEGIN:
#0  0x0000555555557360 in std::_Vector_base<double, std::allocator<double> >::_M_create_storage (this=0x7fffffffd5d0, __n=4) at /usr/include/c++/7/bits/stl_vector.h:187
#1  0x0000555555556985 in std::_Vector_base<double, std::allocator<double> >::_Vector_base (this=0x7fffffffd5d0, __n=4, __a=...) at /usr/include/c++/7/bits/stl_vector.h:138
#2  0x00005555555563f1 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5d0, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/stl_vector.h:328
#3  0x000055555555572b in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:126
#4  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#5  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

182	
183	    private:
184	      void
185	      _M_create_storage(size_t __n)
186	      {
187		this->_M_impl._M_start = this->_M_allocate(__n);
188		this->_M_impl._M_finish = this->_M_impl._M_start;
189		this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
190	      }
191	    };

Backtrace END
Memory content before bitflip:0x030x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd664
address max offset: 4
Memory content after  bitflip:0x160xfd0x620x2b
frame name: execute
symbol name: testCases
symbol filename: lreg.cpp
symbol line: 139
value: 727907606
value address: 0x7fffffffd664
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-29 15:15:10]
Fault Injection Successful after 3.1717491149902344s
