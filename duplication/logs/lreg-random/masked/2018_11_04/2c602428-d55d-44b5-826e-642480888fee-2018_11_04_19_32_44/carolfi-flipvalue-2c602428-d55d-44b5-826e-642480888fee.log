[INFO -- 2018-11-04 19:32:34]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-04 19:32:34]
Initialization strings:
[INFO -- 2018-11-04 19:32:34]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-04 19:32:34]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-04 19:32:34]
initSignal:0
[INFO -- 2018-11-04 19:32:34]
endSignal:10
[INFO -- 2018-11-04 19:32:34]
faultModel:2
[INFO -- 2018-11-04 19:32:35]
Backtrace BEGIN:
#0  0x000055555555523c in predict (v=8) at lreg.cpp:50
#1  0x00005555555552ba in meanSquaredError () at lreg.cpp:61
#2  0x00005555555556b1 in train (iterations=15000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x555555772350
address max offset: 8
Memory content after  bitflip:0x550x210x320xe40x990x590x470xd1
frame name: main
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 2, capacity 2 = {0.99999956649611221, 2.0000023129747437}
value address: 0x55555575b180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-04 19:32:35]
Fault Injection Successful after 1.2401635646820068s
[INFO -- 2018-11-04 19:32:43]
event type: exit
[INFO -- 2018-11-04 19:32:43]
exit code: 0
