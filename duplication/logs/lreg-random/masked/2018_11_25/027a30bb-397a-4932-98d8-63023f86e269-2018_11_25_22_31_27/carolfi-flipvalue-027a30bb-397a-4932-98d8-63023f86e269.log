[INFO -- 2018-11-25 22:31:23]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 22:31:23]
Initialization strings:
[INFO -- 2018-11-25 22:31:23]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 22:31:23]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 22:31:23]
initSignal:0
[INFO -- 2018-11-25 22:31:23]
endSignal:6
[INFO -- 2018-11-25 22:31:23]
faultModel:2
[INFO -- 2018-11-25 22:31:26]
Backtrace BEGIN:
#0  0x00005555555569a7 in std::_Vector_base<double, std::allocator<double> >::_Vector_base (this=0x7fffffffd5f0, __n=4, __a=...) at /usr/include/c++/7/bits/stl_vector.h:138
#1  0x00005555555563f1 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5f0, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/stl_vector.h:328
#2  0x0000555555555713 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:126
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555cb0 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:196

133	      : _M_impl()
134	      { _M_create_storage(__n); }
135	
136	      _Vector_base(size_t __n, const allocator_type& __a)
137	      : _M_impl(__a)
138	      { _M_create_storage(__n); }
139	
140	#if __cplusplus >= 201103L
141	      _Vector_base(_Tp_alloc_type&& __a) noexcept
142	      : _M_impl(std::move(__a)) { }

Backtrace END
Memory content before bitflip:0x040x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd568
address max offset: 4
Memory content after  bitflip:0xb10xbd0xd40x83
frame name: train
symbol name: N
symbol filename: lreg.cpp
symbol line: 105
value: -2083209807
value address: 0x7fffffffd568
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-25 22:31:26]
Fault Injection Successful after 3.2398815155029297s
[INFO -- 2018-11-25 22:31:26]
event type: exit
[INFO -- 2018-11-25 22:31:26]
exit code: 0
