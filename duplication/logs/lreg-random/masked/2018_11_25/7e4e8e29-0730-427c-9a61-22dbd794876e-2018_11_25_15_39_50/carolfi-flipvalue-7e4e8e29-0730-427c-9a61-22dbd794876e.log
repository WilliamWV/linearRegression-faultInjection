[INFO -- 2018-11-25 15:39:42]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 15:39:42]
Initialization strings:
[INFO -- 2018-11-25 15:39:42]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 15:39:42]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 15:39:42]
initSignal:0
[INFO -- 2018-11-25 15:39:42]
endSignal:6
[INFO -- 2018-11-25 15:39:42]
faultModel:2
[INFO -- 2018-11-25 15:39:46]
Backtrace BEGIN:
#0  0x00005555555561d4 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b180 <T>, __n=1) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x0000555555555217 in predict (v=6) at lreg.cpp:50
#2  0x00005555555553fc in partialDerivate (pos=0) at lreg.cpp:74
#3  0x0000555555555503 in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#4  0x00005555555556ac in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#6  0x0000555555555cb0 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:196

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa00x250x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b168 
address max offset: 8
Memory content after  bitflip:0x0b0x5c0x6a0xe20x100x210xc40xee
frame name: main
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length -155240633230006566, capacity 16 = {-44, -23, -143, -8, 1, 1, -1319, -23, -1079, -503, -104, -1583, -1507, 41, 19181, -38047, 0, 7.1639518646980749e-322, 0, 10.999751207252501, 12.999763980722822, -7.0003637539803849, -1078.8160145721722, -1078.8160145721722, -1722.5303976432911, -1319.1177772194476, -1582.6669839552355, -584.82432114594803, 97026.528835098041, -561.68664594912298, -9235.2779191372501, 69793.215647290359, -295.84796972341951, 42146.236069249338, 0, 2.4209216646221081e-322, 4.6355706480540012e-310, -1.5136731619258823, -1.959753769940316, -4.0440527726936848, 0, 2.4209216646221081e-322, 4.6355706480563728e-310, -1.5136731619258823, -1.959753769940316, -4.0440527726936848, 0, 2.4209216646221081e-322, 4.6355706480587443e-310, -1.5136731619258823, -1.959753769940316, -4.0440527726936848, 0, 2.4209216646221081e-322, 0, -1.5109604774850565, -1.9503242482174707, -3.9694324930209692, 0, 1.3487992131466031e-321, 9.9997448205173409, 10.999751207252501, 12.999763980722822, -7.0003637539803849, -1078.8160145721722, -1078.8160145721722, -1722.5303976432911, -1319.1177772194476, -1582.6669839552355, -584.82432114594803, 97026.528835098041, -561.68664594912298, -9235.2779191372501, 69793.215647290359, -295.84796972341951, 42146.236069249338, 19328.177037179787, -20460.150394813842, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.1233459261319253e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-25 15:39:46]
Fault Injection Successful after 4.874224901199341s
[INFO -- 2018-11-25 15:39:49]
event type: exit
[INFO -- 2018-11-25 15:39:49]
exit code: 0
