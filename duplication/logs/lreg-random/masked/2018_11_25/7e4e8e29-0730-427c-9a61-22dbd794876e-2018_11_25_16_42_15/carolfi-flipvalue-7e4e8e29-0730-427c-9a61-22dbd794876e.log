[INFO -- 2018-11-25 16:42:09]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 16:42:09]
Initialization strings:
[INFO -- 2018-11-25 16:42:09]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 16:42:09]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 16:42:09]
initSignal:0
[INFO -- 2018-11-25 16:42:09]
endSignal:6
[INFO -- 2018-11-25 16:42:09]
faultModel:2
[INFO -- 2018-11-25 16:42:11]
Backtrace BEGIN:
#0  std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator (this=0x7fffffffd5f0) at /usr/include/c++/7/bits/stl_vector.h:116
#1  0x0000555555556409 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5f0, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/stl_vector.h:333
#2  0x0000555555555713 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:126
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

111	    public:
112	      typedef _Alloc allocator_type;
113	
114	      _Tp_alloc_type&
115	      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
116	      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
117	
118	      const _Tp_alloc_type&
119	      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
120	      { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }

Backtrace END
Memory content before bitflip:0x030x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd66c
address max offset: 4
Memory content after  bitflip:0x650x9c0x1e0x82
frame name: execute
symbol name: N
symbol filename: lreg.cpp
symbol line: 144
value: -2111923099
value address: 0x7fffffffd66c
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-25 16:42:11]
Fault Injection Successful after 2.2310359477996826s
[INFO -- 2018-11-25 16:42:14]
event type: exit
[INFO -- 2018-11-25 16:42:14]
exit code: 0
