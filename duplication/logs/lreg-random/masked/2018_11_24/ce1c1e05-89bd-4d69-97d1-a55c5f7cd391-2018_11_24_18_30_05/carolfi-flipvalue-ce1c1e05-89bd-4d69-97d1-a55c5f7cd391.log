[INFO -- 2018-11-24 18:30:02]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 18:30:02]
Initialization strings:
[INFO -- 2018-11-24 18:30:02]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 18:30:02]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-24 18:30:02]
initSignal:0
[INFO -- 2018-11-24 18:30:02]
endSignal:6
[INFO -- 2018-11-24 18:30:02]
faultModel:2
[INFO -- 2018-11-24 18:30:03]
Backtrace BEGIN:
#0  0x00005555555556a7 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#1  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#2  0x0000555555555cb0 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:196

115		vector<double> bestT = T; 
116		double bestMSE = meanSquaredError();
117		double MSE;	
118		for(int i = 0; i<iterations; i++){
119			prevT = T; 	
120			adjust(alpha);
121			MSE = meanSquaredError();
122			if (MSE < bestMSE){
123				bestMSE = MSE;
124				bestT = T; 

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x5555557725c0
address max offset: 8
Memory content after  bitflip:0x290x530xe90xa10x380x4a0xa40xa7
frame name: main
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 12, capacity 16 = {-44, -23, -143, -8, 1, 1, -1319, -23, -1079, -503, -104, -1583}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-24 18:30:03]
Fault Injection Successful after 1.6148805618286133s
[INFO -- 2018-11-24 18:30:04]
event type: exit
[INFO -- 2018-11-24 18:30:04]
exit code: 0
