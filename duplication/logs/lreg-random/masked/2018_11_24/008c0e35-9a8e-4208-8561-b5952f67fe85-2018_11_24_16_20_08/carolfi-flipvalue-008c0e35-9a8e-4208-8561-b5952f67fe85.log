[INFO -- 2018-11-24 16:20:03]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 16:20:03]
Initialization strings:
[INFO -- 2018-11-24 16:20:03]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 16:20:03]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-24 16:20:03]
initSignal:0
[INFO -- 2018-11-24 16:20:03]
endSignal:6
[INFO -- 2018-11-24 16:20:03]
faultModel:2
[INFO -- 2018-11-24 16:20:05]
Backtrace BEGIN:
#0  0x00005555555564fb in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd590, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/vector.tcc:204
#1  0x0000555555555691 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:119
#2  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#3  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

199		      std::__alloc_on_copy(_M_get_Tp_allocator(),
200					   __x._M_get_Tp_allocator());
201		    }
202	#endif
203		  const size_type __xlen = __x.size();
204		  if (__xlen > capacity())
205		    {
206		      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
207							   __x.end());
208		      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd688
address max offset: 8
Memory content after  bitflip:0x840x470x610xe30xf90x0c0xde0x7f
frame name: execute
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 143
value: 8.4409242968740997e+307
value address: 0x7fffffffd688
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-24 16:20:05]
Fault Injection Successful after 2.137092351913452s
[INFO -- 2018-11-24 16:20:07]
event type: exit
[INFO -- 2018-11-24 16:20:07]
exit code: 0
