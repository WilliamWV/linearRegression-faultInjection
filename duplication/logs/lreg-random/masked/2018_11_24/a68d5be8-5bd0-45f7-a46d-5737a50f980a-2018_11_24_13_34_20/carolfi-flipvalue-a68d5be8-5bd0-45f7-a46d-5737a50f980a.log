[INFO -- 2018-11-24 13:34:14]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 13:34:14]
Initialization strings:
[INFO -- 2018-11-24 13:34:14]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 13:34:14]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-24 13:34:14]
initSignal:0
[INFO -- 2018-11-24 13:34:14]
endSignal:10
[INFO -- 2018-11-24 13:34:14]
faultModel:2
[INFO -- 2018-11-24 13:34:17]
Backtrace BEGIN:
#0  0x0000555555556111 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b180 <T>, __n=0) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x0000555555555217 in predict (v=-2) at lreg.cpp:50
#2  0x000055555555530a in meanSquaredError () at lreg.cpp:61
#3  0x00005555555556b1 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#4  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#5  0x0000555555555cb0 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:196

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x680xa50xc50x410x6e0x760x360x40
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd528
address max offset: 8
Memory content after  bitflip:0xfb0xff0x0d0x2a0xac0x080x860x6f
frame name: meanSquaredError
symbol name: error
symbol filename: lreg.cpp
symbol line: 59
value: 1.670312144265311e+229
value address: 0x7fffffffd528
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-24 13:34:17]
Fault Injection Successful after 3.962977170944214s
[INFO -- 2018-11-24 13:34:19]
event type: exit
[INFO -- 2018-11-24 13:34:19]
exit code: 0
