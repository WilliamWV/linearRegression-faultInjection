[INFO -- 2018-11-05 20:22:06]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-05 20:22:06]
Initialization strings:
[INFO -- 2018-11-05 20:22:06]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-05 20:22:06]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-05 20:22:06]
initSignal:0
[INFO -- 2018-11-05 20:22:06]
endSignal:10
[INFO -- 2018-11-05 20:22:06]
faultModel:2
[INFO -- 2018-11-05 20:22:09]
Backtrace BEGIN:
#0  0x0000555555557fc8 in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772b80, __last=0x555555772ba0, __result=0x555555772be0) at /usr/include/c++/7/bits/stl_algobase.h:357
#1  0x0000555555557d58 in std::__copy_move_a<false, double const*, double*> (__first=0x555555772380, __last=0x5555557723a0, __result=0x555555772c10) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x0000555555558112 in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-19.724252724992148, __last=0, __result=0x555555772c10) at /usr/include/c++/7/bits/stl_algobase.h:424
#3  0x0000555555557f69 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-19.724252724992148, __last=0, __result=0x555555772c10) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555557ca0 in std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-19.724252724992148, __last=0, __result=0x555555772c10) at /usr/include/c++/7/bits/stl_uninitialized.h:101
#5  0x00005555555574a4 in std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-19.724252724992148, __last=0, __result=0x555555772c10) at /usr/include/c++/7/bits/stl_uninitialized.h:134
#6  0x0000555555556b35 in std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double> (__first=-19.724252724992148, __last=0, __result=0x555555772c10) at /usr/include/c++/7/bits/stl_uninitialized.h:289
#7  0x0000555555556355 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5d0, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#8  0x000055555555572b in train (iterations=45000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:126
#9  0x0000555555555a1c in execute (input=0x7fffffffe1f3 "/tmp/lreg/randInput") at lreg.cpp:157
#10 0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

352	  template<bool _IsMove>
353	    struct __copy_move<_IsMove, true, random_access_iterator_tag>
354	    {
355	      template<typename _Tp>
356	        static _Tp*
357	        __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
358	        {
359	#if __cplusplus >= 201103L
360		  using __assignable = conditional<_IsMove,
361						   is_move_assignable<_Tp>,

Backtrace END
Fliping value of field: _M_current
Fliping a bit of the pointer
Memory content before bitflip:0xa00x230x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd3f0
address max offset: 8
Memory content after  bitflip:0x800x520xe40x840xf70x7b0xf60xe8
frame name: std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>
symbol name: __last
symbol filename: /usr/include/c++/7/bits/stl_algobase.h
symbol line: 420
value: <error reading variable: Cannot access memory at address 0xe8f67bf784e45280>
value address: 0x7fffffffd3f0
Type: The type is a structure.
Type sizeof: 8
Field name: _M_current
Field Type: The type is a pointer.
Field Type sizeof: 8

[INFO -- 2018-11-05 20:22:09]
Fault Injection Successful after 3.9135124683380127s
[INFO -- 2018-11-05 20:22:14]
event type: exit
[INFO -- 2018-11-05 20:22:14]
exit code: 0
