[INFO -- 2018-11-29 14:47:35]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-29 14:47:35]
Initialization strings:
[INFO -- 2018-11-29 14:47:35]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-29 14:47:35]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-29 14:47:35]
initSignal:0
[INFO -- 2018-11-29 14:47:35]
endSignal:6
[INFO -- 2018-11-29 14:47:35]
faultModel:2
[EXCEPTION -- 2018-11-29 14:47:37]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-29 14:47:37]
Backtrace BEGIN:
#0  std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772360, __last=0x555555772370, __result=0x555555772470) at /usr/include/c++/7/bits/stl_algobase.h:366
#1  0x0000555555557e42 in std::__copy_move_a<false, double const*, double*> (__first=0x555555772360, __last=0x555555772370, __result=0x555555772470) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x00005555555581fc in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=1.9381845757165976, __last=0, __result=0x555555772470) at /usr/include/c++/7/bits/stl_algobase.h:424
#3  0x0000555555558053 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=1.9381845757165976, __last=0, __result=0x555555772470) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555557d8a in std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=1.9381845757165976, __last=0, __result=0x555555772470) at /usr/include/c++/7/bits/stl_uninitialized.h:101
#5  0x000055555555758e in std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=1.9381845757165976, __last=0, __result=0x555555772470) at /usr/include/c++/7/bits/stl_uninitialized.h:134
#6  0x0000555555556c1f in std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double> (__first=1.9381845757165976, __last=0, __result=0x555555772470) at /usr/include/c++/7/bits/stl_uninitialized.h:289
#7  0x000055555555643f in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5f0, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#8  0x0000555555555713 in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#9  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#10 0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

361						   is_move_assignable<_Tp>,
362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}

Backtrace END
Memory content before bitflip:0x020x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd66c
address max offset: 4
Memory content after  bitflip:0xb60x430x7a0xf0
frame name: execute
symbol name: N
symbol filename: lreg.cpp
symbol line: 144
value: -260422730
value address: 0x7fffffffd66c
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-29 14:47:37]
Fault Injection Successful after 2.692211866378784s
[INFO -- 2018-11-29 14:47:41]
event type: exit
[INFO -- 2018-11-29 14:47:41]
exit code: 0
