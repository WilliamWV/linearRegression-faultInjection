[INFO -- 2018-11-29 13:33:02]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-29 13:33:02]
Initialization strings:
[INFO -- 2018-11-29 13:33:02]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-29 13:33:02]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-29 13:33:02]
initSignal:0
[INFO -- 2018-11-29 13:33:02]
endSignal:6
[INFO -- 2018-11-29 13:33:02]
faultModel:2
[INFO -- 2018-11-29 13:33:05]
Backtrace BEGIN:
#0  0x0000555555555220 in predict (v=-14) at lreg.cpp:50
#1  0x00005555555553fc in partialDerivate (pos=3) at lreg.cpp:74
#2  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#3  0x00005555555556ac in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#5  0x0000555555555cb0 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:196

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xc00x250x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b168 
address max offset: 8
Memory content after  bitflip:0x210x1c0x420x520x490xdb0x800x2f
frame name: partialDerivate
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 427860374970785500, capacity 16 = {13145, 2813, 13, -99407, -575, 22793, -121267, 15973, 22793, 86413, -63895, 10673, -1507, 41, 19181, -38047, 0, 7.1639518646980749e-322, 9.9997448205173409, 10.999751207252501, 12.999763980722822, -7.0003637539803849, -1078.8160145721722, -1078.8160145721722, -1722.5303976432911, -1319.1177772194476, -1582.6669839552355, -584.82432114594803, 97026.528835098041, -561.68664594912298, -9235.2779191372501, 69793.215647290359, -295.84796972341951, 42146.236069249338, 0, 2.4209216646221081e-322, 0.27267016326068322, -1.1992500655451654, -1.9569983489717533, -4.0445216177311236, 0, 2.4209216646221081e-322, 0.27267016326068322, -1.1992500655451654, -1.9569983489717533, -4.0445216177311236, 0, 2.4209216646221081e-322, 4.6355706480587443e-310, -1.196453412221743, -1.9475680910181774, -3.9699014632717118, 0, 2.4209216646221081e-322, 0, -1.1992500655451654, -1.9569983489717533, -4.0445216177311236, 0, 1.3487992131466031e-321, 9.9997448205173409, 10.999751207252501, 12.999763980722822, -7.0003637539803849, -1078.8160145721722, -1078.8160145721722, -1722.5303976432911, -1319.1177772194476, -1582.6669839552355, -584.82432114594803, 97026.528835098041, -561.68664594912298, -9235.2779191372501, 69793.215647290359, -295.84796972341951, 42146.236069249338, 19328.177037179787, -20460.150394813842, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.1233459261319253e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-29 13:33:05]
Fault Injection Successful after 3.7572288513183594s
[INFO -- 2018-11-29 13:33:06]
event type: exit
[INFO -- 2018-11-29 13:33:06]
exit code: 0
