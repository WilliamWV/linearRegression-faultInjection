[INFO -- 2018-11-29 13:42:40]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-29 13:42:40]
Initialization strings:
[INFO -- 2018-11-29 13:42:40]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-29 13:42:40]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-29 13:42:40]
initSignal:0
[INFO -- 2018-11-29 13:42:40]
endSignal:6
[INFO -- 2018-11-29 13:42:40]
faultModel:2
[INFO -- 2018-11-29 13:42:42]
Backtrace BEGIN:
#0  0x000055555555525a in predict (v=-3) at lreg.cpp:54
#1  0x000055555555530a in meanSquaredError () at lreg.cpp:61
#2  0x00005555555556b1 in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}
55	/**
56		Calculates the mean squared error of T
57	*/
58	double meanSquaredError(){

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x5555557723f0
address max offset: 8
Memory content after  bitflip:0xdf0x4f0xbe0x420x150xc90x3c0x8d
frame name: predict
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 8, capacity 8 = {-10, 8, 12, 5, -5, 14, -4, 12}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-29 13:42:42]
Fault Injection Successful after 2.3776397705078125s
[INFO -- 2018-11-29 13:42:47]
event type: exit
[INFO -- 2018-11-29 13:42:47]
exit code: 0
