[INFO -- 2018-11-24 15:58:20]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 15:58:20]
Initialization strings:
[INFO -- 2018-11-24 15:58:20]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 15:58:20]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-24 15:58:20]
initSignal:0
[INFO -- 2018-11-24 15:58:20]
endSignal:6
[INFO -- 2018-11-24 15:58:20]
faultModel:2
[INFO -- 2018-11-24 15:58:22]
Backtrace BEGIN:
#0  0x000055555555529d in meanSquaredError () at lreg.cpp:61
#1  0x00005555555556b1 in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:121
#2  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#3  0x0000555555555cb0 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:196

56		Calculates the mean squared error of T
57	*/
58	double meanSquaredError(){
59		double error = 0;
60		for(int i = 0; i<x.size(); i++){
61			error+= ((predict(x[i]) - y[i]) * (predict(x[i]) - y[i]));	
62		}
63		error /= x.size();
64		return error;
65	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0xb70x150x620x330x8e0xc70xe20x3f
Fault Model: Random bit-flip
base address to flip value: 0x555555772450
address max offset: 8
Memory content after  bitflip:0xd10x8f0x290xae0xab0x030x550x7e
frame name: meanSquaredError
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 2, capacity 2 = {3.5182881957159754e+300, -1.0365893088688314}
value address: 0x55555575b180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-24 15:58:22]
Fault Injection Successful after 2.262329578399658s
[INFO -- 2018-11-24 15:58:23]
event type: exit
[INFO -- 2018-11-24 15:58:23]
exit code: 0
