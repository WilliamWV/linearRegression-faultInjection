[INFO -- 2018-11-25 22:34:20]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 22:34:20]
Initialization strings:
[INFO -- 2018-11-25 22:34:20]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 22:34:20]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 22:34:20]
initSignal:0
[INFO -- 2018-11-25 22:34:20]
endSignal:6
[INFO -- 2018-11-25 22:34:20]
faultModel:2
[INFO -- 2018-11-25 22:34:21]
Backtrace BEGIN:
#0  0x00005555555561bd in std::vector<double, std::allocator<double> >::size (this=0x55555575b180 <T>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x00005555555551f9 in predict (v=-28) at lreg.cpp:49
#2  0x000055555555530a in meanSquaredError () at lreg.cpp:61
#3  0x00005555555556b1 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:121
#4  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#5  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x3c0xc0
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd4d8
address max offset: 8
Memory content after  bitflip:0xe70xeb0x730x230x660x060xe90x7c
frame name: predict
symbol name: v
symbol filename: lreg.cpp
symbol line: 47
value: 4.9945895781979074e+293
value address: 0x7fffffffd4d8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-25 22:34:21]
Fault Injection Successful after 1.6343297958374023s
[INFO -- 2018-11-25 22:34:23]
event type: exit
[INFO -- 2018-11-25 22:34:23]
exit code: 0
