[INFO -- 2018-11-07 14:24:54]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-07 14:24:54]
Initialization strings:
[INFO -- 2018-11-07 14:24:54]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-07 14:24:54]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-07 14:24:54]
initSignal:0
[INFO -- 2018-11-07 14:24:54]
endSignal:10
[INFO -- 2018-11-07 14:24:54]
faultModel:2
[EXCEPTION -- 2018-11-07 14:24:57]
gdbException: Cannot access memory at address 0x941c1cd3b07c1204
[EXCEPTION -- 2018-11-07 14:24:57]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-07 14:24:57]
Backtrace BEGIN:
#0  0x0000555555555415 in partialDerivate (pos=2) at lreg.cpp:74
#1  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#2  0x00005555555556ac in train (iterations=45000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

69		to the adjustment variable whose position in T is passed in pos
70	*/
71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;
78	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0xda0x400x000x000x000x000x000x3d
Fault Model: Random bit-flip
base address to flip value: 0x55555577270e
address max offset: 8
Memory content after  bitflip:0xca0xcb0x720x260xa30xc40xc50xaa
frame name: main
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 46, capacity 74 = {-1.2148769714911583e-102, -2.3158417847716945e+77, 2.1245519712903118e+183, 2.4383127753557199e-319, 7.1054273576787141e-15, -1.5046327690690116e-36, 8.1975371957979627e-320, 8.891034997972754e-162, 2.4381151490973834e-319, 1.7128536581735673e-316, 0, 8.1066291169631733e-320, 2.428826714955568e-319, 8.1155222985883157e-320, 8.0947715414629834e-320, 8.1115697734215858e-320, 2.4302100987639235e-319, 8.0868664911295234e-320, 8.1115697734215858e-320, 2.4303089118930918e-319, 8.1125579047132683e-320, 8.1125579047132683e-320, 8.1165104298799982e-320, 8.0987240666297134e-320, 2.4309017906681012e-319, 2.427640957405549e-319, 2.431198230055606e-319, 2.4306053512805965e-319, 8.0987240666297134e-320, 8.0987240666297134e-320, 2.4302100987639235e-319, 8.1254036115051407e-320, 8.1224392176300932e-320, 8.1239214145676169e-320, 2.4310500103618536e-319, 8.1155222985883157e-320, 8.1046528543798083e-320, 8.1184866924633632e-320, 8.1026765917964433e-320, 8.1155222985883157e-320, 2.4309017906681012e-319, 2.428431462438895e-319, 8.1174985611716807e-320, 2.4301112856347553e-319, 2.429221967472241e-319, 2.427640957405549e-319, 2.429617219988914e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.7128536581735673e-316, 0, 8.1125579047132683e-320, 2.430012472505587e-319, 8.1224392176300932e-320, 8.0947715414629834e-320, 8.1184866924633632e-320, 2.4310994169264377e-319, 0, 8.1184866924633632e-320, 2.4337179648493964e-319, 2.4337179648493964e-319, 2.4337179648493964e-319, 2.4344590633181582e-319, 2.4310006037972695e-319, 2.4349037223994153e-319, 1.7272337110251787e-77, -2.4355954143035931e-319, 2.4342614370598217e-319, 2.4310006037972695e-319, 2.4310006037972695e-319, -1.7311155196442804e+274, 2.143017214396039e+301, 1.8465957235773943e-127, -1.1270725851912829e-131, 7.1054273576271952e-15, -2.3158417847716945e+77, 2.1245519712903118e+183, 2.4383127753557199e-319, 7.1054273576787141e-15, -1.5046327690690116e-36, 8.1975371957979627e-320, 8.891034997972754e-162, 1.5845632503026495e+29, 8.1738220447975828e-320, 8.1446721716929493e-320, -1.7272337110251756e-77, 8.1590000754223454e-320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.5865752221267447e-317, 1.7208890311400616e-102, -1.273829882820611e+222, -1.5910076185887546e-282, -6.6773657318303541e-06, 2.4284808690034791e-319, 1.5865752221267447e-317, 1.7208890311400616e-102, -1.273829882820611e+222, -1.5910076185887546e-282, -6.6773657318303541e-06, 2.4284808690034791e-319, 1.5865752221267447e-317, 1.1945594408446139e+103, -2.7402907380546847e+220, -2.0710934476241357e-278, -3.6007411976190835e+226, 2.4284808690034791e-319, 1.5865752221267447e-317, 0, -1.2738298828179729e+222, -1.5910076185887546e-282, -6.6773657318303541e-06, 2.4284808690034791e-319, 1.3578817365373325e-314, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-07 14:24:57]
Fault Injection Successful after 3.417948007583618s
[INFO -- 2018-11-07 14:24:57]
event type: exit
[EXCEPTION -- 2018-11-07 14:24:57]
exit code: no exit code available
