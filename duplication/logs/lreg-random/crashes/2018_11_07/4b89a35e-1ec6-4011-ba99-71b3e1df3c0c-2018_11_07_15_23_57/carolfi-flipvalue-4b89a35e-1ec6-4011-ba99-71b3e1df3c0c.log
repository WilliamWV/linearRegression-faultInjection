[INFO -- 2018-11-07 15:23:52]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-07 15:23:52]
Initialization strings:
[INFO -- 2018-11-07 15:23:52]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-07 15:23:52]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-07 15:23:52]
initSignal:0
[INFO -- 2018-11-07 15:23:52]
endSignal:10
[INFO -- 2018-11-07 15:23:52]
faultModel:2
[EXCEPTION -- 2018-11-07 15:23:55]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-07 15:23:55]
Backtrace BEGIN:
#0  0x00005555555551cd in predict (v=7) at lreg.cpp:47
#1  0x000055555555530a in meanSquaredError () at lreg.cpp:61
#2  0x00005555555556b1 in train (iterations=30000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

42	}
43	
44	/**
45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x5555557723a0
address max offset: 8
Memory content after  bitflip:0x930x2d0x120xfe0x010x870x7b0xfe
frame name: execute
symbol name: ans
symbol filename: lreg.cpp
symbol line: 135
value: std::vector of length 18, capacity 18 = {1.4916681462400625e-154, 5.0758836746315148e-116, 8.0863492239045047e-174, 1.7272337110189135e-77, 3.1620201333839779e-322, 4.1738665760668508e-320, -6.8112311312014173e+187, -4.3146552088758469e+252, 9.5649576903283257e-30, 4.2682331144225289e-320, -6.8112311312014173e+187, -4.3146552088758469e+252, 9.5649576903283257e-30, 6.2919259997882747e-320, 2.375860717561634e-212, 8.9664115300489169e-44, 7.1035471961175498e-15, 1.1318002955158431e-72, 1.0948147982594477e+287, 1.0370437906207765e-319, 4.7468246797953015e-307, 4.0473857707314917e-320, 1.1821097936583128e-125, 4.8617306858426276e-63, 1.1319598848533551e-72, 8.9683101716792116e-44, 2.1800754380842041e-106, 3.0517578125000434e-05, 3.1620201333839779e-322, 1.0244945232164088e-319, 0, 4.0473857707314917e-320, 5.4323092236062891e-312, 2.8893096347440583e-310, 0, 0, 0, 0, 0, 4.1738665760668508e-320, -6.8705568337502332e+187, -4.3188519508150733e+252, 8.9910323970131632e-68, 4.2682331144225289e-320, 4.7468246798794872e-307, -4.3178555208747349e+252, 1.0668503114458557e-67, 4.2682331144225289e-320, 0, -4.3146552088756914e+252, 9.5649576903283257e-30, 1.843408331198275e-319, 0, 4.0215293667718976e-87, 1.181821263076591e-125, 4.861730685829086e-63, 1.1319598848533551e-72, 8.9683101716792116e-44, 2.1800754380842041e-106, 3.0517578125000434e-05, 3.1861838222649498e-58, 1.4916681462400625e-154, 3.1620201333839779e-322, 1.288229753919445e-231, 8.9683101716792116e-44, 3.8518598887746359e-34, 2.3763644578690511e-212, 4.861730685829086e-63, 9.4860604001519336e-322, 3.4529259856553038e-319, 2.1800754380841732e-106, 1.4916681462401049e-154, 4.3836186980168684e-193, 2.7516420536595187e-135, 1.4916681462400625e-154, 5.0758836746315148e-116, 8.0863492239045047e-174, 1.7272337110189135e-77, 8.9683101716789567e-44, 1.181821263076591e-125, 2.3763644578689835e-212, -3.105036184601462e+231, 3.1861838222650397e-58, 1.3684555315672625e-48, 1.4916681462401049e-154, 1.7272337110189135e-77, -3.1050361846015502e+231, 4.383618698016992e-193, 1.7272337110189135e-77, 1.288229753919445e-231, 3.1620201333839779e-322, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.4529259856553038e-319, 1.6543612251060553e-24, 4.021529366772069e-87, 1.181821263076591e-125, 4.861730685829086e-63, 1.1319598848533551e-72, 8.9683101716792116e-44, 2.1800754380842041e-106, 3.0517578125000434e-05, 3.1861838222649498e-58, 1.4916681462400625e-154, 3.1620201333839779e-322, 1.288229753919445e-231, 8.9683101716792116e-44, 3.8518598887746359e-34, 2.3763644578690511e-212, 4.861730685829086e-63, 1.2882297539194816e-231, 3.7857669957338405e-270, 2.1800754380842041e-106, -3.105036184601462e+231, 3.1126135687998532e-322, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5.4620735784074834e-317, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x7fffffffd900
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-07 15:23:55]
Fault Injection Successful after 3.7760493755340576s
[INFO -- 2018-11-07 15:23:56]
event type: exit
[EXCEPTION -- 2018-11-07 15:23:56]
exit code: no exit code available
