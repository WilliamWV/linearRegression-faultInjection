[INFO -- 2018-11-09 18:38:00]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-09 18:38:00]
Initialization strings:
[INFO -- 2018-11-09 18:38:00]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-09 18:38:00]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-09 18:38:00]
initSignal:0
[INFO -- 2018-11-09 18:38:00]
endSignal:10
[INFO -- 2018-11-09 18:38:00]
faultModel:2
[EXCEPTION -- 2018-11-09 18:38:01]
gdbException: Attempt to dereference a generic pointer.
[EXCEPTION -- 2018-11-09 18:38:05]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-09 18:38:06]
Backtrace BEGIN:
#0  0x0000555555556131 in std::pow<double, int> (__x=-7, __y=0) at /usr/include/c++/7/cmath:418
#1  0x0000555555555237 in predict (v=-7) at lreg.cpp:50
#2  0x00005555555553fc in partialDerivate (pos=3) at lreg.cpp:74
#3  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#4  0x00005555555556ac in train (iterations=45000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555a1c in execute (input=0x7fffffffe1f3 "/tmp/lreg/randInput") at lreg.cpp:157
#6  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

413	    inline _GLIBCXX_CONSTEXPR
414	    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
415	    pow(_Tp __x, _Up __y)
416	    {
417	      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
418	      return pow(__type(__x), __type(__y));
419	    }
420	
421	  using ::sin;
422	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x800x280x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b148 
address max offset: 8
Memory content after  bitflip:0x6c0xc50x7c0x7a0xda0x1f0xe60xb9
frame name: predict
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length -631426091728194622, capacity 64 = {7, -14, 10, 12, 10, 13, -6, 6, -20, -18, -15, 16, 9, -22, -10, 19, 13, 18, 16, 4, 16, -1, 23, -17, -22, -21, -15, 17, -2, 25, 18, 5, -13, -3, 10, -7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.6136072665001942e-321, -2, -2, -2, -2, -2, -2, -2, -2, 1584, 1282, 889, 1044, 337, 1918, 394, 1467, 693, 1318, 1044, 72, 785, 3, 1611, 851, 1431, 1303, 661, 885, 11, 1901, 991, 81, 495, 25, 311, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, -2.7050659192326156, -0.53415962394436034, 3.2632577456313276, 0.0049844454746979239, 0, 2.4209216646221081e-322, -2.7048855123874365, -0.53485555467118162, 3.2622417495331026, -0.0096737294606006503, 0, 2.4209216646221081e-322, 4.6355706481235657e-310, -0.53485555467118162, 3.2622417495331026, -0.0096737294606006503, 0, 2.4209216646221081e-322, 0, -0.53415962394436034, 3.2632577456313276, 0.0049844454746979239, 0, 2.0719630989644356e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-09 18:38:06]
Fault Injection Successful after 6.486721992492676s
[INFO -- 2018-11-09 18:38:07]
event type: exit
[EXCEPTION -- 2018-11-09 18:38:07]
exit code: no exit code available
