[INFO -- 2018-11-24 18:07:20]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 18:07:20]
Initialization strings:
[INFO -- 2018-11-24 18:07:20]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 18:07:20]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-24 18:07:20]
initSignal:0
[INFO -- 2018-11-24 18:07:20]
endSignal:6
[INFO -- 2018-11-24 18:07:20]
faultModel:2
[EXCEPTION -- 2018-11-24 18:07:21]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-24 18:07:21]
Backtrace BEGIN:
#0  0x000055555555533e in meanSquaredError () at lreg.cpp:61
#1  0x00005555555556b1 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:121
#2  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#3  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

56		Calculates the mean squared error of T
57	*/
58	double meanSquaredError(){
59		double error = 0;
60		for(int i = 0; i<x.size(); i++){
61			error+= ((predict(x[i]) - y[i]) * (predict(x[i]) - y[i]));	
62		}
63		error /= x.size();
64		return error;
65	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa00x230x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b188 
address max offset: 8
Memory content after  bitflip:0xde0xa50xd70x2e0xdf0x5b0x370xd8
frame name: execute
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length -358351931083845556, capacity 4 = {0.20614985323302762, -1.0033132866193373, -1.9458764187011841, -3.9701894518017813, 0, 4.001931731314097e-322, 4.635570648008152e-310, 1.5810100666919889e-322, 12.999771118164061, 2.9988444211833614e-310, -1078.8154304800657, -1078.8160145721722, -1722.5303976432911, -1319.1177772194476, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 1.124676287488633e-312, 0, 0, 0, 0, 0, 1.6304166312761136e-322, 4.6355706480121045e-310, -0.018636480386081677, -2.9944537928979051, 1.6304166312761136e-322, 4.6355706480287051e-310, -0.018629603636086151, -2.9945863353366149, 1.6304166312761136e-322, 0, -0.018636480386081677, -2.9944537928979051, 7.1639518646980749e-322, -15, -9, -1, 29, 5, -18, 31, -16, -18, -28, 25, -14, 7, -2, -17, 21, 0, 7.1639518646980749e-322, 13145, 2813, 13, -99407, -575, 22793, -121267, 15973, 22793, 86413, -63895, 10673, -1507, 41, 19181, -38047, 0, 7.1639518646980749e-322, 9.9997448205173409, 10.999751207252501, 12.999763980722822, -7.0003637539803849, -1078.8160145721722, -1078.8160145721722, -1722.5303976432911, -1319.1177772194476, -1582.6669839552355, -584.82432114594803, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, 0.20586868556330903, -1.0060213860214144, -1.9553059012765999, -4.0448097382994606, 0, 2.4209216646221081e-322, 0.20586868556330903, -1.0060213860214144, -1.9553059012765999, -4.0448097382994606, 0, 2.4209216646221081e-322, 4.6355706480587443e-310, -1.003223041879109, -1.9458756284158181, -3.9701895863631029, 0, 2.4209216646221081e-322, 0, -1.0060213860214144, -1.9553059012765999, -4.0448097382994606, 0, 2.1367845116988072e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-24 18:07:21]
Fault Injection Successful after 1.8610455989837646s
[INFO -- 2018-11-24 18:07:22]
event type: exit
[EXCEPTION -- 2018-11-24 18:07:22]
exit code: no exit code available
