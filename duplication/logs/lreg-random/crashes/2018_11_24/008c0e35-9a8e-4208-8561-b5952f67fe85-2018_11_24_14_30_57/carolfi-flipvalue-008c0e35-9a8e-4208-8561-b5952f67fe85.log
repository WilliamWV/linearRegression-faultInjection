[INFO -- 2018-11-24 14:30:53]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 14:30:53]
Initialization strings:
[INFO -- 2018-11-24 14:30:53]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 14:30:53]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-24 14:30:53]
initSignal:0
[INFO -- 2018-11-24 14:30:53]
endSignal:6
[INFO -- 2018-11-24 14:30:53]
faultModel:2
[EXCEPTION -- 2018-11-24 14:30:55]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-24 14:30:56]
Backtrace BEGIN:
#0  0x0000555555558015 in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772450, __last=0x555555772468, __result=0x555555772490) at /usr/include/c++/7/bits/stl_algobase.h:368
#1  0x0000555555557d70 in std::__copy_move_a<false, double const*, double*> (__first=0x555555772450, __last=0x555555772468, __result=0x555555772490) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x000055555555812a in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.053291385238146735, __last=1.6304166312761136e-322, __result=0x555555772490) at /usr/include/c++/7/bits/stl_algobase.h:424
#3  0x0000555555557f81 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.053291385238146735, __last=1.6304166312761136e-322, __result=0x555555772490) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555557cb8 in std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.053291385238146735, __last=1.6304166312761136e-322, __result=0x555555772490) at /usr/include/c++/7/bits/stl_uninitialized.h:101
#5  0x00005555555574bc in std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.053291385238146735, __last=1.6304166312761136e-322, __result=0x555555772490) at /usr/include/c++/7/bits/stl_uninitialized.h:134
#6  0x0000555555556b4d in std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double> (__first=0.053291385238146735, __last=1.6304166312761136e-322, __result=0x555555772490) at /usr/include/c++/7/bits/stl_uninitialized.h:289
#7  0x000055555555636d in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5d0, __x=std::vector of length -9, capacity -9 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#8  0x000055555555572b in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:126
#9  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#10 0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}
371	    };
372	

Backtrace END
Memory content before bitflip:0x01
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd4bf
address max offset: 1
Memory content after  bitflip:0x07
frame name: std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>
symbol name: __assignable
symbol filename: /usr/include/c++/7/bits/stl_uninitialized.h
symbol line: 128
value: 7
value address: 0x7fffffffd4bf
Type: A boolean type.
Type sizeof: 1

[INFO -- 2018-11-24 14:30:56]
Fault Injection Successful after 3.3659307956695557s
[INFO -- 2018-11-24 14:30:56]
event type: exit
[EXCEPTION -- 2018-11-24 14:30:56]
exit code: no exit code available
