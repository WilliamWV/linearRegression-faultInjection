[INFO -- 2018-11-24 15:18:58]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 15:18:58]
Initialization strings:
[INFO -- 2018-11-24 15:18:58]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 15:18:58]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-24 15:18:58]
initSignal:0
[INFO -- 2018-11-24 15:18:58]
endSignal:6
[INFO -- 2018-11-24 15:18:58]
faultModel:2
[INFO -- 2018-11-24 15:19:00]
Backtrace BEGIN:
#0  0x00005555555562e4 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5d0, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/stl_vector.h:328
#1  0x000055555555572b in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#2  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#3  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

323	       *  The newly-created %vector uses a copy of the allocator object used
324	       *  by @a __x (unless the allocator traits dictate a different object).
325	       */
326	      vector(const vector& __x)
327	      : _Base(__x.size(),
328		_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
329	      {
330		this->_M_impl._M_finish =
331		  std::__uninitialized_copy_a(__x.begin(), __x.end(),
332					      this->_M_impl._M_start,

Backtrace END
Fliping a bit of the pointer
Memory content before bitflip:0x480xde0xff0xff0xff0x7f0x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd8e0
address max offset: 8
Memory content after  bitflip:0xca0x570xeb0x4e0x130x740x4f0xe0
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 181
value: 0x7fffffffde48
value address: 0x7fffffffd8e0
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-24 15:19:00]
Fault Injection Successful after 2.113948106765747s
[INFO -- 2018-11-24 15:19:03]
event type: exit
[EXCEPTION -- 2018-11-24 15:19:03]
exit code: no exit code available
