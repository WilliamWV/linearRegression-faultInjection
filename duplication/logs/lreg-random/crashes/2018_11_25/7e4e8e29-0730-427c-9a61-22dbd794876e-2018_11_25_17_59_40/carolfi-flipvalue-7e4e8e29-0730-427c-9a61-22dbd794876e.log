[INFO -- 2018-11-25 17:59:38]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 17:59:38]
Initialization strings:
[INFO -- 2018-11-25 17:59:38]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 17:59:38]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 17:59:38]
initSignal:0
[INFO -- 2018-11-25 17:59:38]
endSignal:6
[INFO -- 2018-11-25 17:59:38]
faultModel:2
[INFO -- 2018-11-25 17:59:39]
Backtrace BEGIN:
#0  0x00005555555561d4 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b160 <y>, __n=15) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x000055555555543b in partialDerivate (pos=3) at lreg.cpp:74
#2  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#3  0x00005555555556ac in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#5  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x300x250x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b148 
address max offset: 8
Memory content after  bitflip:0x9f0xff0xdf0xd40xab0xc50x830x87
frame name: adjust
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length -1085246517479138466, capacity 16 = {-15, -9, -1, 29, 5, -18, 31, -16, -18, -28, 25, -14, 7, -2, -17, 21, 0, 7.1639518646980749e-322, 13145, 2813, 13, -99407, -575, 22793, -121267, 15973, 22793, 86413, -63895, 10673, -1507, 41, 19181, -38047, 0, 7.1639518646980749e-322, 9.9997448205173409, 10.999751207252501, 12.999763980722822, -7.0003637539803849, -1078.8160145721722, -1078.8160145721722, -1722.5303976432911, -1319.1177772194476, -1582.6669839552355, -584.82432114594803, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, -0.0097242822947271705, -0.37245141705143026, -1.9403549347621249, -3.9711300840421462, 0, 2.4209216646221081e-322, -0.010007024032372937, -0.37515380846108959, -1.9497843686927976, -4.0457503790351286, 0, 2.4209216646221081e-322, 4.6355706480587443e-310, -0.37515380846108959, -1.9497843686927976, -4.0457503790351286, 0, 2.4209216646221081e-322, 0, -0.37245141705143026, -1.9403549347621249, -3.9711300840421462, 0, 2.1367845116988072e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-25 17:59:39]
Fault Injection Successful after 1.6876041889190674s
[INFO -- 2018-11-25 17:59:39]
event type: exit
[EXCEPTION -- 2018-11-25 17:59:39]
exit code: no exit code available
