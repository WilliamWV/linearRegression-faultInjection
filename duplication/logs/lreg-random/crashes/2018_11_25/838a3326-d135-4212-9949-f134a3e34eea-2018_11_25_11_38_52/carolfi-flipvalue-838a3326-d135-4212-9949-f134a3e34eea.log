[INFO -- 2018-11-25 11:38:46]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 11:38:46]
Initialization strings:
[INFO -- 2018-11-25 11:38:46]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 11:38:46]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 11:38:46]
initSignal:0
[INFO -- 2018-11-25 11:38:46]
endSignal:6
[INFO -- 2018-11-25 11:38:46]
faultModel:2
[EXCEPTION -- 2018-11-25 11:38:48]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-25 11:38:49]
Backtrace BEGIN:
#0  std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772660, __last=0x555555772680, __result=0x5555557726c0) at /usr/include/c++/7/bits/stl_algobase.h:370
#1  0x0000555555557e42 in std::__copy_move_a<false, double const*, double*> (__first=0x555555772660, __last=0x555555772680, __result=0x5555557726c0) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x00005555555581fc in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.1522612934462263, __last=0, __result=0x5555557726c0) at /usr/include/c++/7/bits/stl_algobase.h:424
#3  0x0000555555558053 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.1522612934462263, __last=0, __result=0x5555557726c0) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555557d8a in std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.1522612934462263, __last=0, __result=0x5555557726c0) at /usr/include/c++/7/bits/stl_uninitialized.h:101
#5  0x000055555555758e in std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.1522612934462263, __last=0, __result=0x5555557726c0) at /usr/include/c++/7/bits/stl_uninitialized.h:134
#6  0x0000555555556c1f in std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double> (__first=0.1522612934462263, __last=0, __result=0x5555557726c0) at /usr/include/c++/7/bits/stl_uninitialized.h:289
#7  0x000055555555643f in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5f0, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#8  0x0000555555555713 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:126
#9  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#10 0x0000555555555cb0 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:196

365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}
371	    };
372	
373	  template<bool _IsMove, typename _II, typename _OI>
374	    inline _OI

Backtrace END
Memory content before bitflip:0x01
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd55c
address max offset: 1
Memory content after  bitflip:0x5a
frame name: train
symbol name: stopsWhenStable
symbol filename: lreg.cpp
symbol line: 105
value: 90
value address: 0x7fffffffd55c
Type: A boolean type.
Type sizeof: 1

[INFO -- 2018-11-25 11:38:49]
Fault Injection Successful after 3.0163679122924805s
[INFO -- 2018-11-25 11:38:51]
event type: exit
[EXCEPTION -- 2018-11-25 11:38:51]
exit code: no exit code available
