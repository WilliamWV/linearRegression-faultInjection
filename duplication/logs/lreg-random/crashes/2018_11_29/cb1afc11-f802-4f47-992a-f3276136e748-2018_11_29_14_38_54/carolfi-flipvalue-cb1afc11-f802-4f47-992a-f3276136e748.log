[INFO -- 2018-11-29 14:38:53]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-29 14:38:53]
Initialization strings:
[INFO -- 2018-11-29 14:38:53]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-29 14:38:53]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-29 14:38:53]
initSignal:0
[INFO -- 2018-11-29 14:38:53]
endSignal:6
[INFO -- 2018-11-29 14:38:53]
faultModel:2
[INFO -- 2018-11-29 14:38:54]
Backtrace BEGIN:
#0  0x0000555555557e1b in std::__copy_move_a<false, double const*, double*> (__first=0x555555557df1 <std::__niter_base<double const*, std::vector<double, std::allocator<double> > >(__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >)+24>, __last=0x7fffffffd3d0, __result=0x7fffffffd3c8) at /usr/include/c++/7/bits/stl_algobase.h:375
#1  0x00005555555581fc in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-0.027661420789811313, __last=1.6304166312761136e-322, __result=0x555555772490) at /usr/include/c++/7/bits/stl_algobase.h:424
#2  0x0000555555558053 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-0.027661420789811313, __last=1.6304166312761136e-322, __result=0x555555772490) at /usr/include/c++/7/bits/stl_algobase.h:456
#3  0x0000555555557d8a in std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-0.027661420789811313, __last=1.6304166312761136e-322, __result=0x555555772490) at /usr/include/c++/7/bits/stl_uninitialized.h:101
#4  0x000055555555758e in std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=-0.027661420789811313, __last=1.6304166312761136e-322, __result=0x555555772490) at /usr/include/c++/7/bits/stl_uninitialized.h:134
#5  0x0000555555556c1f in std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double> (__first=-0.027661420789811313, __last=1.6304166312761136e-322, __result=0x555555772490) at /usr/include/c++/7/bits/stl_uninitialized.h:289
#6  0x000055555555643f in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5d0, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#7  0x000055555555572b in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:126
#8  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#9  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

370		}
371	    };
372	
373	  template<bool _IsMove, typename _II, typename _OI>
374	    inline _OI
375	    __copy_move_a(_II __first, _II __last, _OI __result)
376	    {
377	      typedef typename iterator_traits<_II>::value_type _ValueTypeI;
378	      typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
379	      typedef typename iterator_traits<_II>::iterator_category _Category;

Backtrace END
Fliping value of field: _M_current
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x210x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x555555772468
address max offset: 8
Memory content after  bitflip:0x5f0xf80x320x3b0x0b0x550xa00x84
frame name: std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*>
symbol name: __last
symbol filename: /usr/include/c++/7/bits/stl_algobase.h
symbol line: 446
value: -2.1451560550874297e-286
value address: 0x7fffffffd430
Type: The type is a structure.
Type sizeof: 8
Field name: _M_current
Field Type: The type is a pointer.
Field Type sizeof: 8

[INFO -- 2018-11-29 14:38:54]
Fault Injection Successful after 1.0678012371063232s
[INFO -- 2018-11-29 14:38:54]
event type: exit
[EXCEPTION -- 2018-11-29 14:38:54]
exit code: no exit code available
