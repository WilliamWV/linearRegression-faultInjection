[INFO -- 2018-11-29 14:02:25]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-29 14:02:25]
Initialization strings:
[INFO -- 2018-11-29 14:02:25]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-29 14:02:25]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-29 14:02:25]
initSignal:0
[INFO -- 2018-11-29 14:02:25]
endSignal:6
[INFO -- 2018-11-29 14:02:25]
faultModel:2
[INFO -- 2018-11-29 14:02:27]
Backtrace BEGIN:
#0  0x0000555555554ed0 in pow@plt ()
#1  0x000055555555621b in std::pow<double, int> (__x=-1, __y=0) at /usr/include/c++/7/cmath:418
#2  0x0000555555555237 in predict (v=-1) at lreg.cpp:50
#3  0x00005555555553fc in partialDerivate (pos=0) at lreg.cpp:74
#4  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#5  0x00005555555556ac in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#6  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#7  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

167		inp.close();
168	}
169	
170	/*
171	It must receive an input file formated as follows:
172		1° Line : one integer T -> number of test cases
173		2° to 5° repeat to all test case	
174		2° Line : method parameters -> alpha, iterations, N, size of 
175			      training set, predictions
176		3° Line : inputs x of the training set

Backtrace END
Fliping a bit of the pointer
Memory content before bitflip:0x480xde0xff0xff0xff0x7f0x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd8e0
address max offset: 8
Memory content after  bitflip:0xdb0x390x270x3d0x3c0x5c0xaa0xb2
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 181
value: 0x7fffffffde48
value address: 0x7fffffffd8e0
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-29 14:02:27]
Fault Injection Successful after 2.3471486568450928s
[INFO -- 2018-11-29 14:02:29]
event type: exit
[EXCEPTION -- 2018-11-29 14:02:29]
exit code: no exit code available
