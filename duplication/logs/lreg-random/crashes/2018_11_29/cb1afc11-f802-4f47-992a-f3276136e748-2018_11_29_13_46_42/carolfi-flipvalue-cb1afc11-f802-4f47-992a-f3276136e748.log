[INFO -- 2018-11-29 13:46:32]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-29 13:46:32]
Initialization strings:
[INFO -- 2018-11-29 13:46:32]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-29 13:46:32]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-29 13:46:32]
initSignal:0
[INFO -- 2018-11-29 13:46:32]
endSignal:6
[INFO -- 2018-11-29 13:46:32]
faultModel:2
[EXCEPTION -- 2018-11-29 13:46:37]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-29 13:46:37]
Backtrace BEGIN:
#0  0x00005555555561ef in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b160 <y>, __n=13) at /usr/include/c++/7/bits/stl_vector.h:799
#1  0x0000555555555415 in partialDerivate (pos=2) at lreg.cpp:74
#2  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#3  0x00005555555556ac in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#5  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.
803	       *  @param __n The index of the element for which data should be

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xc00x250x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b168 
address max offset: 8
Memory content after  bitflip:0xd10x0c0xb20x540x940x0d0xa60xd9
frame name: adjust
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length -345450026951549709, capacity 16 = {13145, 2813, 13, -99407, -575, 22793, -121267, 15973, 22793, 86413, -63895, 10673, -1507, 41, 19181, -38047, 0, 7.1639518646980749e-322, 9.9997448205173409, 10.999751207252501, 12.999763980722822, -7.0003637539803849, -1078.8160145721722, -1078.8160145721722, -1722.5303976432911, -1319.1177772194476, -1582.6669839552355, -584.82432114594803, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, 0.31978819980465706, -1.3349191634496629, -1.9581870424244974, -4.0443193198528897, 0, 2.4209216646221081e-322, 0.31978819980465706, -1.3349191634496629, -1.9581870424244974, -4.0443193198528897, 0, 2.4209216646221081e-322, 4.6355706480587443e-310, -1.3321236979387103, -1.9487567949377123, -3.9696991636210908, 0, 2.4209216646221081e-322, 0, -1.3349191634496629, -1.9581870424244974, -4.0443193198528897, 0, 2.1367845116988072e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-29 13:46:37]
Fault Injection Successful after 5.803856134414673s
[INFO -- 2018-11-29 13:46:40]
event type: exit
[EXCEPTION -- 2018-11-29 13:46:40]
exit code: no exit code available
