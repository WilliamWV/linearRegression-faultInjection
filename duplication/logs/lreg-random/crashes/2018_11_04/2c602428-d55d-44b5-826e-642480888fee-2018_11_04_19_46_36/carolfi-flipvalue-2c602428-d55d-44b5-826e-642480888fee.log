[INFO -- 2018-11-04 19:46:32]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-04 19:46:32]
Initialization strings:
[INFO -- 2018-11-04 19:46:32]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-04 19:46:32]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-04 19:46:32]
initSignal:0
[INFO -- 2018-11-04 19:46:32]
endSignal:10
[INFO -- 2018-11-04 19:46:32]
faultModel:2
[EXCEPTION -- 2018-11-04 19:46:35]
gdbException: Cannot access memory at address 0x9d83e13d7b9c7377
[INFO -- 2018-11-04 19:46:35]
Backtrace BEGIN:
#0  0x0000555555556a4f in __gnu_cxx::__alloc_traits<std::allocator<double> >::_S_select_on_copy (__a=...) at /usr/include/c++/7/ext/alloc_traits.h:95
#1  0x00005555555562e6 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5f0, __x=std::vector of length 887084344827139845, capacity 887084344827139845 = {...}) at /usr/include/c++/7/bits/stl_vector.h:328
#2  0x0000555555555713 in train (iterations=45000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:126
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

90	      static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
91	      destroy(_Alloc& __a, _Ptr __p)
92	      { _Base_type::destroy(__a, std::addressof(*__p)); }
93	
94	    static _Alloc _S_select_on_copy(const _Alloc& __a)
95	    { return _Base_type::select_on_container_copy_construction(__a); }
96	
97	    static void _S_on_swap(_Alloc& __a, _Alloc& __b)
98	    { std::__alloc_on_swap(__a, __b); }
99	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa00x230x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b188 
address max offset: 8
Memory content after  bitflip:0xe30x0b0x260x9a0x680xd30xaa0x43
frame name: std::vector<double, std::allocator<double> >::vector
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 609481020975471884, capacity 4 = {17.584993364335055, -162.58509869324146, 3.4989049876802367, 2.9335287115681457, 0, 4.001931731314097e-322, 4.635570648008152e-310, 1.5810100666919889e-322, -24.999984741210934, 1.1246749974338252e-312, 1.7601404197803376, 954.23023768042447, -0.40009122370047034, -0.40009122370047034, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 1.1246746697991328e-312, 0, 0, 0, 0, 0, 1.6304166312761136e-322, 4.6355706480121045e-310, 3.2756125154199687, 1.8178256194144129, 1.6304166312761136e-322, 4.6355706480287051e-310, 3.2755797613143565, 1.8179675099418116, 1.6304166312761136e-322, 0, 3.2756125154199687, 1.8178256194144129, 7.1639518646980749e-322, 30.999965094476373, 12.999986040015587, -24.99996974162384, 2.9999976764262644, 1.7601411167526742, 954.23023768042447, -0.40009122370047034, -0.40009122370047034, 250.40694824837814, 872.06804608336711, 408, 1130, 863, 5, 255, 107, 0, 1.3487992131466031e-321, 0, 1, -14, -12, -16, -1, -10, 13, -24, 15, 14, -24, -21, 1, 11, 7, -4, -6, 12, -2, -21, 21, -32, 1, -24, 12, -16, -15, -19, 27, 30, -30, 0, 1.3487992131466031e-321, 4.6355706480374006e-310, 3, -27, -23, -31, -1, -19, 27, 1130, 467, 408, 1130, 863, 5, 255, 107, 30, 68, 302, 8, -30465, 25185, -104506, 5, -44970, 4350, -13850, -11499, -22775, 54735, 75666, -86454, 0, 2.6136072665001942e-321, 8, 1, -14, -12, -16, -1, -10, 13, -24, 15, 14, -24, -21, 1, 11, 7, -4, -6, 12, -2, -21, 21, -32, 1, -24, 12, -16, -15, -19, 27, 30, -30, 27, 24, 19, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.6136072665001942e-321, 17, 3, -27, -23, -31, -1, -19, 27, 1130, 467...}
value address: 0x55555575b180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-04 19:46:35]
Fault Injection Successful after 3.9838919639587402s
[INFO -- 2018-11-04 19:46:36]
event type: exit
[EXCEPTION -- 2018-11-04 19:46:36]
exit code: no exit code available
