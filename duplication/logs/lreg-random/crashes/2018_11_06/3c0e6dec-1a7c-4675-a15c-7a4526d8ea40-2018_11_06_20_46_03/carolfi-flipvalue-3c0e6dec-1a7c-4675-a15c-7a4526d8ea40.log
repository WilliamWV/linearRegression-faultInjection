[INFO -- 2018-11-06 20:45:57]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-06 20:45:57]
Initialization strings:
[INFO -- 2018-11-06 20:45:57]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-06 20:45:57]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-06 20:45:57]
initSignal:0
[INFO -- 2018-11-06 20:45:57]
endSignal:10
[INFO -- 2018-11-06 20:45:57]
faultModel:2
[INFO -- 2018-11-06 20:46:02]
Backtrace BEGIN:
#0  0x0000555555557fe2 in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772450, __last=0x555555772460, __result=0x555555772490) at /usr/include/c++/7/bits/stl_algobase.h:366
#1  0x0000555555557d58 in std::__copy_move_a<false, double const*, double*> (__first=0x555555772450, __last=0x555555772460, __result=0x555555772490) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x0000555555558112 in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.15038652190885637, __last=-3.7067144148879727, __result=0x555555772490) at /usr/include/c++/7/bits/stl_algobase.h:424
#3  0x0000555555557f69 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.15038652190885637, __last=-3.7067144148879727, __result=0x555555772490) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555557ca0 in std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.15038652190885637, __last=-3.7067144148879727, __result=0x555555772490) at /usr/include/c++/7/bits/stl_uninitialized.h:101
#5  0x00005555555574a4 in std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.15038652190885637, __last=-3.7067144148879727, __result=0x555555772490) at /usr/include/c++/7/bits/stl_uninitialized.h:134
#6  0x0000555555556b35 in std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double> (__first=0.15038652190885637, __last=-3.7067144148879727, __result=0x555555772490) at /usr/include/c++/7/bits/stl_uninitialized.h:289
#7  0x0000555555556355 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5d0, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#8  0x000055555555572b in train (iterations=15000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#9  0x0000555555555a1c in execute (input=0x7fffffffe1f3 "/tmp/lreg/randInput") at lreg.cpp:157
#10 0x0000555555555c98 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:194

361						   is_move_assignable<_Tp>,
362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x600x240x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575b188 
address max offset: 8
Memory content after  bitflip:0xb50x130xa70xd50x2f0xb50xf00x1d
frame name: std::vector<double, std::allocator<double> >::vector
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 269666201696075244, capacity 2 = {0.15038652190885637, 1.9906268638194309, -3.7067144148879727, 1.6304166312761136e-322, 0.15047333298764337, 1.9906214515857314, -3.7068899365624581, 1.6304166312761136e-322, 0, 1.9906214515857314, -3.7067144148879727, 7.1639518646980749e-322, 0, 15.999984611687871, -19.999980730371309, -9.9999903575770936, -1686.5148224321915, -183.26783195356683, -385.58920431366431, -553.33960845454544, -1112.944760614653, -88.452386134807952, 665.54114022059173, -368.43075790348121, -98431.99509853503, -3344.8792670190815, 3875.4460569477196, 635.28729530346709, 0, 1.3487992131466031e-321, 0, -9, 8, -3, 6, 12, 16, 6, 22, -23, -12, 17, -21, -18, 16, 13, -21, 17, -4, 9, -4, -10, 14, -9, -9, 28, -9, 30, -25, -18, 24, -7, 0, 1.3487992131466031e-321, -19.999980730371309, 15.999984611687871, -19.999980730371309, -9.9999903575770936, -1686.5148224321915, -183.26783195356683, -385.58920431366431, -553.33960845454544, -1112.944760614653, -88.452386134807952, 665.54114022059173, -368.43075790348121, -98431.99509853503, -3344.8792670190815, 3875.4460569477196, 635.28729530346709, -1304.9259764209105, 36758.55597185604, -81, -289, 184, 3514, -11966, 2524, 2524, -91752, 2524, -112526, 59404, 21730, -58196, 1138, 0, 2.6136072665001942e-321, 12, -9, 8, -3, 6, 12, 16, 6, 22, -23, -12, 17, -21, -18, 16, 13, -21, 17, -4, 9, -4, -10, 14, -9, -9, 28, -9, 30, -25, -18, 24, -7, -10, 8, -23, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.6136072665001942e-321, 24, -18, 16, -6, 12, 24, 32, 12, -1849, -2209, -625, -1089, -1849, -1369, -961, -625, -1849, -1089, -81, -289, 184, 3514, -11966, 2524, 2524, -91752, 2524, -112526, 59404, 21730, -58196, 1138, 3514, -2372, 46050, -1620...}
value address: 0x55555575b180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-06 20:46:02]
Fault Injection Successful after 5.6769187450408936s
[INFO -- 2018-11-06 20:46:02]
event type: exit
[EXCEPTION -- 2018-11-06 20:46:02]
exit code: no exit code available
