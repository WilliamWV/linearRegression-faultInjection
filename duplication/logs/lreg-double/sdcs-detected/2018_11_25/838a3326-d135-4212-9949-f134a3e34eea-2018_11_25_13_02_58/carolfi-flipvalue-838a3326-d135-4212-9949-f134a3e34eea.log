[INFO -- 2018-11-25 13:02:55]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 13:02:55]
Initialization strings:
[INFO -- 2018-11-25 13:02:55]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 13:02:55]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 13:02:55]
initSignal:0
[INFO -- 2018-11-25 13:02:55]
endSignal:6
[INFO -- 2018-11-25 13:02:55]
faultModel:1
[INFO -- 2018-11-25 13:02:56]
Backtrace BEGIN:
#0  0x00005555555561e3 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b180 <T>, __n=0) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x0000555555555217 in predict (v=-15) at lreg.cpp:50
#2  0x00005555555553fc in partialDerivate (pos=1) at lreg.cpp:74
#3  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#4  0x00005555555556ac in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#6  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd518
address max offset: 8
Memory content after  bitflip:0x460x5a0xb70xf40x390x4d0xd60x3e
frame name: adjust
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 83
value: 5.3171314208984372e-06
value address: 0x7fffffffd518
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-25 13:02:56]
Fault Injection Successful after 1.243011474609375s
[INFO -- 2018-11-25 13:02:57]
event type: exit
[INFO -- 2018-11-25 13:02:57]
exit code: 0
