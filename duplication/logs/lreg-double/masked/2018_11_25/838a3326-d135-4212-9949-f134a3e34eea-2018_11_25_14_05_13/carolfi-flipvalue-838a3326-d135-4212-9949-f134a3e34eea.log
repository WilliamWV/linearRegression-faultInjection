[INFO -- 2018-11-25 14:05:10]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 14:05:10]
Initialization strings:
[INFO -- 2018-11-25 14:05:10]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 14:05:10]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 14:05:10]
initSignal:0
[INFO -- 2018-11-25 14:05:10]
endSignal:6
[INFO -- 2018-11-25 14:05:10]
faultModel:1
[INFO -- 2018-11-25 14:05:12]
Backtrace BEGIN:
#0  0x00005555555554fe in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:87
#1  0x00005555555556ac in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#2  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#3  0x0000555555555cb0 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:196

82	*/
83	void adjust(double alpha){
84		
85		double PD;
86		for(int i = 0; i<T.size(); i++){
87			PD = partialDerivate(i);
88			// alpha is different from the canonical version because this works better
89			T[i]= T[i] - ((alpha / (sqrt( fabs(PD) ))) * PD); 
90		}
91	}

Backtrace END
Fliping a bit of the value pointed by a pointer
Fliping a bit of the pointer
Memory content before bitflip:0xe20xe10xff0xff0xff0x7f0x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffde48
address max offset: 8
Memory content after  bitflip:0xe20xe10xff0xe70xff0x7f0x000x00
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 181
value: 0x7fffffffde48
value address: 0x7fffffffd8e0
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-25 14:05:12]
Fault Injection Successful after 2.3885064125061035s
[INFO -- 2018-11-25 14:05:13]
event type: exit
[INFO -- 2018-11-25 14:05:13]
exit code: 0
