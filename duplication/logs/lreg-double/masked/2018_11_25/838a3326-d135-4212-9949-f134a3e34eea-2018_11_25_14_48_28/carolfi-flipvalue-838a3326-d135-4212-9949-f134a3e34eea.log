[INFO -- 2018-11-25 14:48:24]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 14:48:24]
Initialization strings:
[INFO -- 2018-11-25 14:48:24]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 14:48:24]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 14:48:24]
initSignal:0
[INFO -- 2018-11-25 14:48:24]
endSignal:6
[INFO -- 2018-11-25 14:48:24]
faultModel:1
[EXCEPTION -- 2018-11-25 14:48:25]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-25 14:48:26]
Backtrace BEGIN:
#0  0x00005555555561ef in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b160 <y>, __n=0) at /usr/include/c++/7/bits/stl_vector.h:799
#1  0x0000555555555323 in meanSquaredError () at lreg.cpp:61
#2  0x00005555555556b1 in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.
803	       *  @param __n The index of the element for which data should be

Backtrace END
Fliping a bit of the pointer
Memory content before bitflip:0xf10xe10xff0xff0xff0x7f0x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd650
address max offset: 8
Memory content after  bitflip:0xfb0xe10xff0xff0xff0x7f0x000x00
frame name: execute
symbol name: input
symbol filename: lreg.cpp
symbol line: 134
value: 0x7fffffffe1f1 "/tmp/lreg/randInput"
value address: 0x7fffffffd650
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-25 14:48:26]
Fault Injection Successful after 2.082321882247925s
[INFO -- 2018-11-25 14:48:27]
event type: exit
[INFO -- 2018-11-25 14:48:27]
exit code: 0
