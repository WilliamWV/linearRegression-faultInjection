[INFO -- 2018-11-25 21:08:32]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 21:08:32]
Initialization strings:
[INFO -- 2018-11-25 21:08:33]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 21:08:33]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 21:08:33]
initSignal:0
[INFO -- 2018-11-25 21:08:33]
endSignal:6
[INFO -- 2018-11-25 21:08:33]
faultModel:1
[INFO -- 2018-11-25 21:08:35]
Backtrace BEGIN:
#0  std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator (this=0x7fffffffd517) at /usr/include/c++/7/bits/stl_vector.h:115
#1  0x0000555555556409 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5d0, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/stl_vector.h:333
#2  0x000055555555572b in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

110	
111	    public:
112	      typedef _Alloc allocator_type;
113	
114	      _Tp_alloc_type&
115	      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
116	      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
117	
118	      const _Tp_alloc_type&
119	      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x600x760xdc0xf70xff0x7f0x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd930
address max offset: 8
Memory content after  bitflip:0x600x760xdc0xd30xff0x7f0x000x00
frame name: main
symbol name: e2
symbol filename: lreg.cpp
symbol line: 196
value: std::vector of length 719, capacity -75502701 = {6.9533490625871739e-310, 2.9643938750474793e-323, 0, 2.0246810166574283e-320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.9525251667299724e-323, 6.9533490636006013e-310, 6.9533490639606764e-310, 0, 0, 6.9533490635116695e-310, 6.9533490638025754e-310, 6.9533490637970418e-310, 6.9533490637978323e-310, 0, 0, 6.9533490624508118e-310, 0, 6.953349062452788e-310, 2.9643938750474793e-323, 0, 2.0246810166574283e-320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.9525251667299724e-323, 6.9533490636152257e-310, 6.9533490639606764e-310, 6.953349063597044e-310, 0, 6.9533490635069265e-310, 6.9533490638025754e-310, 6.9533490637970418e-310, 6.9533490637978323e-310, 0, 6.9533490625804546e-310, 6.9533490625824308e-310, 2.9643938750474793e-323, 0, 2.0246810166574283e-320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.9525251667299724e-323, 6.9533490636290595e-310, 6.9533490639606764e-310, 0, 0, 6.9533490635543568e-310, 6.9533490638863689e-310, 6.9533490638808354e-310, 6.9533490638816259e-310, 0, 0, 6.9533490625804546e-310, 6.9533490625824308e-310, 2.9643938750474793e-323, 0, 6.07206678738892e-320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.9525251667299724e-323, 6.9533490636432886e-310, 6.9533490639606764e-310, 4.6355706433180856e-310, 0, 6.9533490635543568e-310, 6.9533490638863689e-310, 6.9533490638808354e-310, 6.9533490638816259e-310, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6.9533490624460687e-310, 0, 6.953349062448045e-310, 2.9643938750474793e-323, 0, 2.0246810166574283e-320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x7fffffffd920
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-25 21:08:35]
Fault Injection Successful after 2.045118808746338s
[INFO -- 2018-11-25 21:08:40]
event type: exit
[INFO -- 2018-11-25 21:08:40]
exit code: 0
