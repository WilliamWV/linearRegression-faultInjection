[INFO -- 2018-11-25 17:00:23]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 17:00:23]
Initialization strings:
[INFO -- 2018-11-25 17:00:23]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 17:00:23]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 17:00:23]
initSignal:0
[INFO -- 2018-11-25 17:00:23]
endSignal:6
[INFO -- 2018-11-25 17:00:23]
faultModel:1
[INFO -- 2018-11-25 17:00:28]
Backtrace BEGIN:
#0  std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772380, __last=0x5555557723a0, __result=0x555555772660) at /usr/include/c++/7/bits/stl_algobase.h:366
#1  0x0000555555557e42 in std::__copy_move_a<false, double const*, double*> (__first=0x555555772380, __last=0x5555557723a0, __result=0x555555772660) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x000055555555768b in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.38141730746525093, __last=0, __result=0.38113740733780271) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x0000555555556e07 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.38141730746525093, __last=0, __result=0.38113740733780271) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555556709 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd590, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x0000555555555691 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:119
#6  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#7  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

361						   is_move_assignable<_Tp>,
362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd688
address max offset: 8
Memory content after  bitflip:0x460x5a0xb70xf40x390x4d0xf70x26
frame name: execute
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 143
value: 5.6398651097195817e-121
value address: 0x7fffffffd688
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-25 17:00:28]
Fault Injection Successful after 5.600542068481445s
[INFO -- 2018-11-25 17:00:31]
event type: exit
[INFO -- 2018-11-25 17:00:31]
exit code: 0
