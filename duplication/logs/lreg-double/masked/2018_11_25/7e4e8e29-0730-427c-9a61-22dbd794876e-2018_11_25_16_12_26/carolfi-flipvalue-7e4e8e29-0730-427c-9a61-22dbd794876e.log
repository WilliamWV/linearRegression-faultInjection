[INFO -- 2018-11-25 16:12:21]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 16:12:21]
Initialization strings:
[INFO -- 2018-11-25 16:12:21]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 16:12:21]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 16:12:21]
initSignal:0
[INFO -- 2018-11-25 16:12:21]
endSignal:6
[INFO -- 2018-11-25 16:12:21]
faultModel:1
[INFO -- 2018-11-25 16:12:22]
Backtrace BEGIN:
#0  0x00005555555573df in std::_Destroy<double*> (__first=0x555555772490, __last=0x5555557724a0) at /usr/include/c++/7/bits/stl_construct.h:137
#1  0x0000555555556a25 in std::_Destroy<double*, double> (__first=0x555555772490, __last=0x5555557724a0) at /usr/include/c++/7/bits/stl_construct.h:206
#2  0x0000555555556303 in std::vector<double, std::allocator<double> >::~vector (this=0x7fffffffd5d0, __in_chrg=<optimized out>) at /usr/include/c++/7/bits/stl_vector.h:434
#3  0x0000555555555770 in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#4  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#5  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

132	      // A deleted destructor is trivial, this ensures we reject such types:
133	      static_assert(is_destructible<_Value_type>::value,
134			    "value type is destructible");
135	#endif
136	      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
137		__destroy(__first, __last);
138	    }
139	
140	  template<bool>
141	    struct _Destroy_n_aux

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xf00x230x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575b168 
address max offset: 8
Memory content after  bitflip:0xf00x3b0x770x550x550x550x000x00
frame name: std::_Destroy<double*, double>
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 776, capacity 8 = {-10, 8, 12, 5, -5, 14, -4, 12, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 6.3482494834141768e-320, 0, 0, 0, 0, 0, 1.6304166312761136e-322, 1.3286019536444653, -1.0173821565501422, 0, 1.6304166312761136e-322, 1.3283762374048775, -1.0173880012121892, 0, 1.6304166312761136e-322, 1.3286019536444653, -1.0173821565501422, 0, 2.167614207999301e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-25 16:12:22]
Fault Injection Successful after 1.3427236080169678s
[INFO -- 2018-11-25 16:12:25]
event type: exit
[INFO -- 2018-11-25 16:12:25]
exit code: 0
