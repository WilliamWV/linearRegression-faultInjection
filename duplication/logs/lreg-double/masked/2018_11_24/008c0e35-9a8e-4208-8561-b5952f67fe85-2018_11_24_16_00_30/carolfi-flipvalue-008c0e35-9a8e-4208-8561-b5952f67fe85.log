[INFO -- 2018-11-24 16:00:27]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 16:00:27]
Initialization strings:
[INFO -- 2018-11-24 16:00:27]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 16:00:27]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-24 16:00:27]
initSignal:0
[INFO -- 2018-11-24 16:00:27]
endSignal:6
[INFO -- 2018-11-24 16:00:27]
faultModel:1
[INFO -- 2018-11-24 16:00:28]
Backtrace BEGIN:
#0  0x00005555555562bc in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5b0, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/stl_vector.h:326
#1  0x0000555555555713 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:126
#2  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#3  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

321	       *  (i.e. capacity() == size() in the new %vector).
322	       *
323	       *  The newly-created %vector uses a copy of the allocator object used
324	       *  by @a __x (unless the allocator traits dictate a different object).
325	       */
326	      vector(const vector& __x)
327	      : _Base(__x.size(),
328		_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
329	      {
330		this->_M_impl._M_finish =

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd688
address max offset: 8
Memory content after  bitflip:0x460x5a0xb70xf40x390x4d0xd60x3e
frame name: execute
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 143
value: 5.3171314208984372e-06
value address: 0x7fffffffd688
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-24 16:00:28]
Fault Injection Successful after 1.336561679840088s
[INFO -- 2018-11-24 16:00:30]
event type: exit
[INFO -- 2018-11-24 16:00:30]
exit code: 0
