[INFO -- 2018-11-24 16:17:25]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 16:17:25]
Initialization strings:
[INFO -- 2018-11-24 16:17:25]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 16:17:25]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-24 16:17:25]
initSignal:0
[INFO -- 2018-11-24 16:17:25]
endSignal:6
[INFO -- 2018-11-24 16:17:25]
faultModel:1
[INFO -- 2018-11-24 16:17:26]
Backtrace BEGIN:
#0  std::_Vector_base<double, std::allocator<double> >::_Vector_base (this=0x7fffffffd5d0, __n=2, __a=...) at /usr/include/c++/7/bits/stl_vector.h:138
#1  0x000055555555631f in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5d0, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/stl_vector.h:328
#2  0x000055555555572b in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555cb0 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:196

133	      : _M_impl()
134	      { _M_create_storage(__n); }
135	
136	      _Vector_base(size_t __n, const allocator_type& __a)
137	      : _M_impl(__a)
138	      { _M_create_storage(__n); }
139	
140	#if __cplusplus >= 201103L
141	      _Vector_base(_Tp_alloc_type&& __a) noexcept
142	      : _M_impl(std::move(__a)) { }

Backtrace END
Memory content before bitflip:0x6a0xe50xa00x310x5b0x590x460x3f
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd588
address max offset: 8
Memory content after  bitflip:0xe20xe50xa00x310x5b0x590x460x3f
frame name: train
symbol name: MSE
symbol filename: lreg.cpp
symbol line: 117
value: 0.00068203881097089422
value address: 0x7fffffffd588
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-24 16:17:26]
Fault Injection Successful after 1.9913380146026611s
[INFO -- 2018-11-24 16:17:28]
event type: exit
[INFO -- 2018-11-24 16:17:28]
exit code: 0
