[INFO -- 2018-11-07 14:18:21]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-07 14:18:21]
Initialization strings:
[INFO -- 2018-11-07 14:18:21]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-07 14:18:21]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-07 14:18:21]
initSignal:0
[INFO -- 2018-11-07 14:18:21]
endSignal:10
[INFO -- 2018-11-07 14:18:21]
faultModel:1
[INFO -- 2018-11-07 14:18:25]
Backtrace BEGIN:
#0  0x0000555555557fe2 in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772360, __last=0x555555772378, __result=0x555555772450) at /usr/include/c++/7/bits/stl_algobase.h:366
#1  0x0000555555557d58 in std::__copy_move_a<false, double const*, double*> (__first=0x555555772360, __last=0x555555772378, __result=0x555555772450) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x00005555555575a1 in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.41380730593960341, __last=2.4209216646221081e-322, __result=0.41347768685334746) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x0000555555556d1d in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.41380730593960341, __last=2.4209216646221081e-322, __result=0.41347768685334746) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x000055555555661f in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd590, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x0000555555555691 in train (iterations=30000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:119
#6  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#7  0x0000555555555c98 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:194

361						   is_move_assignable<_Tp>,
362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}

Backtrace END
Memory content before bitflip:0x780x230x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd408
address max offset: 8
Memory content after  bitflip:0x780x2f0x770x550x550x550x000x00
frame name: std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double>
symbol name: _Num
symbol filename: /usr/include/c++/7/bits/stl_algobase.h
symbol line: 366
value: 93824994455416
value address: 0x7fffffffd408
Type: The type is an integer type.
Type sizeof: 8

[INFO -- 2018-11-07 14:18:25]
Fault Injection Successful after 4.833547115325928s
[INFO -- 2018-11-07 14:18:29]
event type: exit
[INFO -- 2018-11-07 14:18:29]
exit code: 0
