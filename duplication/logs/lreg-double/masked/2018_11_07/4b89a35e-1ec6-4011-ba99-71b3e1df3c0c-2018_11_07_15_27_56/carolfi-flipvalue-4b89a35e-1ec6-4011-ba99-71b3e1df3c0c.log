[INFO -- 2018-11-07 15:27:46]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-07 15:27:46]
Initialization strings:
[INFO -- 2018-11-07 15:27:46]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-07 15:27:46]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-07 15:27:46]
initSignal:0
[INFO -- 2018-11-07 15:27:46]
endSignal:10
[INFO -- 2018-11-07 15:27:46]
faultModel:1
[INFO -- 2018-11-07 15:27:47]
Backtrace BEGIN:
#0  0x00005555555554df in adjust (alpha=5.0000000000000002e-05) at lreg.cpp:86
#1  0x00005555555556ac in train (iterations=30000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:120
#2  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#3  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

81		Adjusts the values of T 
82	*/
83	void adjust(double alpha){
84		
85		double PD;
86		for(int i = 0; i<T.size(); i++){
87			PD = partialDerivate(i);
88			// alpha is different from the canonical version because this works better
89			T[i]= T[i] - ((alpha / (sqrt( fabs(PD) ))) * PD); 
90		}

Backtrace END
Memory content before bitflip:0xd40xaa0x2e0xd20xa10x940xd90x3f
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd528
address max offset: 8
Memory content after  bitflip:0xd40xaa0x2e0xd20xa10x940xdc0x3f
frame name: adjust
symbol name: PD
symbol filename: lreg.cpp
symbol line: 85
value: 0.44657178426375066
value address: 0x7fffffffd528
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-07 15:27:47]
Fault Injection Successful after 1.3585460186004639s
[INFO -- 2018-11-07 15:27:55]
event type: exit
[INFO -- 2018-11-07 15:27:55]
exit code: 0
