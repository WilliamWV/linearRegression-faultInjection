[INFO -- 2018-11-24 17:18:00]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 17:18:00]
Initialization strings:
[INFO -- 2018-11-24 17:18:00]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 17:18:00]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-24 17:18:00]
initSignal:0
[INFO -- 2018-11-24 17:18:00]
endSignal:6
[INFO -- 2018-11-24 17:18:00]
faultModel:1
[EXCEPTION -- 2018-11-24 17:18:01]
gdbException: Cannot access memory at address 0x1200000000
[INFO -- 2018-11-24 17:18:02]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x7fffffffd5d0, __n=0) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x0000555555555172 in equals (a=std::vector of length 2, capacity 2 = {...}, b=std::vector of length 2, capacity 2 = {...}) at lreg.cpp:39
#2  0x0000555555555744 in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x280x40
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd690
address max offset: 8
Memory content after  bitflip:0x000x420x000x000x000x000x280x40
frame name: execute
symbol name: temp
symbol filename: lreg.cpp
symbol line: 143
value: 12.000000000030013
value address: 0x7fffffffd690
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-24 17:18:02]
Fault Injection Successful after 2.124575138092041s
[INFO -- 2018-11-24 17:18:02]
event type: exit
[EXCEPTION -- 2018-11-24 17:18:02]
exit code: no exit code available
