[INFO -- 2018-11-24 14:29:27]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 14:29:27]
Initialization strings:
[INFO -- 2018-11-24 14:29:27]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 14:29:27]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-24 14:29:27]
initSignal:0
[INFO -- 2018-11-24 14:29:27]
endSignal:6
[INFO -- 2018-11-24 14:29:27]
faultModel:1
[EXCEPTION -- 2018-11-24 14:29:31]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-24 14:29:32]
Backtrace BEGIN:
#0  0x0000555555557fd7 in __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >::base (this=0x7fffffffd3c8) at /usr/include/c++/7/bits/stl_iterator.h:845
#1  0x0000555555557d1f in std::__niter_base<double const*, std::vector<double, std::allocator<double> > > (__it=0.03178712321122322) at /usr/include/c++/7/bits/stl_iterator.h:984
#2  0x000055555555811c in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.03178712321122322, __last=0, __result=0x5555557726f0) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x0000555555557f81 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.03178712321122322, __last=0, __result=0x5555557726f0) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555557cb8 in std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.03178712321122322, __last=0, __result=0x5555557726f0) at /usr/include/c++/7/bits/stl_uninitialized.h:101
#5  0x00005555555574bc in std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.03178712321122322, __last=0, __result=0x5555557726f0) at /usr/include/c++/7/bits/stl_uninitialized.h:134
#6  0x0000555555556b4d in std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double> (__first=0.03178712321122322, __last=0, __result=0x5555557726f0) at /usr/include/c++/7/bits/stl_uninitialized.h:289
#7  0x000055555555636d in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5d0, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#8  0x000055555555572b in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:126
#9  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#10 0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

840	      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
841	      { return __normal_iterator(_M_current - __n); }
842	
843	      const _Iterator&
844	      base() const _GLIBCXX_NOEXCEPT
845	      { return _M_current; }
846	    };
847	
848	  // Note: In what follows, the left- and right-hand-side iterators are
849	  // allowed to vary in types (conceptually in cv-qualification) so that

Backtrace END
Memory content before bitflip:0x01
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd55c
address max offset: 1
Memory content after  bitflip:0x89
frame name: train
symbol name: stopsWhenStable
symbol filename: lreg.cpp
symbol line: 105
value: 137
value address: 0x7fffffffd55c
Type: A boolean type.
Type sizeof: 1

[INFO -- 2018-11-24 14:29:32]
Fault Injection Successful after 5.3898656368255615s
[INFO -- 2018-11-24 14:29:34]
event type: exit
[EXCEPTION -- 2018-11-24 14:29:34]
exit code: no exit code available
