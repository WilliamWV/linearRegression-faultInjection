[INFO -- 2018-11-09 18:59:16]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-09 18:59:16]
Initialization strings:
[INFO -- 2018-11-09 18:59:16]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-09 18:59:16]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-09 18:59:16]
initSignal:0
[INFO -- 2018-11-09 18:59:16]
endSignal:10
[INFO -- 2018-11-09 18:59:16]
faultModel:1
[EXCEPTION -- 2018-11-09 18:59:22]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-09 18:59:22]
Backtrace BEGIN:
#0  0x0000555555555237 in predict (v=-18) at lreg.cpp:50
#1  0x000055555555530a in meanSquaredError () at lreg.cpp:61
#2  0x00005555555556b1 in train (iterations=30000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f3 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c98 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:194

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa00x230x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd928
address max offset: 8
Memory content after  bitflip:0xa00x230x530x550x550x550x000x00
frame name: main
symbol name: e2
symbol filename: lreg.cpp
symbol line: 194
value: std::vector of length -294908, capacity 4 = {-1.9999854670965109, -2.0000207439476432, -2.0000207439476432, -1.9999709413342799, 0, 4.001931731314097e-322, 4.635570648008152e-310, 1.5810100666919889e-322, -2.0000209808349605, 3.2418096661848766e+178, 302.67260762001644, 1383.8776591163478, -17.181413076920364, 759.97871776601551, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 1.1246733746356861e-312, 0, 0, 0, 0, 0, 1.6304166312761136e-322, -1.4123159412177138, -2.8618052878358498, 3.5864107060704096, 1.6304166312761136e-322, 4.6355706480287051e-310, -2.8613800265485434, 3.5865433493285637, 1.6304166312761136e-322, 0, -2.8618052878358498, 3.5864107060704096, 7.1639518646980749e-322, 0, -2.0000207439476432, -2.0000207439476432, -1.9999709413342799, 302.67284378383488, 1383.8776591163478, -17.181413076920364, 759.97871776601551, 29.044713220423709, 23.263426063953638, 1852.6559723497301, 1882.8115684921684, 2021.7099033108464, 338.72176654262637, 3039.2856836174519, 998.59484707515355, 0, 1.3487992131466031e-321, 0, -14, 10, 12, 10, 13, -6, 6, -20, -18, -15, 16, 9, -22, -10, 19, 13, 18, 16, 4, 16, -1, 23, -17, -22, -21, -15, 17, -2, 25, 18, 5, 0, 1.3487992131466031e-321, -1.9999854670965109, -2.0000207439476432, -2.0000207439476432, -1.9999709413342799, 302.67284378383488, 1383.8776591163478, -17.181413076920364, 759.97871776601551, 29.044713220423709, 23.263426063953638, 1852.6559723497301, 1882.8115684921684, 2021.7099033108464, 338.72176654262637, 3039.2856836174519, 998.59484707515355, 1537.6443884339726, 491.19962865082272, 1044, 72, 785, 3, 1611, 851, 1431, 1303, 661, 885, 11, 1901, 991, 81, 0, 2.6136072665001942e-321, 7, -14, 10, 12, 10, 13, -6, 6, -20, -18, -15, 16, 9, -22, -10, 19, 13, 18, 16, 4, 16, -1, 23, -17, -22, -21, -15, 17, -2, 25, 18, 5, -13, -3, 10, -7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.6136072665001942e-321, -2, -2, -2, -2, -2, -2, -2, -2, 1584, 1282...}
value address: 0x7fffffffd920
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-09 18:59:22]
Fault Injection Successful after 6.228475093841553s
[INFO -- 2018-11-09 18:59:22]
event type: exit
[EXCEPTION -- 2018-11-09 18:59:22]
exit code: no exit code available
