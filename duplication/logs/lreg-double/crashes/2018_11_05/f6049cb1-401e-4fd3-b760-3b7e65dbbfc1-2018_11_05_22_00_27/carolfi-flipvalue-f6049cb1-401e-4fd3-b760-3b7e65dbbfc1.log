[INFO -- 2018-11-05 22:00:23]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-05 22:00:23]
Initialization strings:
[INFO -- 2018-11-05 22:00:23]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-05 22:00:23]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-05 22:00:23]
initSignal:0
[INFO -- 2018-11-05 22:00:23]
endSignal:10
[INFO -- 2018-11-05 22:00:23]
faultModel:1
[INFO -- 2018-11-05 22:00:26]
Backtrace BEGIN:
#0  0x0000555555556127 in std::pow<double, int> (__x=1, __y=3) at /usr/include/c++/7/cmath:418
#1  0x0000555555555237 in predict (v=1) at lreg.cpp:50
#2  0x00005555555553fc in partialDerivate (pos=0) at lreg.cpp:74
#3  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#4  0x00005555555556ac in train (iterations=45000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555a1c in execute (input=0x7fffffffe1f3 "/tmp/lreg/randInput") at lreg.cpp:157
#6  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

413	    inline _GLIBCXX_CONSTEXPR
414	    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
415	    pow(_Tp __x, _Up __y)
416	    {
417	      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
418	      return pow(__type(__x), __type(__y));
419	    }
420	
421	  using ::sin;
422	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x800x280x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575b148 
address max offset: 8
Memory content after  bitflip:0x800x280x770xd70x550x550x000x00
frame name: predict
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 272629796, capacity 64 = {13, 13, -14, 5, 12, -10, -15, 12, 9, -18, -8, -13, 0, 24, 14, -9, 6, -22, -7, -4, 1, -12, -9, -20, -9, -7, -23, 5, -23, 3, -31, -18, -16, -19, 0, -5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.6136072665001942e-321, -24, -24, 30, -8, -22, 22, 32, -22, -77, -320, -60, -165, 4, -572, -192, -77, -32, -480, -45, -12, -5, -3541, -1495, -16301, -1495, -701, -24749, 199, -24749, 29, -60389, -11899, -8369, -13985, -1, -251, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, 20.670421266425663, -80.69706187979294, -16.595577177597313, 1.2516457953648839, 0, 2.4209216646221081e-322, 20.670421266425663, -80.69706187979294, -16.595577177597313, 1.2516457953648839, 0, 2.4209216646221081e-322, 4.6355706481235657e-310, -80.693705498819213, -16.591535434214158, 1.2279218550680695, 0, 2.4209216646221081e-322, 0, -80.69706187979294, -16.595577177597313, 1.2516457953648839, 0, 2.0719630989644356e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-05 22:00:26]
Fault Injection Successful after 3.839008331298828s
[INFO -- 2018-11-05 22:00:27]
event type: exit
[EXCEPTION -- 2018-11-05 22:00:27]
exit code: no exit code available
