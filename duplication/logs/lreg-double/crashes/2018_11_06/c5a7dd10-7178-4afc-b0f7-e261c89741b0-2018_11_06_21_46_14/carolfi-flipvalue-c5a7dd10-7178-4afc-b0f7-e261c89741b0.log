[INFO -- 2018-11-06 21:46:00]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-06 21:46:00]
Initialization strings:
[INFO -- 2018-11-06 21:46:00]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-06 21:46:00]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-06 21:46:00]
initSignal:0
[INFO -- 2018-11-06 21:46:00]
endSignal:10
[INFO -- 2018-11-06 21:46:00]
faultModel:1
[INFO -- 2018-11-06 21:46:03]
Backtrace BEGIN:
#0  0x0000555555556105 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b180 <T>, __n=1) at /usr/include/c++/7/bits/stl_vector.h:799
#1  0x0000555555555217 in predict (v=1) at lreg.cpp:50
#2  0x00005555555552ba in meanSquaredError () at lreg.cpp:61
#3  0x00005555555556b1 in train (iterations=45000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:121
#4  0x0000555555555a1c in execute (input=0x7fffffffe1f3 "/tmp/lreg/randInput") at lreg.cpp:157
#5  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.
803	       *  @param __n The index of the element for which data should be

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x600x270x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575b140 
address max offset: 8
Memory content after  bitflip:0x660x270x770x550x550x550x000x00
frame name: train
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 35, capacity 63 = {2.429221967472241e-319, 8.1105816421299033e-320, 8.1135460360049507e-320, 8.0987240666297134e-320, 0, 2.428826714955568e-319, 8.0947715414629834e-320, 8.1165104298799982e-320, 2.431198230055606e-319, 8.1105816421299033e-320, 8.1165104298799982e-320, 2.4303089118930918e-319, 2.4294195937305775e-319, 2.4307041644097647e-319, 8.1115697734215858e-320, 8.1184866924633632e-320, 8.1125579047132683e-320, 2.428431462438895e-319, 2.4294195937305775e-319, 2.428431462438895e-319, 2.4307041644097647e-319, 2.4309511972326854e-319, 8.1105816421299033e-320, 2.4305065381514282e-319, 2.4311488234910219e-319, 2.4305065381514282e-319, 2.4313958563139425e-319, 8.0868664911295234e-320, 8.0868664911295234e-320, 2.4301112856347553e-319, 2.4308523841035171e-319, 8.1184866924633632e-320, 2.4315440760076949e-319, 8.1135460360049507e-320, 2.4305065381514282e-319, 8.1125579047132683e-320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.7128536581735673e-316, 0, 2.428826714955568e-319, 8.1115697734215858e-320, 8.1145341672966332e-320, 8.1026765917964433e-320, 8.0868664911295234e-320, 2.428431462438895e-319, 8.0987240666297134e-320, -6.983507489325023e-251, -2.0000000000073479, 1.4916681462455038e-154, 4.383618698032885e-193, 2.0000000000073328, 1.0565890622751959e+270, 3.1050361846128111e+231, 3.1050361846127925e+231, 8.1649288631724404e-320, 8.1535653533180917e-320, 2.0000000000072991, 8.1402255808803781e-320, 1.3449746190543604e-284, 1.1617319597525436e+282, -2.3158417847548548e+77, -1.1319598848657269e-72, 3.2558664223165912e+237, -1.1319598848575119e-72, 3.7375513539698488e+196, 8.2089007056523113e-320, 8.1046528543798083e-320, -3.6893488147553485e+19, 1.299426220710385e-113, 2.5243548967165323e-29, -1.139237815568168e-305, 6.2434971006550295e+144, -1.1319598848657334e-72, -1.0565890622752166e+270, 2.4358918536910978e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.5865752221267447e-317, -2.724858228604498e+31, 3.1179846825266524e-195, 9.9284542831582221e-90, 5.007561664126668e+126, 2.4282338361805585e-319, 1.5865752221267447e-317, -2.724858228604498e+31, 3.1179846825266524e-195, 9.9284542831582221e-90, 5.007561664126668e+126, 2.4282338361805585e-319, 1.5865752221267447e-317, 1.1945594408446139e+103, 4.8490116354465288e-196, 3.0199081236053356e-66, -199705424644608.94, 2.4282338361805585e-319, 1.5865752221267447e-317, 0, 3.1179846825079518e-195, 9.9284542831582221e-90, 5.007561664126668e+126, 2.4282338361805585e-319, 1.3578817365373325e-314, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-06 21:46:03]
Fault Injection Successful after 3.9769749641418457s
[INFO -- 2018-11-06 21:46:13]
event type: exit
[EXCEPTION -- 2018-11-06 21:46:13]
exit code: no exit code available
