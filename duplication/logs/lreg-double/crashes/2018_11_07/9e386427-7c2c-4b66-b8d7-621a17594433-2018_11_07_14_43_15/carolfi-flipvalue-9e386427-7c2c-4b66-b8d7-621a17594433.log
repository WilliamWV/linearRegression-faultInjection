[INFO -- 2018-11-07 14:43:10]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-07 14:43:10]
Initialization strings:
[INFO -- 2018-11-07 14:43:10]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-07 14:43:10]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-07 14:43:10]
initSignal:0
[INFO -- 2018-11-07 14:43:10]
endSignal:10
[INFO -- 2018-11-07 14:43:10]
faultModel:1
[EXCEPTION -- 2018-11-07 14:43:13]
gdbException: Cannot access memory at address 0x555535772380
[INFO -- 2018-11-07 14:43:13]
Backtrace BEGIN:
#0  std::pow<double, int> (__x=-18, __y=3) at /usr/include/c++/7/cmath:419
#1  0x0000555555555237 in predict (v=-18) at lreg.cpp:50
#2  0x00005555555553fc in partialDerivate (pos=1) at lreg.cpp:74
#3  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#4  0x00005555555556ac in train (iterations=45000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#6  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

414	    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
415	    pow(_Tp __x, _Up __y)
416	    {
417	      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
418	      return pow(__type(__x), __type(__y));
419	    }
420	
421	  using ::sin;
422	
423	#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO

Backtrace END
Memory content before bitflip:0x040x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd8ec
address max offset: 4
Memory content after  bitflip:0x040x000x060x00
frame name: main
symbol name: argc
symbol filename: lreg.cpp
symbol line: 179
value: 393220
value address: 0x7fffffffd8ec
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-07 14:43:13]
Fault Injection Successful after 3.859830379486084s
[INFO -- 2018-11-07 14:43:14]
event type: exit
[EXCEPTION -- 2018-11-07 14:43:14]
exit code: no exit code available
