[INFO -- 2018-11-25 19:22:27]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 19:22:27]
Initialization strings:
[INFO -- 2018-11-25 19:22:27]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 19:22:27]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 19:22:27]
initSignal:0
[INFO -- 2018-11-25 19:22:27]
endSignal:6
[INFO -- 2018-11-25 19:22:27]
faultModel:1
[EXCEPTION -- 2018-11-25 19:22:28]
gdbException: Cannot access memory at address 0x115555772540
[EXCEPTION -- 2018-11-25 19:22:28]
gdbException: Cannot access memory at address 0x115555772540
[INFO -- 2018-11-25 19:22:28]
Backtrace BEGIN:
#0  0x00005555555552d3 in meanSquaredError () at lreg.cpp:61
#1  0x00005555555556b1 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#2  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#3  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

56		Calculates the mean squared error of T
57	*/
58	double meanSquaredError(){
59		double error = 0;
60		for(int i = 0; i<x.size(); i++){
61			error+= ((predict(x[i]) - y[i]) * (predict(x[i]) - y[i]));	
62		}
63		error /= x.size();
64		return error;
65	

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd560
address max offset: 8
Memory content after  bitflip:0x2d0x430x1c0xeb0xa00x360x0a0x3f
frame name: train
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 105
value: 4.9998079147189858e-05
value address: 0x7fffffffd560
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-25 19:22:28]
Fault Injection Successful after 1.3286452293395996s
[INFO -- 2018-11-25 19:22:28]
event type: exit
[EXCEPTION -- 2018-11-25 19:22:28]
exit code: no exit code available
