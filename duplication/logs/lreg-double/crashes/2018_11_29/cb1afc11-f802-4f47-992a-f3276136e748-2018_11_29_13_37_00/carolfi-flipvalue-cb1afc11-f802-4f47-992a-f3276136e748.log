[INFO -- 2018-11-29 13:36:52]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-29 13:36:52]
Initialization strings:
[INFO -- 2018-11-29 13:36:52]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-29 13:36:52]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-29 13:36:52]
initSignal:0
[INFO -- 2018-11-29 13:36:52]
endSignal:6
[INFO -- 2018-11-29 13:36:52]
faultModel:1
[EXCEPTION -- 2018-11-29 13:36:53]
gdbException: Attempt to dereference a generic pointer.
[EXCEPTION -- 2018-11-29 13:36:55]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-29 13:36:55]
Backtrace BEGIN:
#0  predict (v=4.6355705387182125e-310) at lreg.cpp:47
#1  0x00005555555553fc in partialDerivate (pos=0) at lreg.cpp:74
#2  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#3  0x00005555555556ac in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#4  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#5  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

42	}
43	
44	/**
45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x5555557725c0
address max offset: 8
Memory content after  bitflip:0x000x880x000x000x000x000x000x00
frame name: adjust
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 0, capacity 0 = {3.0768938968996449e-312, -3.6518112668597253e-243, 1.7446087754230267e+173, 3.6784817226807272e-229, 8.2620499040485193e+130, -1.0885759219585183e-186, -1.088575923521775e-186, 7.472553649058664e-152, -1.4099367451807153e-180, -1.5396458531664671e+298, 4.1897608703023217e-50, 1.5957150531798666e-314, 0, 0, 0, 0, 0, 0, 1.0397779375729834e-312, -1.6530597913322409e+278, 6.4780835835602463e-300, 6.0069760292779023e-151, 1.5269633998578904e-204, 1.5920073805243622e-314, 1.0397779375729834e-312, 2.3387389765611782e+307, -8.2675979405396468e+37, -4.3727405650923825e-165, -2.352906645110577e+67, 1.5920208087345505e-314, 1.0397779375729834e-312, 5.1854793370474451e+103, -8.2675969322995405e+37, -4.3727405650923825e-165, -2.352906645110577e+67, 1.5920208087345505e-314, 1.0397779375729834e-312, 0, 6.4780821677287703e-300, 6.0069760292779023e-151, 1.5269633998578904e-204, 1.5920073805243622e-314, 9.1774195963457062e-310, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-29 13:36:55]
Fault Injection Successful after 3.406484365463257s
[INFO -- 2018-11-29 13:37:00]
event type: exit
[EXCEPTION -- 2018-11-29 13:37:00]
exit code: no exit code available
