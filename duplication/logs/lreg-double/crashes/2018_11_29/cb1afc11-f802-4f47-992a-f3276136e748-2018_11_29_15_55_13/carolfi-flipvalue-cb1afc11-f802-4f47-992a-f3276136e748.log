[INFO -- 2018-11-29 15:55:10]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-29 15:55:10]
Initialization strings:
[INFO -- 2018-11-29 15:55:10]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-29 15:55:10]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-29 15:55:10]
initSignal:0
[INFO -- 2018-11-29 15:55:10]
endSignal:6
[INFO -- 2018-11-29 15:55:10]
faultModel:1
[INFO -- 2018-11-29 15:55:12]
Backtrace BEGIN:
#0  0x00005555555561ef in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b140 <x>, __n=5) at /usr/include/c++/7/bits/stl_vector.h:799
#1  0x00005555555552f9 in meanSquaredError () at lreg.cpp:61
#2  0x00005555555556b1 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.
803	       *  @param __n The index of the element for which data should be

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x500xc30xdc0xf70xff0x7f0x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7ffff7dd3040
address max offset: 8
Memory content after  bitflip:0x140xc30xdc0xf70xff0x7f0x000x00
frame name: main
symbol name: e2
symbol filename: lreg.cpp
symbol line: 196
value: std::vector of length 719, capacity -5229 = {6.9533490625871739e-310, 2.9643938750474793e-323, 0, 2.0246810166574283e-320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.9525251667299724e-323, 6.9533490636006013e-310, 6.9533490639606764e-310, 0, 0, 6.9533490635116695e-310, 6.9533490638025754e-310, 6.9533490637970418e-310, 6.9533490637978323e-310, 0, 0, 6.9533490624508118e-310, 0, 6.953349062452788e-310, 2.9643938750474793e-323, 0, 2.0246810166574283e-320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.9525251667299724e-323, 6.9533490636152257e-310, 6.9533490639606764e-310, 6.953349063597044e-310, 0, 6.9533490635069265e-310, 6.9533490638025754e-310, 6.9533490637970418e-310, 6.9533490637978323e-310, 0, 6.9533490625804546e-310, 6.9533490625824308e-310, 2.9643938750474793e-323, 0, 2.0246810166574283e-320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.9525251667299724e-323, 6.9533490636290595e-310, 6.9533490639606764e-310, 0, 0, 6.9533490635543568e-310, 6.9533490638863689e-310, 6.9533490638808354e-310, 6.9533490638816259e-310, 0, 0, 6.9533490625804546e-310, 6.9533490625824308e-310, 2.9643938750474793e-323, 0, 6.07206678738892e-320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3.9525251667299724e-323, 6.9533490636432886e-310, 6.9533490639606764e-310, 4.6355706433180856e-310, 0, 6.9533490635543568e-310, 6.9533490638863689e-310, 6.9533490638808354e-310, 6.9533490638816259e-310, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6.9533490624460687e-310, 0, 6.953349062448045e-310, 2.9643938750474793e-323, 0, 2.0246810166574283e-320, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x7fffffffd920
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-29 15:55:12]
Fault Injection Successful after 2.277029037475586s
[INFO -- 2018-11-29 15:55:12]
event type: exit
[EXCEPTION -- 2018-11-29 15:55:12]
exit code: no exit code available
