[INFO -- 2018-11-29 18:38:39]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-29 18:38:39]
Initialization strings:
[INFO -- 2018-11-29 18:38:39]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-29 18:38:39]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-29 18:38:39]
initSignal:0
[INFO -- 2018-11-29 18:38:39]
endSignal:6
[INFO -- 2018-11-29 18:38:39]
faultModel:1
[INFO -- 2018-11-29 18:38:40]
Backtrace BEGIN:
#0  0x000055555555545b in partialDerivate (pos=1) at lreg.cpp:74
#1  0x0000555555555503 in adjust (alpha=0.00020000000000000001) at lreg.cpp:87
#2  0x00005555555556ac in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

69		to the adjustment variable whose position in T is passed in pos
70	*/
71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;
78	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0xf00x220x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575b140 
address max offset: 8
Memory content after  bitflip:0xf30x220x770x550x550x550x000x00
frame name: main
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 7, capacity 7 = {1.3613929246411575e-312, 4.0762212897073528e-312, 4.0772159752343678e-312, 4.0748950423379995e-312, 1.3603982391141425e-312, 4.0775475370767061e-312, 1.3600666772718042e-312, 4.0772159752343678e-312, 1.7926620442074621e-310, 2.8012666290655796e-167, 4.0253042734531345e+247, 4.0729065178259284e-312, 1.7926620442074621e-310, 3.1847691360348694e-69, 4.0253042734459321e+247, 4.0729065178259284e-312, 2.6618315201868376e-310, 0, 0, 1.3607298009564809e-312, 1.3613929246411575e-312, 1.3597351154294659e-312, 4.4001704721455887e-310, 0, 4.0772159752343678e-312, 1.3607298009564809e-312, 1.3613929246411575e-312, 1.3597351154294659e-312, 4.0758897278650145e-312, 1.3617244864834958e-312, 4.0755581660226761e-312, 1.3613929246411575e-312, 4.4001704721455887e-310, 0, 1.7383389519587511e-310, -nan(0xfff0000000000), 1.0119305624090384e-307, 0, 0, 0, 0, 0, 1.7926620442074621e-310, 3.1847691360348694e-69, 4.0253042734459321e+247, 4.0729065178259284e-312, 1.7926620442074621e-310, 8.2878542301003392e+265, 2.0534864736905559e+208, 4.0729065158496659e-312, 1.7926620442074621e-310, 0, 4.0251335763790583e+247, 4.0729065178259284e-312, 1.9494428342846218e-305, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-29 18:38:40]
Fault Injection Successful after 1.8291499614715576s
[INFO -- 2018-11-29 18:38:41]
event type: exit
[EXCEPTION -- 2018-11-29 18:38:41]
exit code: no exit code available
