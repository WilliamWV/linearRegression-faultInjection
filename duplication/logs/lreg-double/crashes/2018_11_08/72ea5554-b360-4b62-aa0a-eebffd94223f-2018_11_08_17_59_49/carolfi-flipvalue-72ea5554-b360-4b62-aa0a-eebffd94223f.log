[INFO -- 2018-11-08 17:59:45]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-08 17:59:45]
Initialization strings:
[INFO -- 2018-11-08 17:59:45]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-08 17:59:45]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-08 17:59:45]
initSignal:0
[INFO -- 2018-11-08 17:59:45]
endSignal:10
[INFO -- 2018-11-08 17:59:45]
faultModel:1
[INFO -- 2018-11-08 17:59:48]
Backtrace BEGIN:
#0  0x000055555555610e in std::pow<double, int> (__x=4.6355706433354767e-310, __y=0) at /usr/include/c++/7/cmath:415
#1  0x0000555555555237 in predict (v=-19) at lreg.cpp:50
#2  0x000055555555530a in meanSquaredError () at lreg.cpp:61
#3  0x00005555555556b1 in train (iterations=45000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:121
#4  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#5  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

410	#endif
411	
412	  template<typename _Tp, typename _Up>
413	    inline _GLIBCXX_CONSTEXPR
414	    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
415	    pow(_Tp __x, _Up __y)
416	    {
417	      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
418	      return pow(__type(__x), __type(__y));
419	    }

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa00x230x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575b188 
address max offset: 8
Memory content after  bitflip:0xa00x230x770x550x550x5c0x000x00
frame name: train
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 962072674308, capacity 4 = {-18.613642479742669, -129.78805023338731, -1.4476590098527762, 4.8817147698330876, 0, 4.001931731314097e-322, 4.635570648008152e-310, 1.5810100666919889e-322, 19.999999999999996, 1.2898909641556599e-307, -171.04919443500822, 6.6099424566002831, -62.852690162971527, -629.89435207339011, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 1.128636574802149e-312, 0, 0, 0, 0, 0, 1.6304166312761136e-322, 4.6355706480121045e-310, -3.0888536263668884, -0.97633994357150178, 1.6304166312761136e-322, 4.6355706480287051e-310, -3.0888426582687085, -0.97626178295554356, 1.6304166312761136e-322, 0, -3.0888536263668884, -0.97633994357150178, 7.1639518646980749e-322, 5.9999969371220523, 11.999993870136135, 19.999989780821579, 9.9999948924647732, -171.04925293409863, 6.6099424566002831, -62.852690162971527, -629.89435207339011, -287.16055827174102, -328.0628128838008, -73, -433, -281, 7, -1, -617, 0, 1.3487992131466031e-321, 0, -3, -4, -7, 11, -5, 8, -2, 12, -7, 7, 19, -19, -3, 1, 23, 9, 7, -4, 10, 26, 8, -9, -20, -27, 12, 11, -4, 10, -13, 12, 32, 0, 1.3487992131466031e-321, 4.6355706480374006e-310, -6, -8, -14, 22, -10, 16, -4, -188, -17, -73, -433, -281, 7, -1, -617, -113, -73, 4, -136, 91388, 2918, -3287, -38102, -94907, 9418, 7313, -262, 5548, -10207, 9418, 169118, 0, 2.6136072665001942e-321, -11, -3, -4, -7, 11, -5, 8, -2, 12, -7, 7, 19, -19, -3, 1, 23, 9, 7, -4, 10, 26, 8, -9, -20, -27, 12, 11, -4, 10, -13, 12, 32, -3, -10, 29, -31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.6136072665001942e-321, -22, -6, -8, -14, 22, -10, 16, -4, -188, -17...}
value address: 0x55555575b180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-08 17:59:48]
Fault Injection Successful after 3.104943037033081s
[INFO -- 2018-11-08 17:59:48]
event type: exit
[EXCEPTION -- 2018-11-08 17:59:48]
exit code: no exit code available
