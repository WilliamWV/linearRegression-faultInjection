[INFO -- 2018-11-01 23:49:51]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-01 23:49:51]
Initialization strings:
[INFO -- 2018-11-01 23:49:51]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-01 23:49:51]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-01 23:49:51]
initSignal:0
[INFO -- 2018-11-01 23:49:51]
endSignal:10
[INFO -- 2018-11-01 23:49:51]
faultModel:1
[EXCEPTION -- 2018-11-01 23:49:59]
gdbException: Cannot access memory at address 0x555571772970
[INFO -- 2018-11-01 23:49:59]
Backtrace BEGIN:
#0  0x0000555555555555 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:89
#1  0x00005555555556ac in train (iterations=45000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#2  0x0000555555555a1c in execute (input=0x7fffffffe1f3 "/tmp/lreg/randInput") at lreg.cpp:157
#3  0x0000555555555c98 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:194

84		
85		double PD;
86		for(int i = 0; i<T.size(); i++){
87			PD = partialDerivate(i);
88			// alpha is different from the canonical version because this works better
89			T[i]= T[i] - ((alpha / (sqrt( fabs(PD) ))) * PD); 
90		}
91	}
92	
93	/**

Backtrace END
Memory content before bitflip:0x01
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd55c
address max offset: 1
Memory content after  bitflip:0x49
frame name: train
symbol name: stopsWhenStable
symbol filename: lreg.cpp
symbol line: 105
value: 73
value address: 0x7fffffffd55c
Type: A boolean type.
Type sizeof: 1

[INFO -- 2018-11-01 23:49:59]
Fault Injection Successful after 8.473374366760254s
[INFO -- 2018-11-01 23:49:59]
event type: exit
[EXCEPTION -- 2018-11-01 23:49:59]
exit code: no exit code available
