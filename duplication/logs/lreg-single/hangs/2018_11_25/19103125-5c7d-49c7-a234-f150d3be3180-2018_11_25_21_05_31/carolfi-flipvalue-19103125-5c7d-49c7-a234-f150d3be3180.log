[INFO -- 2018-11-25 21:04:55]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 21:04:55]
Initialization strings:
[INFO -- 2018-11-25 21:04:55]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 21:04:55]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 21:04:55]
initSignal:0
[INFO -- 2018-11-25 21:04:55]
endSignal:6
[INFO -- 2018-11-25 21:04:55]
faultModel:0
[INFO -- 2018-11-25 21:04:56]
Backtrace BEGIN:
#0  0x00005555555561ae in std::vector<double, std::allocator<double> >::size (this=0x4035000000000000) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x00005555555551f9 in predict (v=21) at lreg.cpp:49
#2  0x00005555555553fc in partialDerivate (pos=1) at lreg.cpp:74
#3  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#4  0x00005555555556ac in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#6  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x030x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd664
address max offset: 4
Memory content after  bitflip:0x030x200x000x00
frame name: execute
symbol name: testCases
symbol filename: lreg.cpp
symbol line: 139
value: 8195
value address: 0x7fffffffd664
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-25 21:04:56]
Fault Injection Successful after 1.9008100032806396s
