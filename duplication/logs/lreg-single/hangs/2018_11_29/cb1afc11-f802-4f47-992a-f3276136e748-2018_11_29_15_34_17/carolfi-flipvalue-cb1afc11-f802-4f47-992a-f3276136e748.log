[INFO -- 2018-11-29 15:33:53]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-29 15:33:53]
Initialization strings:
[INFO -- 2018-11-29 15:33:53]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-29 15:33:53]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-29 15:33:53]
initSignal:0
[INFO -- 2018-11-29 15:33:53]
endSignal:6
[INFO -- 2018-11-29 15:33:53]
faultModel:0
[EXCEPTION -- 2018-11-29 15:33:55]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-29 15:33:56]
Backtrace BEGIN:
#0  std::_Vector_base<double, std::allocator<double> >::_M_get_Tp_allocator (this=0x7fffffffd5d0) at /usr/include/c++/7/bits/stl_vector.h:115
#1  0x00005555555562e6 in std::vector<double, std::allocator<double> >::~vector (this=0x7fffffffd5d0, __in_chrg=<optimized out>) at /usr/include/c++/7/bits/stl_vector.h:435
#2  0x0000555555555770 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:126
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

110	
111	    public:
112	      typedef _Alloc allocator_type;
113	
114	      _Tp_alloc_type&
115	      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
116	      { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
117	
118	      const _Tp_alloc_type&
119	      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT

Backtrace END
Memory content before bitflip:0x080x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd674
address max offset: 4
Memory content after  bitflip:0x080x000x000x20
frame name: execute
symbol name: predictions
symbol filename: lreg.cpp
symbol line: 144
value: 536870920
value address: 0x7fffffffd674
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-29 15:33:56]
Fault Injection Successful after 3.17244029045105s
