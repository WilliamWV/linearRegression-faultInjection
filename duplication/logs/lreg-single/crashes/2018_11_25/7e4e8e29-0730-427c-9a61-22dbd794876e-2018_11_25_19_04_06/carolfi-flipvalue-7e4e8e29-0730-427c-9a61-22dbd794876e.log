[INFO -- 2018-11-25 19:04:02]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 19:04:02]
Initialization strings:
[INFO -- 2018-11-25 19:04:02]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 19:04:02]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 19:04:02]
initSignal:0
[INFO -- 2018-11-25 19:04:02]
endSignal:6
[INFO -- 2018-11-25 19:04:02]
faultModel:0
[INFO -- 2018-11-25 19:04:03]
Backtrace BEGIN:
#0  std::__niter_base<double*> (__it=0x5555557726c0) at /usr/include/c++/7/bits/stl_algobase.h:278
#1  0x00005555555581d0 in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.29843710230045478, __last=0, __result=0x5555557726c0) at /usr/include/c++/7/bits/stl_algobase.h:422
#2  0x0000555555558053 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.29843710230045478, __last=0, __result=0x5555557726c0) at /usr/include/c++/7/bits/stl_algobase.h:456
#3  0x0000555555557d8a in std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.29843710230045478, __last=0, __result=0x5555557726c0) at /usr/include/c++/7/bits/stl_uninitialized.h:101
#4  0x000055555555758e in std::uninitialized_copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*> (__first=0.29843710230045478, __last=0, __result=0x5555557726c0) at /usr/include/c++/7/bits/stl_uninitialized.h:134
#5  0x0000555555556c1f in std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, double*, double> (__first=0.29843710230045478, __last=0, __result=0x5555557726c0) at /usr/include/c++/7/bits/stl_uninitialized.h:289
#6  0x000055555555643f in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5f0, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/stl_vector.h:331
#7  0x0000555555555713 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:126
#8  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#9  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

273	  // Fallback implementation of the function in bits/stl_iterator.h used to
274	  // remove the __normal_iterator wrapper. See copy, fill, ...
275	  template<typename _Iterator>
276	    inline _Iterator
277	    __niter_base(_Iterator __it)
278	    { return __it; }
279	
280	  // All of these auxiliary structs serve two purposes.  (1) Replace
281	  // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
282	  // because the input and output ranges are permitted to overlap.)

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0x500x260x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd910
address max offset: 8
Memory content after  bitflip:0x500x260x770x550x550x550x020x00
frame name: main
symbol name: e1
symbol filename: lreg.cpp
symbol line: 193
value: std::vector of length 10, capacity 70368744177680 = {9.9997448205173409, 10.999751207252501, 12.999763980722822, -7.0003637539803849, -1078.8160145721722, -1078.8160145721722, -1722.5303976432911, -1319.1177772194476, -1582.6669839552355, -584.82432114594803}
value address: 0x7fffffffd900
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-25 19:04:03]
Fault Injection Successful after 1.8743011951446533s
[INFO -- 2018-11-25 19:04:05]
event type: exit
[EXCEPTION -- 2018-11-25 19:04:05]
exit code: no exit code available
