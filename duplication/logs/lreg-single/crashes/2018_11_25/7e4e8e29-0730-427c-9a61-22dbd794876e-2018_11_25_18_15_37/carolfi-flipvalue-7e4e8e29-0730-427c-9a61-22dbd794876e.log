[INFO -- 2018-11-25 18:15:33]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 18:15:33]
Initialization strings:
[INFO -- 2018-11-25 18:15:33]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 18:15:33]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 18:15:33]
initSignal:0
[INFO -- 2018-11-25 18:15:33]
endSignal:6
[INFO -- 2018-11-25 18:15:33]
faultModel:0
[EXCEPTION -- 2018-11-25 18:15:34]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-11-25 18:15:35]
Backtrace BEGIN:
#0  0x00005555555566b7 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd590, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/vector.tcc:219
#1  0x0000555555555691 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:119
#2  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#3  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

214		      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
215		    }
216		  else if (size() >= __xlen)
217		    {
218		      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
219				    end(), _M_get_Tp_allocator());
220		    }
221		  else
222		    {
223		      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),

Backtrace END
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x2f
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffe1f1 
address max offset: 1
Memory content after  bitflip:0x2e
frame name: execute
symbol name: input
symbol filename: lreg.cpp
symbol line: 134
value: 0x7fffffffe1f1 ".tmp/lreg/randInput"
value address: 0x7fffffffd650
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-25 18:15:35]
Fault Injection Successful after 2.3145036697387695s
[INFO -- 2018-11-25 18:15:36]
event type: exit
[EXCEPTION -- 2018-11-25 18:15:36]
exit code: no exit code available
