[INFO -- 2018-11-25 14:56:12]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 14:56:12]
Initialization strings:
[INFO -- 2018-11-25 14:56:12]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 14:56:12]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 14:56:12]
initSignal:0
[INFO -- 2018-11-25 14:56:12]
endSignal:6
[INFO -- 2018-11-25 14:56:12]
faultModel:0
[EXCEPTION -- 2018-11-25 14:56:14]
gdbException: Cannot access memory at address 0x800555555772540
[INFO -- 2018-11-25 14:56:14]
Backtrace BEGIN:
#0  0x0000555555555220 in predict (v=-18) at lreg.cpp:50
#1  0x000055555555530a in meanSquaredError () at lreg.cpp:61
#2  0x00005555555556b1 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:121
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

45		Predicts the value related to v using the Ts variables
46	*/
47	double predict(double v){
48		double val = 0;
49		for(int i = 0; i<T.size(); i++){
50			val+= (T[i] * pow(v, i));
51		}
52		return val;
53		
54	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0xc80x190xdd0xf70xff0x7f0x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd920
address max offset: 8
Memory content after  bitflip:0xc80x390xdd0xf70xff0x7f0x000x00
frame name: main
symbol name: e2
symbol filename: lreg.cpp
symbol line: 196
value: std::vector of length -305, capacity -6253 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6.9533490627903337e-310, 9.8813129168249309e-324, 6.9533484740905635e-310, 6.9533489454743472e-310, 6.9533490628207681e-310, 9.8813129168249309e-324, 6.9533490628144441e-310, 9.8813129168249309e-324, 6.9533490628120726e-310, 9.8813129168249309e-324, 6.9533490627851954e-310, 9.8813129168249309e-324, 6.9533490637092958e-310, 0, 6.9533490627800571e-310, 9.8813129168249309e-324, 6.9533490637172008e-310, 0, 6.9533490627591087e-310, 9.8813129168249309e-324, 6.9533490637251059e-310, 0, 6.9533490627472511e-310, 9.8813129168249309e-324, 6.9533484740905635e-310, 0, 0, 0, 6.953349062527886e-310, 9.8813129168249309e-324, 6.9533484740905635e-310, 6.9533489454743472e-310, 6.9533490625583204e-310, 9.8813129168249309e-324, 6.9533490625519964e-310, 9.8813129168249309e-324, 6.9533490625496249e-310, 9.8813129168249309e-324, 6.9533490625227477e-310, 9.8813129168249309e-324, 6.9533490637630501e-310, 0, 6.9533490625176094e-310, 9.8813129168249309e-324, 6.9533490637693741e-310, 0, 6.953349062496661e-310, 9.8813129168249309e-324, 6.9533490637756982e-310, 0, 6.9533490624911275e-310, 9.8813129168249309e-324, 6.9533484740905635e-310, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 2.9643938750474793e-323, 6.9169190417774516e-323, 5.9287877500949585e-323, 1.4821969375237396e-323, 4.9406564584124654e-323, 4.4465908125712189e-323, 3.9525251667299724e-323, 3.4584595208887258e-323, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 9.8813129168249309e-323, 1.3833838083554903e-322, 1.284570679187241e-322, 8.3991159793011913e-323, 1.1857575500189917e-322, 1.1363509854348671e-322, 1.0869444208507424e-322, 1.0375378562666177e-322, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 1.5810100666919889e-322, 1.8774494541967369e-322, 1.8280428896126122e-322, 6.4228533959362051e-323, 5.434722104253712e-323, 2.4703282292062327e-323, 1.9762625833649862e-323, 1.5316035021078643e-322, 1.7786363250284876e-322, 1.7292297604443629e-322, 1.6798231958602383e-322, 1.6304166312761136e-322, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 4.9406564584124654e-324, 1.9762625833649862e-322, 2.2727019708697341e-322, 2.2232954062856094e-322, 1.3339772437713657e-322, 1.2351641146031164e-322, 9.3872472709836843e-323, 8.8931816251424378e-323, 1.9268560187808615e-322, 2.1738888417014848e-322...}
value address: 0x7fffffffd920
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-25 14:56:14]
Fault Injection Successful after 2.5188963413238525s
[INFO -- 2018-11-25 14:56:14]
event type: exit
[EXCEPTION -- 2018-11-25 14:56:14]
exit code: no exit code available
