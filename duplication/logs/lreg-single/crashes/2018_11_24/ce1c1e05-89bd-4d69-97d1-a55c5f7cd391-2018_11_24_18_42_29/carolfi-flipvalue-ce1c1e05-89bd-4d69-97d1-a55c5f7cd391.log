[INFO -- 2018-11-24 18:42:27]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 18:42:27]
Initialization strings:
[INFO -- 2018-11-24 18:42:27]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 18:42:27]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-24 18:42:27]
initSignal:0
[INFO -- 2018-11-24 18:42:27]
endSignal:6
[INFO -- 2018-11-24 18:42:27]
faultModel:0
[INFO -- 2018-11-24 18:42:28]
Backtrace BEGIN:
#0  equals (a=std::vector of length 2, capacity 2 = {...}, b=std::vector of length 2, capacity 2 = {...}) at lreg.cpp:38
#1  0x0000555555555744 in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#2  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#3  0x0000555555555cb0 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:196

33	vector<double> y; // observed values of training set inputs
34	vector<double> T; // the adjustment variables
35	
36	bool equals(vector<double> a, vector<double> b){
37		if (a.size() != b.size()) return false;
38		for (int i = 0; i<a.size(); i++){
39			if(a[i] != b[i]) return false;
40		}
41		return true;
42	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x600x240x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b188 
address max offset: 8
Memory content after  bitflip:0x600x240x770x550x550x550x080x00
frame name: train
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 281474976710658, capacity 2 = {1.9260666258326178, -1.0019128018343173, -2.9944537928979051, 1.6304166312761136e-322, 1.9259916971624849, -1.0019147413694982, -2.9945863353366149, 1.6304166312761136e-322, 1.9260666258326178, -1.0019128018343173, -2.9944537928979051, 7.1639518646980749e-322, 12, -6, -10, -3, 7, -12, 6, -10, -18, -28, 25, -14, 7, -2, -17, 21, 0, 7.1639518646980749e-322, -10, 8, 12, 5, -5, 14, -4, 12, 22793, 86413, -63895, 10673, -1507, 41, 19181, -38047, 0, 7.1639518646980749e-322, 0, 10.999751207252501, 12.999763980722822, -7.0003637539803849, -1078.8160145721722, -1078.8160145721722, -1722.5303976432911, -1319.1177772194476, -1582.6669839552355, -584.82432114594803, 97026.528835098041, -561.68664594912298, -9235.2779191372501, 69793.215647290359, -295.84796972341951, 42146.236069249338, 0, 2.4209216646221081e-322, 4.6355706480540012e-310, -1.5136731619258823, -1.959753769940316, -4.0440527726936848, 0, 2.4209216646221081e-322, 4.6355706480563728e-310, -1.5136731619258823, -1.959753769940316, -4.0440527726936848, 0, 2.4209216646221081e-322, 4.6355706480587443e-310, -1.5136731619258823, -1.959753769940316, -4.0440527726936848, 0, 2.4209216646221081e-322, 0, -1.5109604774850565, -1.9503242482174707, -3.9694324930209692, 0, 1.3487992131466031e-321, 9.9997448205173409, 10.999751207252501, 12.999763980722822, -7.0003637539803849, -1078.8160145721722, -1078.8160145721722, -1722.5303976432911, -1319.1177772194476, -1582.6669839552355, -584.82432114594803, 97026.528835098041, -561.68664594912298, -9235.2779191372501, 69793.215647290359, -295.84796972341951, 42146.236069249338, 19328.177037179787, -20460.150394813842, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.1233459261319253e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-24 18:42:28]
Fault Injection Successful after 1.81630277633667s
[INFO -- 2018-11-24 18:42:28]
event type: exit
[EXCEPTION -- 2018-11-24 18:42:28]
exit code: no exit code available
