[INFO -- 2018-11-05 21:36:41]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-05 21:36:41]
Initialization strings:
[INFO -- 2018-11-05 21:36:41]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-05 21:36:41]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-05 21:36:41]
initSignal:0
[INFO -- 2018-11-05 21:36:41]
endSignal:10
[INFO -- 2018-11-05 21:36:41]
faultModel:0
[INFO -- 2018-11-05 21:36:48]
Backtrace BEGIN:
#0  0x0000555555555456 in partialDerivate (pos=2) at lreg.cpp:74
#1  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#2  0x00005555555556ac in train (iterations=45000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f3 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c98 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:194

69		to the adjustment variable whose position in T is passed in pos
70	*/
71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;
78	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x700x290x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b160 
address max offset: 8
Memory content after  bitflip:0x740x290x770x550x550x550x000x00
frame name: main
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 35, capacity 63 = {1.5933100720492419e-314, 1.5933100720492419e-314, 5.325064510836009e-315, 1.5925329739812615e-314, 1.5932453138769102e-314, 5.3224741839427408e-315, 5.325712092559326e-315, 1.5932453138769102e-314, 1.5941924021472614e-314, 1.5952528172191931e-314, 1.5940224119448907e-314, 1.5947549887693931e-314, 5.3101701311997171e-315, 1.5957020770397443e-314, 1.5948642681852028e-314, 1.5941924021472614e-314, 1.5935691047385688e-314, 1.5955766080808516e-314, 1.5937795687986468e-314, 1.5927920066705883e-314, 1.5921444249472713e-314, 1.5970551686952219e-314, 1.5963977214690887e-314, 1.59822644419303e-314, 1.5963977214690887e-314, 1.5958326052308503e-314, 1.598496196130609e-314, 5.338947044029618e-315, 1.598496196130609e-314, 5.3247407199743505e-315, 1.5991864493156261e-314, 1.5979480599404869e-314, 1.59772482131907e-314, 1.5980799794204517e-314, 1.5909787778453006e-314, 1.595103063945676e-314, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.0397779375729834e-312, -1.397402382352891e-27, 4.599268511162596e-111, 3.7174016522088531e+152, 1.6808609214091927e-261, 5.3015604889080665e-315, 1.0397779375729834e-312, -1.397402382352891e-27, 4.599268511162596e-111, 3.7174016522088531e+152, 1.6808609214091927e-261, 5.3015604889080665e-315, 1.0397779375729834e-312, 5.1899632010332503e+103, -7.8592981368078e-294, -6.8753521497493657e-295, -4.2214901239549321e-295, 5.301437585138007e-315, 1.0397779375729834e-312, 0, 4.5992677148653095e-111, 3.7174016522088531e+152, 1.6808609214091927e-261, 5.3015604889080665e-315, 8.8990137485710625e-310, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-05 21:36:48]
Fault Injection Successful after 7.365027666091919s
[INFO -- 2018-11-05 21:36:49]
event type: exit
[EXCEPTION -- 2018-11-05 21:36:49]
exit code: no exit code available
