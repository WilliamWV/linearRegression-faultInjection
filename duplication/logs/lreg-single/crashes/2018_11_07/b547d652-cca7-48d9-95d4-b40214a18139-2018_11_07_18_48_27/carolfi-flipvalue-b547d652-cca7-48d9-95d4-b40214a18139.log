[INFO -- 2018-11-07 18:48:24]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-07 18:48:24]
Initialization strings:
[INFO -- 2018-11-07 18:48:24]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-07 18:48:24]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-07 18:48:24]
initSignal:0
[INFO -- 2018-11-07 18:48:24]
endSignal:10
[INFO -- 2018-11-07 18:48:24]
faultModel:0
[EXCEPTION -- 2018-11-07 18:48:25]
gdbException: Cannot access memory at address 0x551555772450
[INFO -- 2018-11-07 18:48:26]
Backtrace BEGIN:
#0  0x00005555555560d7 in std::vector<double, std::allocator<double> >::size (this=0x55555575b180 <T>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x00005555555564d3 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd590, __x=std::vector of length 34359738371, capacity 34359738371 = {...}) at /usr/include/c++/7/bits/vector.tcc:203
#2  0x0000555555555691 in train (iterations=30000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:119
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x555555772750
address max offset: 8
Memory content after  bitflip:0x000x000x000x200x000x000x000x00
frame name: std::vector<double, std::allocator<double> >::size
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 20, capacity 32 = {-12, 4, 22, 10, 24, 16, -6, 24, 54, 1006, 1494, 1539, 174, 223, 934, 558, 899, 1631, 1043, 118}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-07 18:48:26]
Fault Injection Successful after 2.340669631958008s
[INFO -- 2018-11-07 18:48:26]
event type: exit
[EXCEPTION -- 2018-11-07 18:48:26]
exit code: no exit code available
