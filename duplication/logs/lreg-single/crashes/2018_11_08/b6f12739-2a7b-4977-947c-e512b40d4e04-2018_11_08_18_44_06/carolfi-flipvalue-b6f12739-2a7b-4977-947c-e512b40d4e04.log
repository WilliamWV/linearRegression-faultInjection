[INFO -- 2018-11-08 18:44:02]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-08 18:44:02]
Initialization strings:
[INFO -- 2018-11-08 18:44:02]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-08 18:44:02]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-08 18:44:02]
initSignal:0
[INFO -- 2018-11-08 18:44:02]
endSignal:10
[INFO -- 2018-11-08 18:44:02]
faultModel:0
[EXCEPTION -- 2018-11-08 18:44:05]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[EXCEPTION -- 2018-11-08 18:44:05]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-08 18:44:05]
Backtrace BEGIN:
#0  0x0000555555555456 in partialDerivate (pos=2) at lreg.cpp:74
#1  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#2  0x00005555555556ac in train (iterations=45000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

69		to the adjustment variable whose position in T is passed in pos
70	*/
71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;
78	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0x800x280x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b148 
address max offset: 8
Memory content after  bitflip:0x800x280x770x550x550x550x800x00
frame name: train
symbol name: x
symbol filename: lreg.cpp
symbol line: 32
value: std::vector of length 4503599627370532, capacity 64 = {8, -6, 5, -13, 9, 1, -9, -11, 11, 24, 13, 16, -7, -21, 18, 20, -18, 1, -12, 5, -22, 16, -26, 14, 16, 15, 27, -9, 9, -4, -32, 15, 7, -30, 8, -32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.6136072665001942e-321, 7, -7, 4, -14, 8, 0, -10, -12, 77, 480, 117, 192, 77, 525, 252, 320, 396, -3, 192, 5, -31858, 12222, -52626, 8174, 12222, 10063, 58939, -2153, 2149, -178, -98178, 10063, 999, -80882, 1502, -98178, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.4209216646221081e-322, 8.7451932874370222, -46.033764768215661, -11.999097279638441, 2.4770765186310073, 0, 2.4209216646221081e-322, 8.7451932874370222, -46.033764768215661, -11.999097279638441, 2.4770765186310073, 0, 2.4209216646221081e-322, 4.6355706481235657e-310, -46.028299382743, -12.007218773434035, 2.5344530266188872, 0, 2.4209216646221081e-322, 0, -46.033764768215661, -11.999097279638441, 2.4770765186310073, 0, 2.0719630989644356e-319, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...}
value address: 0x55555575b140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-08 18:44:05]
Fault Injection Successful after 3.6519181728363037s
[INFO -- 2018-11-08 18:44:05]
event type: exit
[EXCEPTION -- 2018-11-08 18:44:05]
exit code: no exit code available
