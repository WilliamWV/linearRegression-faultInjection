[INFO -- 2018-11-29 13:37:08]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-29 13:37:08]
Initialization strings:
[INFO -- 2018-11-29 13:37:08]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-29 13:37:08]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-29 13:37:08]
initSignal:0
[INFO -- 2018-11-29 13:37:08]
endSignal:6
[INFO -- 2018-11-29 13:37:08]
faultModel:0
[INFO -- 2018-11-29 13:37:11]
Backtrace BEGIN:
#0  0x00005555555552d3 in meanSquaredError () at lreg.cpp:61
#1  0x00005555555556b1 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:121
#2  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#3  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

56		Calculates the mean squared error of T
57	*/
58	double meanSquaredError(){
59		double error = 0;
60		for(int i = 0; i<x.size(); i++){
61			error+= ((predict(x[i]) - y[i]) * (predict(x[i]) - y[i]));	
62		}
63		error /= x.size();
64		return error;
65	

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the pointer
Memory content before bitflip:0x800x230x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x55555575b180 
address max offset: 8
Memory content after  bitflip:0x900x230x770x550x550x550x000x00
frame name: main
symbol name: T
symbol filename: lreg.cpp
symbol line: 34
value: std::vector of length 2, capacity 2 = {-1.955130907808015, -4.0448395348494541}
value address: 0x55555575b180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-29 13:37:11]
Fault Injection Successful after 3.9498748779296875s
[INFO -- 2018-11-29 13:37:12]
event type: exit
[EXCEPTION -- 2018-11-29 13:37:12]
exit code: no exit code available
