[INFO -- 2018-11-29 15:12:58]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-29 15:12:58]
Initialization strings:
[INFO -- 2018-11-29 15:12:58]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-29 15:12:58]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-29 15:12:58]
initSignal:0
[INFO -- 2018-11-29 15:12:58]
endSignal:6
[INFO -- 2018-11-29 15:12:58]
faultModel:0
[INFO -- 2018-11-29 15:13:00]
Backtrace BEGIN:
#0  0x00005555555580cc in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772450, __last=0x555555772468, __result=0x555555772340) at /usr/include/c++/7/bits/stl_algobase.h:366
#1  0x0000555555557e42 in std::__copy_move_a<false, double const*, double*> (__first=0x555555772450, __last=0x555555772468, __result=0x555555772340) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x000055555555768b in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=1.29647198522278, __last=1.6304166312761136e-322, __result=1.2963788631002111) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x0000555555556e07 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=1.29647198522278, __last=1.6304166312761136e-322, __result=1.2963788631002111) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555556709 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd590, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x0000555555555691 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:119
#6  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#7  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

361						   is_move_assignable<_Tp>,
362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}

Backtrace END
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x210x000x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x555555772468
address max offset: 8
Memory content after  bitflip:0x210x000x020x000x000x000x000x00
frame name: std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double>
symbol name: __last
symbol filename: /usr/include/c++/7/bits/stl_algobase.h
symbol line: 357
value: 0x555555772468
value address: 0x7fffffffd3f0
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-29 15:13:00]
Fault Injection Successful after 2.8551108837127686s
[INFO -- 2018-11-29 15:13:01]
event type: exit
[EXCEPTION -- 2018-11-29 15:13:01]
exit code: no exit code available
