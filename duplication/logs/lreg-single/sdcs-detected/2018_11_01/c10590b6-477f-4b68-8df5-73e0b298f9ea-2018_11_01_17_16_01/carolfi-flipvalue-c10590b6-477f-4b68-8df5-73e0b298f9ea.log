[INFO -- 2018-11-01 17:15:46]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-01 17:15:46]
Initialization strings:
[INFO -- 2018-11-01 17:15:46]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-01 17:15:46]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-01 17:15:46]
initSignal:0
[INFO -- 2018-11-01 17:15:46]
endSignal:20
[INFO -- 2018-11-01 17:15:46]
faultModel:0
[INFO -- 2018-11-01 17:15:48]
Backtrace BEGIN:
#0  0x0000555555557fef in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772450, __last=0x555555772468, __result=0x555555772340) at /usr/include/c++/7/bits/stl_algobase.h:367
#1  0x0000555555557d58 in std::__copy_move_a<false, double const*, double*> (__first=0x555555772450, __last=0x555555772468, __result=0x555555772340) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x00005555555575a1 in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=4.1370307966505502, __last=1.6304166312761136e-322, __result=4.1366886948191182) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x0000555555556d1d in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=4.1370307966505502, __last=1.6304166312761136e-322, __result=4.1366886948191182) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x000055555555661f in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd590, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x0000555555555691 in train (iterations=40000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:119
#6  0x0000555555555a1c in execute (input=0x7fffffffe1f3 "/tmp/lreg/randInput") at lreg.cpp:157
#7  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}
371	    };

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd560
address max offset: 8
Memory content after  bitflip:0x2d0x430x1c0xeb0xe20xb60x0a0x3f
frame name: train
symbol name: alpha
symbol filename: lreg.cpp
symbol line: 105
value: 5.0953674316406252e-05
value address: 0x7fffffffd560
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-01 17:15:48]
Fault Injection Successful after 2.932983875274658s
[INFO -- 2018-11-01 17:16:01]
event type: exit
[INFO -- 2018-11-01 17:16:01]
exit code: 0
