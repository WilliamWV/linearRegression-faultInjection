[INFO -- 2018-11-05 20:31:50]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-05 20:31:50]
Initialization strings:
[INFO -- 2018-11-05 20:31:50]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-05 20:31:50]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-05 20:31:50]
initSignal:0
[INFO -- 2018-11-05 20:31:50]
endSignal:10
[INFO -- 2018-11-05 20:31:50]
faultModel:0
[INFO -- 2018-11-05 20:31:52]
Backtrace BEGIN:
#0  0x00005555555553cc in partialDerivate (pos=3) at lreg.cpp:73
#1  0x0000555555555503 in adjust (alpha=2.2222199999999999e-05) at lreg.cpp:87
#2  0x00005555555556ac in train (iterations=45000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:120
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f3 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

68		Calculates the partial derivate of the meanSquaredError function 
69		to the adjustment variable whose position in T is passed in pos
70	*/
71	double partialDerivate(int pos){
72		double pD = 0;
73		for(int i = 0; i<x.size(); i++){
74			pD += ((predict(x[i]) - y[i])*pow(x[i], pos));	
75		}
76		pD *= (2.0/x.size());
77		return pD;

Backtrace END
Memory content before bitflip:0xa60xb90xe30xbd0x380xf10xb60x41
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd4d8
address max offset: 8
Memory content after  bitflip:0xa60xb90x630xbd0x380xf10xb60x41
frame name: partialDerivate
symbol name: pD
symbol filename: lreg.cpp
symbol line: 72
value: 384907453.38955152
value address: 0x7fffffffd4d8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-05 20:31:52]
Fault Injection Successful after 2.046086549758911s
[INFO -- 2018-11-05 20:31:57]
event type: exit
[INFO -- 2018-11-05 20:31:57]
exit code: 0
