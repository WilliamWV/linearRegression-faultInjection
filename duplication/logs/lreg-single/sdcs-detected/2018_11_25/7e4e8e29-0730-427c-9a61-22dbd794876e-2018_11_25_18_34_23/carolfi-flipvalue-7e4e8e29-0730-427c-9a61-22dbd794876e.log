[INFO -- 2018-11-25 18:34:18]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 18:34:18]
Initialization strings:
[INFO -- 2018-11-25 18:34:18]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 18:34:18]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 18:34:18]
initSignal:0
[INFO -- 2018-11-25 18:34:18]
endSignal:6
[INFO -- 2018-11-25 18:34:18]
faultModel:0
[INFO -- 2018-11-25 18:34:21]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x55555575b180 <T>, __n=0) at /usr/include/c++/7/bits/stl_vector.h:795
#1  0x0000555555555217 in predict (v=-6) at lreg.cpp:50
#2  0x00005555555553fc in partialDerivate (pos=1) at lreg.cpp:74
#3  0x0000555555555503 in adjust (alpha=0.00020000000000000001) at lreg.cpp:87
#4  0x00005555555556ac in train (iterations=10000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:120
#5  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#6  0x0000555555555cb0 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:196

790	       *  Note that data access with this operator is unchecked and
791	       *  out_of_range lookups are not defined. (For checked lookups
792	       *  see at().)
793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }

Backtrace END
Memory content before bitflip:0x010x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd4cc
address max offset: 4
Memory content after  bitflip:0x010x100x000x00
frame name: partialDerivate
symbol name: pos
symbol filename: lreg.cpp
symbol line: 71
value: 4097
value address: 0x7fffffffd4cc
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-25 18:34:21]
Fault Injection Successful after 3.1395020484924316s
[INFO -- 2018-11-25 18:34:22]
event type: exit
[INFO -- 2018-11-25 18:34:22]
exit code: 0
