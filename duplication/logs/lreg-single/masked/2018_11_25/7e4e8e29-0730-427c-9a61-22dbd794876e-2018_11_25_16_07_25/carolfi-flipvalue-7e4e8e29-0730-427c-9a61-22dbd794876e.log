[INFO -- 2018-11-25 16:07:16]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 16:07:16]
Initialization strings:
[INFO -- 2018-11-25 16:07:16]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 16:07:16]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 16:07:16]
initSignal:0
[INFO -- 2018-11-25 16:07:16]
endSignal:6
[INFO -- 2018-11-25 16:07:16]
faultModel:0
[EXCEPTION -- 2018-11-25 16:07:18]
gdbException: Attempt to dereference a generic pointer.
[INFO -- 2018-11-25 16:07:21]
Backtrace BEGIN:
#0  0x00005555555561ef in std::vector<double, std::allocator<double> >::operator[] (this=0x7fffffffd5f0, __n=0) at /usr/include/c++/7/bits/stl_vector.h:799
#1  0x0000555555555190 in equals (a=std::vector of length 4, capacity 4 = {...}, b=std::vector of length 4, capacity 4 = {...}) at lreg.cpp:39
#2  0x0000555555555744 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:126
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.
803	       *  @param __n The index of the element for which data should be

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd52c
address max offset: 4
Memory content after  bitflip:0x000x000x000x40
frame name: equals
symbol name: i
symbol filename: lreg.cpp
symbol line: 38
value: 1073741824
value address: 0x7fffffffd52c
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-25 16:07:21]
Fault Injection Successful after 5.135843515396118s
[INFO -- 2018-11-25 16:07:24]
event type: exit
[INFO -- 2018-11-25 16:07:24]
exit code: 0
