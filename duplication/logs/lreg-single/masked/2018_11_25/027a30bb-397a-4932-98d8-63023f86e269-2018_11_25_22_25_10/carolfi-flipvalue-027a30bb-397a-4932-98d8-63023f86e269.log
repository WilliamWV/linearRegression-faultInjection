[INFO -- 2018-11-25 22:25:04]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 22:25:04]
Initialization strings:
[INFO -- 2018-11-25 22:25:04]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 22:25:04]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 22:25:04]
initSignal:0
[INFO -- 2018-11-25 22:25:04]
endSignal:6
[INFO -- 2018-11-25 22:25:04]
faultModel:0
[INFO -- 2018-11-25 22:25:06]
Backtrace BEGIN:
#0  std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772450, __last=0x555555772468, __result=0x555555772340) at /usr/include/c++/7/bits/stl_algobase.h:370
#1  0x0000555555557e42 in std::__copy_move_a<false, double const*, double*> (__first=0x555555772450, __last=0x555555772468, __result=0x555555772340) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x000055555555768b in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.86685817452979086, __last=1.6304166312761136e-322, __result=0.86685817452979086) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x0000555555556e07 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.86685817452979086, __last=1.6304166312761136e-322, __result=0.86685817452979086) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555556709 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd590, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x0000555555555691 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:119
#6  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#7  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}
371	    };
372	
373	  template<bool _IsMove, typename _II, typename _OI>
374	    inline _OI

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x5555557725a0
address max offset: 8
Memory content after  bitflip:0x000x000x010x000x000x000x000x00
frame name: std::vector<double, std::allocator<double> >::operator=
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 12, capacity 16 = {-44, -23, -143, -8, 1, 1, -1319, -23, -1079, -503, -104, -1583}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-25 22:25:06]
Fault Injection Successful after 2.0290682315826416s
[INFO -- 2018-11-25 22:25:09]
event type: exit
[INFO -- 2018-11-25 22:25:09]
exit code: 0
