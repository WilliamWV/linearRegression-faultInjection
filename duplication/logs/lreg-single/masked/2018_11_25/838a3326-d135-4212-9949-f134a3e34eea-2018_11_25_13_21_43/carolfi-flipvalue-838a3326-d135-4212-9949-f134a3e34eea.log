[INFO -- 2018-11-25 13:21:38]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-25 13:21:38]
Initialization strings:
[INFO -- 2018-11-25 13:21:38]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-25 13:21:38]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-25 13:21:38]
initSignal:0
[INFO -- 2018-11-25 13:21:38]
endSignal:6
[INFO -- 2018-11-25 13:21:38]
faultModel:0
[INFO -- 2018-11-25 13:21:39]
Backtrace BEGIN:
#0  0x00005555555580b6 in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772450, __last=0x555555772468, __result=0x555555772490) at /usr/include/c++/7/bits/stl_algobase.h:357
#1  0x0000555555557e42 in std::__copy_move_a<false, double const*, double*> (__first=0x555555772450, __last=0x555555772468, __result=0x555555772340) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x000055555555768b in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.65016093987128842, __last=1.6304166312761136e-322, __result=0.65005723096282042) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x0000555555556e07 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.65016093987128842, __last=1.6304166312761136e-322, __result=0.65005723096282042) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555556709 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd590, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x0000555555555691 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:119
#6  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#7  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

352	  template<bool _IsMove>
353	    struct __copy_move<_IsMove, true, random_access_iterator_tag>
354	    {
355	      template<typename _Tp>
356	        static _Tp*
357	        __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
358	        {
359	#if __cplusplus >= 201103L
360		  using __assignable = conditional<_IsMove,
361						   is_move_assignable<_Tp>,

Backtrace END
Fliping a bit of the pointer
Memory content before bitflip:0x680x240x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd430
address max offset: 8
Memory content after  bitflip:0x680x240x770x540x550x550x000x00
frame name: std::__copy_move_a<false, double const*, double*>
symbol name: __last
symbol filename: /usr/include/c++/7/bits/stl_algobase.h
symbol line: 375
value: 0x555555772468
value address: 0x7fffffffd430
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-25 13:21:39]
Fault Injection Successful after 1.4220874309539795s
[INFO -- 2018-11-25 13:21:41]
event type: exit
[INFO -- 2018-11-25 13:21:41]
exit code: 0
