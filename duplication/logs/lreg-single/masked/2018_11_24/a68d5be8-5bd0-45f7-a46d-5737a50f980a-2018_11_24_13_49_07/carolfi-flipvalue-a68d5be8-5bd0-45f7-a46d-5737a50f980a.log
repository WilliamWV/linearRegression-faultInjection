[INFO -- 2018-11-24 13:48:57]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 13:48:57]
Initialization strings:
[INFO -- 2018-11-24 13:48:57]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 13:48:57]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-24 13:48:57]
initSignal:0
[INFO -- 2018-11-24 13:48:57]
endSignal:10
[INFO -- 2018-11-24 13:48:57]
faultModel:0
[EXCEPTION -- 2018-11-24 13:49:00]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-24 13:49:01]
Backtrace BEGIN:
#0  0x0000555555557d65 in std::__copy_move_a<false, double const*, double*> (__first=0x555555772380, __last=0x5555557723a0, __result=0x555555772660) at /usr/include/c++/7/bits/stl_algobase.h:386
#1  0x00005555555575b9 in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.089777089820642045, __last=0, __result=0.090026186025354962) at /usr/include/c++/7/bits/stl_algobase.h:422
#2  0x0000555555556d35 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.089777089820642045, __last=0, __result=0.090026186025354962) at /usr/include/c++/7/bits/stl_algobase.h:456
#3  0x0000555555556637 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd590, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#4  0x0000555555555691 in train (iterations=30000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:119
#5  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#6  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

381		                     && __is_pointer<_II>::__value
382		                     && __is_pointer<_OI>::__value
383				     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
384	
385	      return std::__copy_move<_IsMove, __simple,
386		                      _Category>::__copy_m(__first, __last, __result);
387	    }
388	
389	  // Helpers for streambuf iterators (either istream or ostream).
390	  // NB: avoid including <iosfwd>, relatively large.

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x5555557725c0
address max offset: 8
Memory content after  bitflip:0x000x000x000x080x000x000x000x00
frame name: std::__copy_move_a<false, double const*, double*>
symbol name: y
symbol filename: lreg.cpp
symbol line: 33
value: std::vector of length 16, capacity 16 = {13145, 2813, 13, -99407, -575, 22793, -121267, 15973, 22793, 86413, -63895, 10673, -1507, 41, 19181, -38047}
value address: 0x55555575b160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-11-24 13:49:01]
Fault Injection Successful after 4.1497392654418945s
[INFO -- 2018-11-24 13:49:05]
event type: exit
[INFO -- 2018-11-24 13:49:05]
exit code: 0
