[INFO -- 2018-11-24 15:55:21]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-24 15:55:21]
Initialization strings:
[INFO -- 2018-11-24 15:55:21]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-24 15:55:21]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-24 15:55:21]
initSignal:0
[INFO -- 2018-11-24 15:55:21]
endSignal:6
[INFO -- 2018-11-24 15:55:21]
faultModel:0
[INFO -- 2018-11-24 15:55:22]
Backtrace BEGIN:
#0  0x0000555555558015 in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772450, __last=0x555555772468, __result=0x555555772360) at /usr/include/c++/7/bits/stl_algobase.h:368
#1  0x0000555555557d70 in std::__copy_move_a<false, double const*, double*> (__first=0x555555772450, __last=0x555555772468, __result=0x555555772360) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x00005555555575b9 in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.27830420834217939, __last=1.6304166312761136e-322, __result=0.27819487188435621) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x0000555555556d35 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=0.27830420834217939, __last=1.6304166312761136e-322, __result=0.27819487188435621) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x0000555555556637 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd5b0, __x=std::vector of length 3, capacity 3 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x00005555555556f2 in train (iterations=20000, alpha=5.0000000000000002e-05, N=3, stopsWhenStable=true) at lreg.cpp:124
#6  0x0000555555555a1c in execute (input=0x7fffffffe1f2 "/tmp/lreg/randInput") at lreg.cpp:157
#7  0x0000555555555c78 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:193

363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}
371	    };
372	

Backtrace END
Memory content before bitflip:0x000x000x000x000x000xbc0x980xc0
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd690
address max offset: 8
Memory content after  bitflip:0x000x000x000x200x000xbc0x980xc0
frame name: execute
symbol name: temp
symbol filename: lreg.cpp
symbol line: 143
value: -1583.0001220703125
value address: 0x7fffffffd690
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-11-24 15:55:22]
Fault Injection Successful after 1.2161178588867188s
[INFO -- 2018-11-24 15:55:25]
event type: exit
[INFO -- 2018-11-24 15:55:25]
exit code: 0
