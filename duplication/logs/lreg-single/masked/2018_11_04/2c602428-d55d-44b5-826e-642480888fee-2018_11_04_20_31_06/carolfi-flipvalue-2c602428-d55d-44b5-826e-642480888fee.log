[INFO -- 2018-11-04 20:30:58]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-04 20:30:58]
Initialization strings:
[INFO -- 2018-11-04 20:30:58]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-04 20:30:58]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-04 20:30:58]
initSignal:0
[INFO -- 2018-11-04 20:30:58]
endSignal:10
[INFO -- 2018-11-04 20:30:58]
faultModel:0
[INFO -- 2018-11-04 20:31:01]
Backtrace BEGIN:
#0  0x0000555555555156 in equals (a=std::vector of length 4, capacity 4 = {...}, b=std::vector of length 4, capacity 4 = {...}) at lreg.cpp:38
#1  0x0000555555555744 in train (iterations=45000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:126
#2  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#3  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

33	vector<double> y; // observed values of training set inputs
34	vector<double> T; // the adjustment variables
35	
36	bool equals(vector<double> a, vector<double> b){
37		if (a.size() != b.size()) return false;
38		for (int i = 0; i<a.size(); i++){
39			if(a[i] != b[i]) return false;
40		}
41		return true;
42	}

Backtrace END
Fliping a bit of the pointer
Memory content before bitflip:0xf10xe10xff0xff0xff0x7f0x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd650
address max offset: 8
Memory content after  bitflip:0x710xe10xff0xff0xff0x7f0x000x00
frame name: execute
symbol name: input
symbol filename: lreg.cpp
symbol line: 134
value: 0x7fffffffe1f1 "/tmp/lreg/randInput"
value address: 0x7fffffffd650
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-04 20:31:01]
Fault Injection Successful after 3.923942804336548s
[INFO -- 2018-11-04 20:31:05]
event type: exit
[INFO -- 2018-11-04 20:31:05]
exit code: 0
