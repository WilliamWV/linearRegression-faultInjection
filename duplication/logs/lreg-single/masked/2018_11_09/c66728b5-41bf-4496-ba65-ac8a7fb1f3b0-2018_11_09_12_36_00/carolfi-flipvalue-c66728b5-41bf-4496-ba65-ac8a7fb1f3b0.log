[INFO -- 2018-11-09 12:35:50]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-09 12:35:50]
Initialization strings:
[INFO -- 2018-11-09 12:35:50]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-09 12:35:50]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-09 12:35:50]
initSignal:0
[INFO -- 2018-11-09 12:35:50]
endSignal:10
[INFO -- 2018-11-09 12:35:50]
faultModel:0
[EXCEPTION -- 2018-11-09 12:35:53]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-11-09 12:35:53]
Backtrace BEGIN:
#0  std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555772380, __last=0x5555557723a0, __result=0x555555772bb0) at /usr/include/c++/7/bits/stl_algobase.h:366
#1  0x0000555555557d58 in std::__copy_move_a<false, double const*, double*> (__first=0x555555772380, __last=0x5555557723a0, __result=0x555555772bb0) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x00005555555575a1 in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=-0.046974338715952905, __last=0, __result=-0.046986422548380237) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x0000555555556d1d in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=-0.046974338715952905, __last=0, __result=-0.046986422548380237) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x000055555555661f in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd5b0, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x00005555555556f2 in train (iterations=45000, alpha=2.2222199999999999e-05, N=4, stopsWhenStable=true) at lreg.cpp:124
#6  0x0000555555555a1c in execute (input=0x7fffffffe1f3 "/tmp/lreg/randInput") at lreg.cpp:157
#7  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

361						   is_move_assignable<_Tp>,
362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}

Backtrace END
Fliping a bit of the value pointed by a pointer
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xd00x2b0x770x550x550x550x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd5b8
address max offset: 8
Memory content after  bitflip:0xd00x2b0x770x550x550x550x000x08
frame name: std::vector<double, std::allocator<double> >::operator=
symbol name: this
symbol filename: lreg.cpp
symbol line: 0
value: 0x7fffffffd5b0
value address: 0x7fffffffd508
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-11-09 12:35:53]
Fault Injection Successful after 3.624319553375244s
[INFO -- 2018-11-09 12:35:59]
event type: exit
[INFO -- 2018-11-09 12:35:59]
exit code: 0
