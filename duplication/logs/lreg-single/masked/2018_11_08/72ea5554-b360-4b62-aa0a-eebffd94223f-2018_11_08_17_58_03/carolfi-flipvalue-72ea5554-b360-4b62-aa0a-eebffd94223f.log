[INFO -- 2018-11-08 17:57:54]
Starting flip_value script
version: 1.1
[INFO -- 2018-11-08 17:57:54]
Initialization strings:
[INFO -- 2018-11-08 17:57:54]
(1) file /tmp/lreg/lreg
[INFO -- 2018-11-08 17:57:54]
(2) set args /tmp/lreg/randInput /tmp/lreg/output /tmp/lreg/detected.log
[INFO -- 2018-11-08 17:57:54]
initSignal:0
[INFO -- 2018-11-08 17:57:54]
endSignal:10
[INFO -- 2018-11-08 17:57:54]
faultModel:0
[INFO -- 2018-11-08 17:57:55]
Backtrace BEGIN:
#0  0x0000555555556869 in std::_Vector_base<double, std::allocator<double> >::_Vector_base (this=0x7fffffffd517, __n=140737488344464, __a=...) at /usr/include/c++/7/bits/stl_vector.h:136
#1  0x0000555555556307 in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd5f0, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/stl_vector.h:328
#2  0x0000555555555713 in train (iterations=15000, alpha=0.00020000000000000001, N=2, stopsWhenStable=true) at lreg.cpp:126
#3  0x0000555555555a1c in execute (input=0x7fffffffe1f1 "/tmp/lreg/randInput") at lreg.cpp:157
#4  0x0000555555555c60 in main (argc=4, argv=0x7fffffffde48) at lreg.cpp:191

131	
132	      _Vector_base(size_t __n)
133	      : _M_impl()
134	      { _M_create_storage(__n); }
135	
136	      _Vector_base(size_t __n, const allocator_type& __a)
137	      : _M_impl(__a)
138	      { _M_create_storage(__n); }
139	
140	#if __cplusplus >= 201103L

Backtrace END
Memory content before bitflip:0x020x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd568
address max offset: 4
Memory content after  bitflip:0x020x000x080x00
frame name: train
symbol name: N
symbol filename: lreg.cpp
symbol line: 105
value: 524290
value address: 0x7fffffffd568
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-11-08 17:57:55]
Fault Injection Successful after 1.0671634674072266s
[INFO -- 2018-11-08 17:58:02]
event type: exit
[INFO -- 2018-11-08 17:58:02]
exit code: 0
