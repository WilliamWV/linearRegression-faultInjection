[INFO -- 2018-10-06 15:44:00]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-06 15:44:00]
Initialization strings:
[INFO -- 2018-10-06 15:44:00]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-06 15:44:00]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-06 15:44:00]
initSignal:0
[INFO -- 2018-10-06 15:44:00]
endSignal:10
[INFO -- 2018-10-06 15:44:00]
faultModel:2
[INFO -- 2018-10-06 15:44:05]
Backtrace BEGIN:
#0  0x0000555555557b8b in std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<double> (__first=0x555555771380, __last=0x5555557713a0, __result=0x555555771b80) at /usr/include/c++/7/bits/stl_algobase.h:367
#1  0x0000555555557940 in std::__copy_move_a<false, double const*, double*> (__first=0x555555771380, __last=0x5555557713a0, __result=0x555555771b80) at /usr/include/c++/7/bits/stl_algobase.h:386
#2  0x000055555555743f in std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=-30.568184305344861, __last=0, __result=-30.56728736818971) at /usr/include/c++/7/bits/stl_algobase.h:422
#3  0x0000555555556c65 in std::copy<__gnu_cxx::__normal_iterator<double const*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > > (__first=-30.568184305344861, __last=0, __result=-30.56728736818971) at /usr/include/c++/7/bits/stl_algobase.h:456
#4  0x00005555555565a7 in std::vector<double, std::allocator<double> >::operator= (this=0x7fffffffd830, __x=std::vector of length 4, capacity 4 = {...}) at /usr/include/c++/7/bits/vector.tcc:218
#5  0x000055555555587c in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:158
#6  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

362						   is_copy_assignable<_Tp>>;
363		  // trivial types can have deleted assignment
364		  static_assert( __assignable::type::value, "type is not assignable" );
365	#endif
366		  const ptrdiff_t _Num = __last - __first;
367		  if (_Num)
368		    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
369		  return __result + _Num;
370		}
371	    };

Backtrace END
Memory content before bitflip:0x040x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd914
address max offset: 4
Memory content after  bitflip:0x8d0x980x8b0x7d
frame name: main
symbol name: N
symbol filename: lreg.cpp
symbol line: 203
value: 2106300557
value address: 0x7fffffffd914
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-10-06 15:44:05]
Fault Injection Successful after 5.407318830490112s
[INFO -- 2018-10-06 15:44:10]
event type: exit
[INFO -- 2018-10-06 15:44:10]
exit code: 0
