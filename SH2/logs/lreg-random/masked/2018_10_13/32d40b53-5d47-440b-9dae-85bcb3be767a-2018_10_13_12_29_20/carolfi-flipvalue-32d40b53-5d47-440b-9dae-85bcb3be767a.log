[INFO -- 2018-10-13 12:29:10]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-13 12:29:10]
Initialization strings:
[INFO -- 2018-10-13 12:29:10]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-13 12:29:10]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-13 12:29:10]
initSignal:0
[INFO -- 2018-10-13 12:29:10]
endSignal:10
[INFO -- 2018-10-13 12:29:10]
faultModel:2
[INFO -- 2018-10-13 12:29:10]
Backtrace BEGIN:
#0  0x000055555555622e in std::vector<double, std::allocator<double> >::vector (this=0xbec50c97f7700000, __x=<error reading variable: Cannot access memory at address 0xbff00002a192fef6>) at /usr/include/c++/7/bits/stl_vector.h:326
#1  0x00005555555558e8 in train (iterations=30000, N=2, stopsWhenStable=true) at lreg.cpp:165
#2  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

321	       *  (i.e. capacity() == size() in the new %vector).
322	       *
323	       *  The newly-created %vector uses a copy of the allocator object used
324	       *  by @a __x (unless the allocator traits dictate a different object).
325	       */
326	      vector(const vector& __x)
327	      : _Base(__x.size(),
328		_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
329	      {
330		this->_M_impl._M_finish =

Backtrace END
Memory content before bitflip:0x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd924
address max offset: 4
Memory content after  bitflip:0x590xc20xd50xc7
frame name: main
symbol name: i2
symbol filename: lreg.cpp
symbol line: 198
value: 3352674905
value address: 0x7fffffffd924
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-10-13 12:29:10]
Fault Injection Successful after 0.9462783336639404s
[INFO -- 2018-10-13 12:29:19]
event type: exit
[INFO -- 2018-10-13 12:29:19]
exit code: 0
