[INFO -- 2018-10-13 16:59:19]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-13 16:59:19]
Initialization strings:
[INFO -- 2018-10-13 16:59:19]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-13 16:59:19]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-13 16:59:19]
initSignal:0
[INFO -- 2018-10-13 16:59:19]
endSignal:10
[INFO -- 2018-10-13 16:59:19]
faultModel:2
[INFO -- 2018-10-13 16:59:25]
Backtrace BEGIN:
#0  0x000055555555602e in std::vector<double, std::allocator<double> >::size (this=0x500000005) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x00005555555554db in partialDerivate (pos=3) at lreg.cpp:104
#2  0x0000555555555670 in adjust () at lreg.cpp:123
#3  0x0000555555555881 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:159
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x9d0x1e0x380x8b0x300xfc0xe60xc0
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd7d8
address max offset: 8
Memory content after  bitflip:0x3e0xba0xf10xeb0x550x680x100x5a
frame name: adjust
symbol name: PD
symbol filename: lreg.cpp
symbol line: 118
value: 6.9416423502698077e+125
value address: 0x7fffffffd7d8
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-13 16:59:25]
Fault Injection Successful after 6.535536289215088s
[INFO -- 2018-10-13 16:59:29]
event type: exit
[INFO -- 2018-10-13 16:59:29]
exit code: 0
