[INFO -- 2018-10-09 18:49:36]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-09 18:49:36]
Initialization strings:
[INFO -- 2018-10-09 18:49:36]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-09 18:49:36]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-09 18:49:36]
initSignal:0
[INFO -- 2018-10-09 18:49:36]
endSignal:10
[INFO -- 2018-10-09 18:49:36]
faultModel:2
[INFO -- 2018-10-09 18:49:42]
Backtrace BEGIN:
#0  0x000055555555602e in std::vector<double, std::allocator<double> >::size (this=0x0) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x0000555555555264 in predict (v=2) at lreg.cpp:74
#2  0x000055555555537b in meanSquaredError () at lreg.cpp:91
#3  0x0000555555555886 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:160
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x020x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x7fffffffd920
address max offset: 4
Memory content after  bitflip:0x490xfb0x0f0x28
frame name: main
symbol name: i1
symbol filename: lreg.cpp
symbol line: 198
value: 672136009
value address: 0x7fffffffd920
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-10-09 18:49:42]
Fault Injection Successful after 6.858473539352417s
[INFO -- 2018-10-09 18:49:46]
event type: exit
[INFO -- 2018-10-09 18:49:46]
exit code: 0
