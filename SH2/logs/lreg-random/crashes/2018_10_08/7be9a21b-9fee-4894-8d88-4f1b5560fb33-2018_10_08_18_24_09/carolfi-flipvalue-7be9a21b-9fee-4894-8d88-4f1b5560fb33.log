[INFO -- 2018-10-08 18:24:05]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-08 18:24:05]
Initialization strings:
[INFO -- 2018-10-08 18:24:05]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-08 18:24:05]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-08 18:24:05]
initSignal:0
[INFO -- 2018-10-08 18:24:05]
endSignal:10
[INFO -- 2018-10-08 18:24:05]
faultModel:2
[INFO -- 2018-10-08 18:24:06]
Backtrace BEGIN:
#0  adjust () at lreg.cpp:120
#1  0x0000555555555881 in train (iterations=30000, N=2, stopsWhenStable=true) at lreg.cpp:159
#2  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

115	*/
116	void adjust(){
117		
118		double PD;
119		for(UINT i1 = 0, i2 = 0, i3 = 0; 
120			selectTriUInt(i1, i2, i3)<T.size(); 
121			i1++, i2++, i3++)
122		{
123			PD = partialDerivate(selectTriUInt(i1, i2, i3));
124			// alpha is different from the canonical version because this works better

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the pointer
Memory content before bitflip:0xf00x130x770x550x550x550x000x00
Fault Model: Random bit-flip
base address to flip value: 0x55555575a170 
address max offset: 8
Memory content after  bitflip:0x380xe40xec0x720x0e0xfd0xd00xfb
frame name: train
symbol name: y
symbol filename: lreg.cpp
symbol line: 42
value: std::vector of length 8, capacity -37694595191096815 = {-1, -1, -1, -1, -1, -1, -1, -1}
value address: 0x55555575a160 <y>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-08 18:24:06]
Fault Injection Successful after 1.3464744091033936s
[INFO -- 2018-10-08 18:24:08]
event type: exit
[EXCEPTION -- 2018-10-08 18:24:08]
exit code: no exit code available
