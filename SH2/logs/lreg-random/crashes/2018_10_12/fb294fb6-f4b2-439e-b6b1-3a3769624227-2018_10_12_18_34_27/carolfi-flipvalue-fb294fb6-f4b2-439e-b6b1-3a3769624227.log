[INFO -- 2018-10-12 18:34:24]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-12 18:34:24]
Initialization strings:
[INFO -- 2018-10-12 18:34:24]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-12 18:34:24]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-12 18:34:24]
initSignal:0
[INFO -- 2018-10-12 18:34:24]
endSignal:10
[INFO -- 2018-10-12 18:34:24]
faultModel:2
[EXCEPTION -- 2018-10-12 18:34:25]
gdbException: Cannot access memory at address 0x13ee26911653a9ed
[INFO -- 2018-10-12 18:34:25]
Backtrace BEGIN:
#0  0x000055555555526a in predict (v=23) at lreg.cpp:74
#1  0x000055555555551d in partialDerivate (pos=1) at lreg.cpp:107
#2  0x0000555555555670 in adjust () at lreg.cpp:123
#3  0x0000555555555881 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:159
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

69		Predicts the value related to v using the Ts variables
70	*/
71	double predict(double v){
72		double val = 0;
73		for(UINT i1 = 0, i2 = 0, i3 = 0; 
74			selectTriUInt(i1, i2, i3)<T.size(); 
75			i1++, i2++, i3++)
76		{
77			val+= (T[selectTriUInt(i1, i2, i3)] * pow(v, selectTriUInt(i1, i2, i3)));
78		}

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Random bit-flip
base address to flip value: 0x55555575a198 
address max offset: 8
Memory content after  bitflip:0x200x420x780x320x660x760x5c0x98
frame name: adjust
symbol name: a1
symbol filename: lreg.cpp
symbol line: 45
value: -2.4953746724752083e-191
value address: 0x55555575a198 <a1>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-12 18:34:25]
Fault Injection Successful after 1.481546401977539s
[INFO -- 2018-10-12 18:34:25]
event type: exit
[EXCEPTION -- 2018-10-12 18:34:25]
exit code: no exit code available
