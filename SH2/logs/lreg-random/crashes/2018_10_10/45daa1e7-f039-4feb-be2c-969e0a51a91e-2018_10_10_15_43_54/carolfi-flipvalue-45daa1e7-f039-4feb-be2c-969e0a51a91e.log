[INFO -- 2018-10-10 15:43:43]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-10 15:43:43]
Initialization strings:
[INFO -- 2018-10-10 15:43:43]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-10 15:43:43]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-10 15:43:43]
initSignal:0
[INFO -- 2018-10-10 15:43:43]
endSignal:10
[INFO -- 2018-10-10 15:43:43]
faultModel:2
[INFO -- 2018-10-10 15:43:44]
Backtrace BEGIN:
#0  selectTriUInt (a=11, b=11, c=11) at lreg.cpp:48
#1  0x0000555555555400 in meanSquaredError () at lreg.cpp:91
#2  0x0000555555555886 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:160
#3  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

43	vector<double> T; // the adjustment variables
44	
45	double a1, a2, a3; // triplication of alpha
46	
47	UINT selectTriUInt(UINT a, UINT b, UINT c){
48		return (a == b)? a : c;
49	}
50	double selectTriDouble(double a, double b, double c){
51		return (a == b)? a : c;
52	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x310x000x000x000x000x000x000x00
Fault Model: Random bit-flip
base address to flip value: 0x555555771378
address max offset: 8
Memory content after  bitflip:0x2b0x620x7a0xeb0xb50x7e0x9c0x04
frame name: main
symbol name: T
symbol filename: lreg.cpp
symbol line: 43
value: std::vector of length 3, capacity 3 = {-2.0112599035457506, -4.4555650436951257, 1.7828715778407278}
value address: 0x55555575a180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-10 15:43:44]
Fault Injection Successful after 1.6215455532073975s
[INFO -- 2018-10-10 15:43:53]
event type: exit
[EXCEPTION -- 2018-10-10 15:43:53]
exit code: no exit code available
