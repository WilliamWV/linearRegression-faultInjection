[INFO -- 2018-10-06 19:08:00]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-06 19:08:00]
Initialization strings:
[INFO -- 2018-10-06 19:08:00]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-06 19:08:00]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-06 19:08:00]
initSignal:0
[INFO -- 2018-10-06 19:08:00]
endSignal:10
[INFO -- 2018-10-06 19:08:00]
faultModel:2
[INFO -- 2018-10-06 19:08:01]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x55555575a140 <x>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x0000555555555452 in meanSquaredError () at lreg.cpp:93
#2  0x0000555555555886 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:160
#3  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Fliping a bit of the value pointed by a pointer
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_start
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x180xc0
Fault Model: Random bit-flip
base address to flip value: 0x555555771540
address max offset: 8
Memory content after  bitflip:0x9b0xa60xe90x020xc40xb30x0c0xd8
frame name: std::vector<double, std::allocator<double> >::size
symbol name: this
symbol filename: lreg.cpp
symbol line: 0
value: 0x55555575a140 <x>
value address: 0x7fffffffd798
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-10-06 19:08:01]
Fault Injection Successful after 1.6937861442565918s
[INFO -- 2018-10-06 19:08:10]
event type: exit
[INFO -- 2018-10-06 19:08:10]
exit code: 0
