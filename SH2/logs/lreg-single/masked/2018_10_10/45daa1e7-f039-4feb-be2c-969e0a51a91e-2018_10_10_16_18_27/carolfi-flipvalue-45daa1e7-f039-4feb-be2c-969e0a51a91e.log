[INFO -- 2018-10-10 16:18:14]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-10 16:18:14]
Initialization strings:
[INFO -- 2018-10-10 16:18:14]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-10 16:18:14]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-10 16:18:14]
initSignal:0
[INFO -- 2018-10-10 16:18:14]
endSignal:10
[INFO -- 2018-10-10 16:18:14]
faultModel:0
[INFO -- 2018-10-10 16:18:16]
Backtrace BEGIN:
#0  0x0000555555556063 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a140 <x>, __n=18) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x000055555555550c in partialDerivate (pos=0) at lreg.cpp:107
#2  0x0000555555555670 in adjust () at lreg.cpp:123
#3  0x0000555555555881 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:159
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x120x000x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd77c
address max offset: 4
Memory content after  bitflip:0x120x000x100x00
frame name: partialDerivate
symbol name: i1
symbol filename: lreg.cpp
symbol line: 103
value: 1048594
value address: 0x7fffffffd77c
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-10-10 16:18:16]
Fault Injection Successful after 2.131295919418335s
[INFO -- 2018-10-10 16:18:26]
event type: exit
[INFO -- 2018-10-10 16:18:26]
exit code: 0
