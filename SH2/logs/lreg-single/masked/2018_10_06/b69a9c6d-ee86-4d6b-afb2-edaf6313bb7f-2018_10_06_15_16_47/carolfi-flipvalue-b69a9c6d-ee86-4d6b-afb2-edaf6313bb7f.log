[INFO -- 2018-10-06 15:16:37]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-06 15:16:37]
Initialization strings:
[INFO -- 2018-10-06 15:16:37]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-06 15:16:37]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-06 15:16:37]
initSignal:0
[INFO -- 2018-10-06 15:16:37]
endSignal:10
[INFO -- 2018-10-06 15:16:37]
faultModel:0
[INFO -- 2018-10-06 15:16:41]
Backtrace BEGIN:
#0  0x000055555555602e in std::vector<double, std::allocator<double> >::size (this=0x0) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x0000555555555264 in predict (v=24) at lreg.cpp:74
#2  0x000055555555551d in partialDerivate (pos=0) at lreg.cpp:107
#3  0x0000555555555670 in adjust () at lreg.cpp:123
#4  0x0000555555555881 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:159
#5  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x000x000x000x000x000x000x380x40
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd708
address max offset: 8
Memory content after  bitflip:0x000x040x000x000x000x000x380x40
frame name: predict
symbol name: v
symbol filename: lreg.cpp
symbol line: 71
value: 24.000000000003638
value address: 0x7fffffffd708
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-06 15:16:41]
Fault Injection Successful after 4.8732993602752686s
[INFO -- 2018-10-06 15:16:46]
event type: exit
[INFO -- 2018-10-06 15:16:46]
exit code: 0
