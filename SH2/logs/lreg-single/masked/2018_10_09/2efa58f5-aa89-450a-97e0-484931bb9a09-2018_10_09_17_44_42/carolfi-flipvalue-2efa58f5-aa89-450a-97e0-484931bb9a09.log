[INFO -- 2018-10-09 17:44:29]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-09 17:44:29]
Initialization strings:
[INFO -- 2018-10-09 17:44:29]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-09 17:44:29]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-09 17:44:29]
initSignal:0
[INFO -- 2018-10-09 17:44:29]
endSignal:10
[INFO -- 2018-10-09 17:44:29]
faultModel:0
[EXCEPTION -- 2018-10-09 17:44:30]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-10-09 17:44:30]
Backtrace BEGIN:
#0  __gnu_cxx::__alloc_traits<std::allocator<double> >::_S_select_on_copy (__a=...) at /usr/include/c++/7/ext/alloc_traits.h:94
#1  0x000055555555626e in std::vector<double, std::allocator<double> >::vector (this=0x7fffffffd870, __x=std::vector of length 2, capacity 2 = {...}) at /usr/include/c++/7/bits/stl_vector.h:328
#2  0x0000555555555900 in train (iterations=30000, N=2, stopsWhenStable=true) at lreg.cpp:165
#3  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

89	    template<typename _Ptr>
90	      static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
91	      destroy(_Alloc& __a, _Ptr __p)
92	      { _Base_type::destroy(__a, std::addressof(*__p)); }
93	
94	    static _Alloc _S_select_on_copy(const _Alloc& __a)
95	    { return _Base_type::select_on_container_copy_construction(__a); }
96	
97	    static void _S_on_swap(_Alloc& __a, _Alloc& __b)
98	    { std::__alloc_on_swap(__a, __b); }

Backtrace END
Memory content before bitflip:0x5f0x080x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffd814
address max offset: 4
Memory content after  bitflip:0x5f0x080x100x00
frame name: train
symbol name: i1
symbol filename: lreg.cpp
symbol line: 154
value: 1050719
value address: 0x7fffffffd814
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-10-09 17:44:30]
Fault Injection Successful after 1.923372745513916s
[INFO -- 2018-10-09 17:44:40]
event type: exit
[INFO -- 2018-10-09 17:44:40]
exit code: 0
