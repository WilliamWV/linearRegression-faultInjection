[INFO -- 2018-10-12 18:28:43]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-12 18:28:43]
Initialization strings:
[INFO -- 2018-10-12 18:28:43]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-12 18:28:43]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-12 18:28:43]
initSignal:0
[INFO -- 2018-10-12 18:28:43]
endSignal:10
[INFO -- 2018-10-12 18:28:43]
faultModel:0
[EXCEPTION -- 2018-10-12 18:28:44]
gdbException: Cannot access memory at address 0x80555555771540
[INFO -- 2018-10-12 18:28:44]
Backtrace BEGIN:
#0  0x000055555555604a in std::vector<double, std::allocator<double> >::size (this=0x55555575a180 <T>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x0000555555555264 in predict (v=-20) at lreg.cpp:74
#2  0x00005555555553e9 in meanSquaredError () at lreg.cpp:91
#3  0x0000555555555886 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:160
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Fliping a bit of the value pointed by a pointer
Fliping a bit of the pointer
Memory content before bitflip:0x040xe20xff0xff0xff0x7f0x000x00
Fault Model: Single bit-flip
base address to flip value: 0x7fffffffde68
address max offset: 8
Memory content after  bitflip:0x040xe20xff0xff0xff0x7f0x000x10
frame name: main
symbol name: argv
symbol filename: lreg.cpp
symbol line: 183
value: 0x7fffffffde68
value address: 0x7fffffffd8f0
Type: The type is a pointer.
Type sizeof: 8

[INFO -- 2018-10-12 18:28:44]
Fault Injection Successful after 1.5622367858886719s
[INFO -- 2018-10-12 18:28:44]
event type: exit
[EXCEPTION -- 2018-10-12 18:28:44]
exit code: no exit code available
