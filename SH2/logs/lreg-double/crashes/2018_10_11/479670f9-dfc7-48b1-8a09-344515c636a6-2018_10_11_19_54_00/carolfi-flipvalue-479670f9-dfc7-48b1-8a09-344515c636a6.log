[INFO -- 2018-10-11 19:53:54]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-11 19:53:54]
Initialization strings:
[INFO -- 2018-10-11 19:53:54]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-11 19:53:54]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-11 19:53:54]
initSignal:0
[INFO -- 2018-10-11 19:53:54]
endSignal:10
[INFO -- 2018-10-11 19:53:54]
faultModel:1
[INFO -- 2018-10-11 19:53:58]
Backtrace BEGIN:
#0  0x000055555555604a in std::vector<double, std::allocator<double> >::size (this=0x55555575a180 <T>) at /usr/include/c++/7/bits/stl_vector.h:671
#1  0x0000555555555264 in predict (v=-8) at lreg.cpp:74
#2  0x000055555555551d in partialDerivate (pos=2) at lreg.cpp:107
#3  0x0000555555555670 in adjust () at lreg.cpp:123
#4  0x0000555555555881 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:159
#5  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type
675	      max_size() const _GLIBCXX_NOEXCEPT

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the pointer
Memory content before bitflip:0xa00x130x770x550x550x550x000x00
Fault Model: Double bit-flip
base address to flip value: 0x55555575a188 
address max offset: 8
Memory content after  bitflip:0xa00x100x770x550x550x550x000x00
frame name: std::vector<double, std::allocator<double> >::size
symbol name: T
symbol filename: lreg.cpp
symbol line: 43
value: std::vector of length -92, capacity 4 = {-18.493937947849101, -55.67430070682358, 7.7661120238823766, 0.73254383141398827, 0, 4.001931731314097e-322, 4.6355706478057827e-310, 1.5810100666919889e-322, 4.0000038146972647, 2.9177547868963129e+179, -3.00000000154798, 8, -9, 13, 0, 4.001931731314097e-322, 0, 1.5810100666919889e-322, 2.1219957904712067e-314, 1.1286365773317652e-312, 0, 0, 0, 0, 0, 1.6304166312761136e-322, 4.6355706478247548e-310, 11.946452369670217, 3.7005466103373479, 1.6304166312761136e-322, 4.6355706478263358e-310, 11.946449829227392, 3.7004090425807687, 1.6304166312761136e-322, 0, 11.946452369670217, 3.7005466103373479, 7.1639518646980749e-322, 0, 3, 4, 12, -3, 8, -9, 13, 839, 287, 1519, 727, 47, 119, 2207, 1519, 0, 1.3487992131466031e-321, 0, -5, -6, -14, 1, -10, 7, -15, 14, -9, 19, 13, 3, -6, 23, 19, -16, -16, -22, 6, 22, -6, 14, -4, 14, 23, 21, -15, 8, -16, 29, -13, 0, 1.3487992131466031e-321, 4.6355706478350314e-310, 3, 4, 12, -3, 8, -9, 13, 839, 287, 1519, 727, 47, 119, 2207, 1519, 959, 959, 1847, 167, 11973, -67, 3253, 13, 3253, 13621, 10463, -2605, 661, -3227, 26743, -1607, 0, 2.6136072665001942e-321, -8, -5, -6, -14, 1, -10, 7, -15, 14, -9, 19, 13, 3, -6, 23, 19, -16, -16, -22, 6, 22, -6, 14, -4, 14, 23, 21, -15, 8, -16, 29, -13, -5, 15, -8, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.6136072665001942e-321, 6, 3, 4, 12, -3, 8, -9, 13, 839, 287...}
value address: 0x55555575a180 <T>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-11 19:53:58]
Fault Injection Successful after 4.860783338546753s
[INFO -- 2018-10-11 19:53:59]
event type: exit
[EXCEPTION -- 2018-10-11 19:53:59]
exit code: no exit code available
