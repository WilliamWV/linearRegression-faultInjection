[INFO -- 2018-10-10 15:32:01]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-10 15:32:01]
Initialization strings:
[INFO -- 2018-10-10 15:32:01]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-10 15:32:01]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-10 15:32:01]
initSignal:0
[INFO -- 2018-10-10 15:32:01]
endSignal:10
[INFO -- 2018-10-10 15:32:01]
faultModel:1
[EXCEPTION -- 2018-10-10 15:32:02]
gdbException: Cannot access memory at address 0x555511771360
[INFO -- 2018-10-10 15:32:03]
Backtrace BEGIN:
#0  0x0000555555556063 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a180 <T>, __n=0) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x0000555555555291 in predict (v=16) at lreg.cpp:77
#2  0x000055555555537b in meanSquaredError () at lreg.cpp:91
#3  0x0000555555555886 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:160
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0xf00xb20xb40xf50xbc0xbe0xd20x40
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd828
address max offset: 8
Memory content after  bitflip:0xf00xb20xb40xf50xbc0xbe0xd20x68
frame name: train
symbol name: MSE
symbol filename: lreg.cpp
symbol line: 153
value: 8.7575830924251084e+196
value address: 0x7fffffffd828
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-10 15:32:03]
Fault Injection Successful after 2.1714117527008057s
[INFO -- 2018-10-10 15:32:03]
event type: exit
[EXCEPTION -- 2018-10-10 15:32:03]
exit code: no exit code available
