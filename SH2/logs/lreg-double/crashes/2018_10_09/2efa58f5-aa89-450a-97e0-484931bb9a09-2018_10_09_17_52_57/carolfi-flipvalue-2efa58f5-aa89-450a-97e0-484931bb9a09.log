[INFO -- 2018-10-09 17:52:51]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-09 17:52:51]
Initialization strings:
[INFO -- 2018-10-09 17:52:51]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-09 17:52:51]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-09 17:52:51]
initSignal:0
[INFO -- 2018-10-09 17:52:51]
endSignal:10
[INFO -- 2018-10-09 17:52:51]
faultModel:1
[INFO -- 2018-10-09 17:52:55]
Backtrace BEGIN:
#0  libc_feholdsetround_sse_ctx (r=0, ctx=<synthetic pointer>) at ../sysdeps/i386/fpu/fenv_private.h:447
#1  __ieee754_pow_sse2 (x=19, y=3) at ../sysdeps/ieee754/dbl-64/e_pow.c:97
#2  0x00007ffff76b7b14 in __pow (x=19, y=3) at w_pow_compat.c:30
#3  0x00005555555560ba in std::pow<double, unsigned int> (__x=19, __y=3) at /usr/include/c++/7/cmath:418
#4  0x00005555555552c2 in predict (v=19) at lreg.cpp:77
#5  0x000055555555551d in partialDerivate (pos=1) at lreg.cpp:107
#6  0x0000555555555670 in adjust () at lreg.cpp:123
#7  0x0000555555555881 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:159
#8  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

442	../sysdeps/i386/fpu/fenv_private.h: No such file or directory.

Backtrace END
Fliping value of field name: i
Fliping array at pos: 0
Memory content before bitflip:0x2c0xfd0xff0xff
Fault Model: Double bit-flip
base address to flip value: 0x7ffff779a5b8 
address max offset: 4
Memory content after  bitflip:0x2c0xef0xff0xff
frame name: libc_feholdsetround_sse_ctx
symbol name: bigu
symbol filename: ../sysdeps/ieee754/dbl-64/upow.h
symbol line: 52
value: {i = {-4308, 1117257727}, x = 6597069766651.793}
value address: 0x7ffff779a5b8 <bigu>
Type: The type is a union.
Type sizeof: 8
Field name: i
Field Type: The type is an array.
Field Type sizeof: 8
Field name: x
Field Type: A floating point type.
Field Type sizeof: 8

[INFO -- 2018-10-09 17:52:55]
Fault Injection Successful after 4.930343866348267s
[INFO -- 2018-10-09 17:52:56]
event type: exit
[EXCEPTION -- 2018-10-09 17:52:56]
exit code: no exit code available
