[INFO -- 2018-10-06 16:15:28]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-06 16:15:28]
Initialization strings:
[INFO -- 2018-10-06 16:15:28]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-06 16:15:28]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-06 16:15:28]
initSignal:0
[INFO -- 2018-10-06 16:15:28]
endSignal:10
[INFO -- 2018-10-06 16:15:28]
faultModel:1
[INFO -- 2018-10-06 16:15:31]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a160 <y>, __n=19) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x0000555555555545 in partialDerivate (pos=2) at lreg.cpp:107
#2  0x0000555555555670 in adjust () at lreg.cpp:123
#3  0x0000555555555881 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:159
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x130x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd730
address max offset: 8
Memory content after  bitflip:0x130x000x000x000x000x000x000x14
frame name: std::vector<double, std::allocator<double> >::operator[]
symbol name: __n
symbol filename: /usr/include/c++/7/bits/stl_vector.h
symbol line: 795
value: 1441151880758558739
value address: 0x7fffffffd730
Type: The type is an integer type.
Type sizeof: 8

[INFO -- 2018-10-06 16:15:31]
Fault Injection Successful after 3.755409002304077s
[INFO -- 2018-10-06 16:15:31]
event type: exit
[EXCEPTION -- 2018-10-06 16:15:31]
exit code: no exit code available
