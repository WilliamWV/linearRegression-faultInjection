[INFO -- 2018-10-12 15:44:00]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-12 15:44:00]
Initialization strings:
[INFO -- 2018-10-12 15:44:00]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-12 15:44:00]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-12 15:44:00]
initSignal:0
[INFO -- 2018-10-12 15:44:00]
endSignal:10
[INFO -- 2018-10-12 15:44:00]
faultModel:1
[EXCEPTION -- 2018-10-12 15:44:02]
pythonException: empty range for randrange() (0,0, 0)
[INFO -- 2018-10-12 15:44:02]
Backtrace BEGIN:
#0  0x00005555555555ab in partialDerivate (pos=2) at lreg.cpp:103
#1  0x0000555555555670 in adjust () at lreg.cpp:123
#2  0x0000555555555881 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:159
#3  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

98		Calculates the partial derivate of the meanSquaredError function 
99		to the adjustment variable whose position in T is passed in pos
100	*/
101	double partialDerivate(UINT pos){
102		double pD = 0;
103		for(UINT i1 = 0, i2 = 0, i3 = 0; 
104			selectTriUInt(i1, i2, i3)<x.size(); 
105			i1++, i2++, i3++)
106		{
107			pD += ((predict(x[selectTriUInt(i1, i2, i3)]) - y[selectTriUInt(i1, i2, i3)])*pow(x[selectTriUInt(i1, i2, i3)], pos));	

Backtrace END
Memory content before bitflip:0x060x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x7fffffffd91c
address max offset: 4
Memory content after  bitflip:0x060x030x000x00
frame name: main
symbol name: predictions
symbol filename: lreg.cpp
symbol line: 203
value: 774
value address: 0x7fffffffd91c
Type: The type is an integer type.
Type sizeof: 4

[INFO -- 2018-10-12 15:44:02]
Fault Injection Successful after 2.5631914138793945s
[INFO -- 2018-10-12 15:44:04]
event type: exit
[EXCEPTION -- 2018-10-12 15:44:04]
exit code: no exit code available
