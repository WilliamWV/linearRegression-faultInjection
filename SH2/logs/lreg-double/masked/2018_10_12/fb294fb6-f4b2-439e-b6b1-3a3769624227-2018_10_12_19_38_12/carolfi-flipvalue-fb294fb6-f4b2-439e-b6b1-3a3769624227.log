[INFO -- 2018-10-12 19:38:00]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-12 19:38:00]
Initialization strings:
[INFO -- 2018-10-12 19:38:00]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-12 19:38:00]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-12 19:38:00]
initSignal:0
[INFO -- 2018-10-12 19:38:00]
endSignal:10
[INFO -- 2018-10-12 19:38:00]
faultModel:1
[INFO -- 2018-10-12 19:38:03]
Backtrace BEGIN:
#0  predict (v=-29) at lreg.cpp:81
#1  0x000055555555551d in partialDerivate (pos=3) at lreg.cpp:107
#2  0x0000555555555670 in adjust () at lreg.cpp:123
#3  0x0000555555555881 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:159
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

76		{
77			val+= (T[selectTriUInt(i1, i2, i3)] * pow(v, selectTriUInt(i1, i2, i3)));
78		}
79		return val;
80		
81	}
82	/**
83		Calculates the mean squared error of T
84	*/
85	double meanSquaredError(){

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_finish
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x555555771880
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x900x000x000x00
frame name: predict
symbol name: x
symbol filename: lreg.cpp
symbol line: 41
value: std::vector of length 36, capacity 64 = {-11, 4, -10, -11, 10, 16, 13, -10, 16, -11, 24, 23, 8, -20, -18, -23, 3, -1, -16, -18, -25, -19, -30, -18, 31, -17, 3, -29, -2, -3, 3, 3, -3, -8, -11, 13}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-12 19:38:03]
Fault Injection Successful after 3.2564022541046143s
[INFO -- 2018-10-12 19:38:12]
event type: exit
[INFO -- 2018-10-12 19:38:12]
exit code: 0
