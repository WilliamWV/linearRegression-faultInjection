[INFO -- 2018-10-13 15:06:50]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-13 15:06:50]
Initialization strings:
[INFO -- 2018-10-13 15:06:50]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-13 15:06:50]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-13 15:06:50]
initSignal:0
[INFO -- 2018-10-13 15:06:50]
endSignal:10
[INFO -- 2018-10-13 15:06:50]
faultModel:1
[EXCEPTION -- 2018-10-13 15:06:51]
pythonException: Unable to exit loop in struct fields; Exiting wihtout making a bit flip
[INFO -- 2018-10-13 15:06:52]
Backtrace BEGIN:
#0  0x0000555555556063 in std::vector<double, std::allocator<double> >::operator[] (this=0x55555575a180 <T>, __n=0) at /usr/include/c++/7/bits/stl_vector.h:798
#1  0x0000555555555291 in predict (v=22) at lreg.cpp:77
#2  0x000055555555551d in partialDerivate (pos=0) at lreg.cpp:107
#3  0x0000555555555670 in adjust () at lreg.cpp:123
#4  0x0000555555555881 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:159
#5  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

793	       */
794	      reference
795	      operator[](size_type __n) _GLIBCXX_NOEXCEPT
796	      {
797		__glibcxx_requires_subscript(__n);
798		return *(this->_M_impl._M_start + __n);
799	      }
800	
801	      /**
802	       *  @brief  Subscript access to the data contained in the %vector.

Backtrace END
Memory content before bitflip:0x2d0x430x1c0xeb0xe20x360x0a0x3f
Fault Model: Double bit-flip
base address to flip value: 0x55555575a1a8 
address max offset: 8
Memory content after  bitflip:0x2d0x430x1c0xeb0xf00x360x0a0x3f
frame name: adjust
symbol name: a3
symbol filename: lreg.cpp
symbol line: 45
value: 5.0000407453626397e-05
value address: 0x55555575a1a8 <a3>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-13 15:06:52]
Fault Injection Successful after 2.0767340660095215s
[INFO -- 2018-10-13 15:07:00]
event type: exit
[INFO -- 2018-10-13 15:07:00]
exit code: 0
