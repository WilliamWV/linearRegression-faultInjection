[INFO -- 2018-10-13 15:17:05]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-13 15:17:05]
Initialization strings:
[INFO -- 2018-10-13 15:17:05]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-13 15:17:05]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-13 15:17:05]
initSignal:0
[INFO -- 2018-10-13 15:17:05]
endSignal:10
[INFO -- 2018-10-13 15:17:05]
faultModel:1
[INFO -- 2018-10-13 15:17:09]
Backtrace BEGIN:
#0  std::vector<double, std::allocator<double> >::size (this=0x200000002) at /usr/include/c++/7/bits/stl_vector.h:670
#1  0x0000555555555264 in predict (v=9) at lreg.cpp:74
#2  0x000055555555537b in meanSquaredError () at lreg.cpp:91
#3  0x0000555555555886 in train (iterations=90000, N=4, stopsWhenStable=true) at lreg.cpp:160
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

665	#endif
666	
667	      // [23.2.4.2] capacity
668	      /**  Returns the number of elements in the %vector.  */
669	      size_type
670	      size() const _GLIBCXX_NOEXCEPT
671	      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
672	
673	      /**  Returns the size() of the largest possible %vector.  */
674	      size_type

Backtrace END
Memory content before bitflip:0x460x5a0xb70xf40x390x4d0xf70x3e
Fault Model: Double bit-flip
base address to flip value: 0x55555575a1a0 
address max offset: 8
Memory content after  bitflip:0x460x5a0xb70xf40x390x7d0xf70x3e
frame name: main
symbol name: a2
symbol filename: lreg.cpp
symbol line: 45
value: 2.2401013934326171e-05
value address: 0x55555575a1a0 <a2>
Type: A floating point type.
Type sizeof: 8

[INFO -- 2018-10-13 15:17:09]
Fault Injection Successful after 4.3010923862457275s
[INFO -- 2018-10-13 15:17:15]
event type: exit
[INFO -- 2018-10-13 15:17:15]
exit code: 0
