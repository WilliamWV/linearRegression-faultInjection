[INFO -- 2018-10-08 19:31:44]
Starting flip_value script
version: 1.1
[INFO -- 2018-10-08 19:31:44]
Initialization strings:
[INFO -- 2018-10-08 19:31:44]
(1) file /tmp/lreg/lreg
[INFO -- 2018-10-08 19:31:44]
(2) set args /tmp/lreg/randInput /tmp/lreg/output
[INFO -- 2018-10-08 19:31:44]
initSignal:0
[INFO -- 2018-10-08 19:31:44]
endSignal:10
[INFO -- 2018-10-08 19:31:44]
faultModel:1
[INFO -- 2018-10-08 19:31:45]
Backtrace BEGIN:
#0  0x00005555555552b2 in predict (v=12) at lreg.cpp:77
#1  0x000055555555551d in partialDerivate (pos=0) at lreg.cpp:107
#2  0x0000555555555670 in adjust () at lreg.cpp:123
#3  0x0000555555555881 in train (iterations=60000, N=3, stopsWhenStable=true) at lreg.cpp:159
#4  0x0000555555555dba in main (argc=3, argv=0x7fffffffde68) at lreg.cpp:225

72		double val = 0;
73		for(UINT i1 = 0, i2 = 0, i3 = 0; 
74			selectTriUInt(i1, i2, i3)<T.size(); 
75			i1++, i2++, i3++)
76		{
77			val+= (T[selectTriUInt(i1, i2, i3)] * pow(v, selectTriUInt(i1, i2, i3)));
78		}
79		return val;
80		
81	}

Backtrace END
Fliping value of field: std::_Vector_base<double, std::allocator<double> >
Fliping value of field: _M_impl
Fliping value of field: _M_end_of_storage
Fliping a bit of the value pointed by a pointer
Memory content before bitflip:0x000x000x000x000x000x000x000x00
Fault Model: Double bit-flip
base address to flip value: 0x555555771640
address max offset: 8
Memory content after  bitflip:0x000x000x000x000x000x880x000x00
frame name: adjust
symbol name: x
symbol filename: lreg.cpp
symbol line: 41
value: std::vector of length 20, capacity 32 = {-3, 11, -10, 8, 16, 12, 15, -15, -11, 20, 13, 3, 21, -12, -3, 5, 20, -1, -1, -16}
value address: 0x55555575a140 <x>
Type: The type is a structure.
Type sizeof: 24
Field name: std::_Vector_base<double, std::allocator<double> >
Field Type: The type is a structure.
Field Type sizeof: 24

[INFO -- 2018-10-08 19:31:45]
Fault Injection Successful after 1.6296117305755615s
[INFO -- 2018-10-08 19:31:54]
event type: exit
[INFO -- 2018-10-08 19:31:54]
exit code: 0
